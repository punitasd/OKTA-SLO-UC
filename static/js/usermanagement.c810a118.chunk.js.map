{"version":3,"file":"static/js/usermanagement.c810a118.chunk.js","mappings":"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0B,OAAQ,CACN,CACE1B,KACE,2hBACF7N,MAAO,kBAET,CACE6N,KACE,+LACF7N,MAAO,mBAGXwP,QAAS,CACP,CACE3B,KACE,yaACF7N,MAAO,sBAGXyP,QAAS,CACP,CACE5B,KACE,m5BACF7N,MAAO,sBAET,CACE6N,KACE,4TACF7N,MAAO,uBAGX0P,KAAM,CACJ,CACE7B,KACE,m5BACF7N,MAAO,sBAET,CACE6N,KACE,4TACF7N,MAAO,uBAGX2P,WAAY,CACV,CACE9B,KACE,m5BACF7N,MAAO,sBAET,CACE6N,KACE,4TACF7N,MAAO,sBAET,CACE6N,KACE,6yBACF7N,MAAO,uBAGX4P,aAAc,CACZ,CACE/B,KACE,m5BACF7N,MAAO,sBAET,CACE6N,KACE,4TACF7N,MAAO,sBAET,CACE6N,KACE,6yBACF7N,MAAO,uBAGX6P,UAAW,CACT,CACEhC,KACE,6nBACF7N,MAAO,sBAET,CACE6N,KACE,89BACF7N,MAAO,uBAGX8P,WAAY,CACV,CACEjC,KACE,ouBACF7N,MAAO,uBAGX+P,cAAe,CACb,CACElC,KACE,iYACF7N,MAAO,uBAGXgQ,YAAa,CACX,CACEnC,KACE,i7BACF7N,MAAO,sBAET,CACE6N,KACE,41BACF7N,MAAO,uBAGXiQ,KAAM,CACJ,CACEpC,KAAM,gCACN7N,MAAO,sBAET,CACE6N,KACE,gGACF7N,MAAO,uBAGXkQ,gBAAiB,CACf,CACErC,KACE,2ZACF7N,MAAO,sBAGXmQ,UAAW,CACT,CACEtC,KACE,qJACF7N,MAAO,4BAET,CACE6N,KACE,0IACF7N,MAAO,sBAGXoQ,OAAQ,CACN,CACEvC,KACE,qJACF7N,MAAO,4BAET,CACE6N,KACE,0IACF7N,MAAO,sBAGXqQ,aAAc,CACZ,CACExC,KACE,kOACF7N,MAAO,uBAGXsQ,QAAS,CACP,CACEzC,KACE,kOACF7N,MAAO,uBAGXuQ,aAAc,CACZ,CACE1C,KACE,6IACF7N,MAAO,eAET,CACE6N,KACE,+bACF7N,MAAO,WAET,CACE6N,KACE,kSACF7N,MAAO,WAET,CACE6N,KACE,qOACF7N,MAAO,WAET,CACE6N,KACE,6KACF7N,MAAO,YAGXwQ,aAAc,CACZ,CACE3C,KACE,6IACF7N,MAAO,eAET,CACE6N,KACE,wQACF7N,MAAO,WAET,CACE6N,KACE,iUACF7N,MAAO,WAET,CACE6N,KACE,sZACF7N,MAAO,WAET,CACE6N,KACE,mKACF7N,MAAO,YAGXyQ,aAAc,CACZ,CACE5C,KACE,6IACF7N,MAAO,eAET,CACE6N,KACE,inBACF7N,MAAO,WAET,CACE6N,KACE,4FACF7N,MAAO,YAGX0Q,aAAc,CACZ,CACE7C,KACE,6IACF7N,MAAO,eAET,CACE6N,KACE,whBACF7N,MAAO,WAET,CACE6N,KACE,sGACF7N,MAAO,WAET,CACE6N,KACE,2FACF7N,MAAO,WAET,CACE6N,KAAM,6CACN7N,MAAO,YAGX2Q,eAAgB,CACd,CACE9C,KACE,6IACF7N,MAAO,eAET,CACE6N,KACE,sPACF7N,MAAO,WAET,CACE6N,KACE,okGACF7N,MAAO,YAGX4Q,QACE,qdACFC,SACE,6IACFC,SACE,mPACFC,gBAAiB,CACf,CACElD,KACE,kFACF7N,MAAO,WAET,CACE6N,KAAM,uCACN7N,MAAO,WAET,CACE6N,KAAM,2CACN7N,MAAO,WAET,CACE6N,KAAM,2CACN7N,MAAO,YAGXgR,OACE,yfACFC,QAAS,CACP,CACEpD,KAAM,2DAER,CACEA,KAAM,qDAER,CACEA,KAAM,2DAER,CACEA,KAAM,2DAGVqD,MAAO,CACL,CACErD,KACE,kuHAGNsD,IACE,0kCACFC,SACE,6iEACFC,SAAU,CACR,CACExD,KACE,ueAEJ,CACEA,KACE,4dAGNyD,MACE,kMACFC,UAAW,CACT,CACE1D,KACE,wuCACF7N,MAAO,YAGXwR,SACE,+EACFC,SACE,07BACFC,MACE,4xCACFC,YACE,qQACFC,eAAgB,CACd,CACE/D,KACE,uQACF7N,MAAO,YAGX6R,eAAgB,CACd,CACEhE,KACE,ykBACF7N,MAAO,YAGX8R,aAAc,CACZ,CACEjE,KACE,+WACF7N,MAAO,YAGX+R,OAAQ,CACN,CACElE,KACE,iWACF7N,MAAO,YAGXgS,WAAY,CACV,CACEnE,KACE,kYACF7N,MAAO,uBAGXiS,MAAO,CACL,CACEpE,KACE,yoCACF7N,MAAO,YAGXkS,SAAU,CACR,CACErE,KACE,iRACF7N,MAAO,YAGXmS,QACE,8EACFC,MACE,8mBACFC,SACE,+tFACFC,QAAS,CACP,CACEzE,KACE,yYACF7N,MAAO,WAET,CACE6N,KACE,6uBACF7N,MAAO,YAGXuS,YAAa,CACX,CACE1E,KACE,uHACF7N,MAAO,WAET,CACE6N,KACE,2HACF7N,MAAO,WAET,CACE6N,KACE,uHACF7N,MAAO,WAET,CACE6N,KACE,2HACF7N,MAAO,YAGXwS,SAAU,CACR,CACE3E,KACE,oTACF7N,MAAO,YAGXyS,aACE,4HACFC,OACE,0XACFC,KAAM,CACJ,CACE9E,KACE,qIACF7N,MAAO,WAET,CACE6N,KACE,qFACF7N,MAAO,WAET,CACE6N,KACE,qFACF7N,MAAO,WAET,CACE6N,KAAM,kDACN7N,MAAO,YAGX4S,KAAM,CACJ,CACE/E,KACE,4HACF7N,MAAO,sBAET,CACE6N,KAAM,2CACN7N,MAAO,sBAET,CACE6N,KAAM,2CACN7N,MAAO,uBAGX6S,KAAM,CACJ,CACEhF,KACE,msEAGNiF,cAAe,CACb,CACEjF,KACE,2+CAEJ,CACEA,KACE,uEACF7N,MAAO,QAET,CACE6N,KACE,0EACF7N,MAAO,SAGX+S,MAAO,CACL,CACElF,KACE,wXAEJ,CACEA,KACE,iGAEJ,CACEA,KAAM,+DAER,CACEA,KAAM,iEAGVmF,UAAW,CACT,CACEnF,KACE,+uBAEJ,CACEA,KACE,wxCAGNoF,KAAM,CACJ,CACEpF,KACE,6nCAEJ,CACEA,KACE,0JAEJ,CACEA,KACE,+KAGNqF,IAAK,CACH,CACErF,KACE,gkBAGNsF,IAAK,CACH,CACEtF,KACE,0vHACF7N,MAAO,YAGXoT,oBAAqB,CACnB,CACEvF,KACE,oMACF7N,MAAO,UACPqT,SAAU,UACVC,SAAU,YAGdC,mBAAoB,CAClB,CACE1F,KACE,oMACF7N,MAAO,UACPqT,SAAU,UACVC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","sources":["components/UserManagement/Customer/UniqueCustomer/Users/index.tsx","components/UserManagement/Customer/UniqueCustomer/Users/Users.tsx","components/UserManagement/Customer/UniqueCustomer/UniqueCustomer.tsx","components/UserManagement/Customer/UniqueCustomer/index.tsx","components/UserManagement/Customer/UserDetails/UserDetails.tsx","components/UserManagement/Customer/UserDetails/index.tsx","components/UserManagement/Customer/Customer.tsx","components/UserManagement/Customer/index.tsx","components/UserManagement/Profile/Profile.tsx","components/UserManagement/Profile/index.tsx","state/utils/index.js","state/reducers/ccDataGrid/index.ts","components/common/CCDataGrid-MUI/HOCs/index.js","components/common/formatted-message/FormattedMessage.js","components/common/formatted-message/index.js","configs/IdConfig.js","components/common/dropdown-button-mui/index.js","components/common/dropdown-button-mui/DropdownButton.js","components/common/FormattedBrandMessage/FormattedBrandMessage.js","components/common/FormattedBrandMessage/index.js","components/common/action-dropdown-button-mui/ActionDropdown.js","components/common/action-dropdown-button-mui/index.js","components/common/chip/index.js","components/common/chip/ChipComponent.js","components/common/icon/IconMui.js","components/common/CCDataGrid-MUI/THeader/index.js","components/common/datagrid/DataGridConstants.js","assets/icons/icons.js","components/common/action-dropdown-mui/ActionDropdown.js","components/common/action-dropdown-mui/index.js","components/common/datagrid/HeaderDropdown.js","components/common/select-dropdown-mui/SelectDropdown.js","components/common/select-dropdown-mui/index.js","components/common/datagrid/Icons.js","utils/SpogDataGridUtil.js","components/common/datagrid/DataGridHelper.js","components/common/CCReactTable-MUI/PaginationFooter/GridFooterWithApi/WithoutPageNumber.js","components/common/CCReactTable-MUI/PaginationFooter/GridFooterWithApi/WithPageNumber.js","components/common/CCReactTable-MUI/PaginationFooter/GridFooterWithoutApi/WithoutPageNumber.js","components/common/CCReactTable-MUI/PaginationFooter/GridFooterWithoutApi/WithPageNumber.js","components/common/CCReactTable-MUI/GridFooter.js","components/common/datagrid/utils.js","components/common/CCReactTable-MUI/CCReactTableMUI.js","components/common/CCReactTable-MUI/index.js","components/common/CCDataGrid-MUI/TBody/TBody.js","state/selectors/CommonSelectors.js","components/common/CCDataGrid-MUI/GridSettings/CheckBoxItem.js","components/common/CCDataGrid-MUI/GridSettings/GridSettings.js","components/common/CCDataGrid-MUI/GridSettings/index.js","components/common/CCDataGrid-MUI/CCTable/index.js","components/common/CCDataGrid-MUI/index.js","components/UserManagement/UMTable/UmTableConstants.js","components/UserManagement/UMTable/UMTable.tsx","components/common/navigator/index.tsx","components/common/navigator/Navigator.tsx","components/UserManagement/UserManagement.tsx","components/UserManagement/index.tsx","routes/SubComponentRouter.js","routes/index.js"],"sourcesContent":["import homeReducer from \"../../../../../state/reducers/homeReducer\";\n// import login from \"../../../../state/reducers/loginReducer\";\nimport Users from \"./Users\";\nexport const reducers = {homeReducer};\nexport const Component = Users;\n","import React from 'react'\n\nexport default function Users() {\n  return (\n    <div>Users</div>\n  )\n}\n","import React from 'react'\nimport { SubComponentRouter } from '../../../../routes'\n\nfunction UniqueCustomer(props:any) {\n  return (\n    <div>Unique User\n        <SubComponentRouter\n      {...props}\n    />\n    </div>\n  )\n}\n\nexport default UniqueCustomer","import homeReducer from \"../../../../state/reducers/homeReducer\";\n// import login from \"../../../../state/reducers/loginReducer\";\nimport UniqueCustomer from \"./UniqueCustomer\";\nexport const reducers = {homeReducer}; //use same \nexport const Component = UniqueCustomer;\n","import React from 'react'\n\nfunction UserDetails() {\n  return (\n    <div>UserDetails</div>\n  )\n}\n\nexport default UserDetails","import homeReducer from \"../../../../state/reducers/homeReducer\";\nimport UserDetails from \"./UserDetails\";\nexport const reducers = {homeReducer};\nexport const Component = UserDetails;\n","import React from 'react';\nimport { SubComponentRouter } from '../../../routes';\nfunction Customer(props:any) {\n  return (\n    <div>Customer\n\n<SubComponentRouter\n      {...props}\n    />\n    </div>\n\n  )\n}\n\nexport default Customer","import homeReducer from \"../../../state/reducers/homeReducer\";\nimport Customer from \"./Customer\";\nexport const reducers = {homeReducer};\nexport const Component = Customer;\n","import React from 'react'\n\nfunction Profile() {\n  return (\n    <div>Profile</div>\n  )\n}\n\nexport default Profile","import homeReducer from \"../../../state/reducers/homeReducer\";\nimport login from \"../../../state/reducers/loginReducer\";\nimport Profile from \"./Profile\";\nexport const reducers = {homeReducer, login};\nexport const Component = Profile;\n","export const combineReducersWithNamespace = (reducers, getNamespace) => {\n  return (state = {}, action) => {\n    const namespace = getNamespace(action);\n    let stateWithNamespace = state;\n\n    if (namespace === undefined) {\n      return state;\n    }\n\n    if (stateWithNamespace[namespace] === undefined) {\n      stateWithNamespace = {\n        ...state,\n        [namespace]: {}\n      };\n    }\n\n    return Object.keys(reducers).reduce(\n      (nextState, key) => {\n        nextState[namespace][key] = reducers[key](\n          stateWithNamespace[namespace][key],\n          action,\n          namespace\n        );\n        return nextState;\n      },\n      {\n        ...state,\n        [namespace]: {}\n      }\n    );\n  };\n};\n\nexport default combineReducersWithNamespace;\n","import { combineReducers } from \"redux\";\n\nimport { combineReducersWithNamespace } from \"../../utils/index\";\n\nimport * as ccDataGridConstants from \"../../constants/ccDataGrid\";\n\nimport * as constant from \"../../../utils/appConstants\";\nimport { cloneDeep } from \"lodash\";\n\n// context stuff\nconst config = (state = {}, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_INITIALIZE:\n      return {\n        ...action.config,\n        additionalParameters: action.additionalParameters\n      };\n    default:\n      return state;\n  }\n};\n\n// loading indicator counter\n// 0 means not loading\n// for every REQ loading = loading + 1\n// for every SUCCESSS/FAILURE loading = loading - 1\n// hopefully, it'll reach 0\nconst loading = (state = 0, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_INITIALIZE:\n    case ccDataGridConstants.RESET_CCDATAGRID:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_LOCAL_DATA:\n      return 0;\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_REQUEST:\n    case ccDataGridConstants.START_LOADER:\n      return state + 1;\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_FAILURE:\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\n// state stuff\nconst sorted = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_UPDATE_SORTED:\n      return action.sorted;\n    default:\n      return state;\n  }\n};\n\nconst page = (state = 1, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n      return action.response.pagination && action.response.pagination.curr_page\n        ? action.response.pagination.curr_page\n        : 1;\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE_LOCALLY:\n      return action.page;\n    default:\n      return state;\n  }\n};\n\nconst pages = (state = 0, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n      return action.response.pagination && action.response.pagination.total_page\n        ? action.response.pagination.total_page\n        : 1;\n    default:\n      return state;\n  }\n};\n\nconst pageSize = (state = 25, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n      return action.pagination === false\n        ? 25\n        : action.response.pagination && action.response.pagination.page_size\n        ? action.response.pagination.page_size\n        : 25;\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE_SIZE:\n      return action.pageSize;\n    default:\n      return state;\n  }\n};\n\nconst totalSize = (state = -1, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n      return action.response.pagination && action.response.pagination.total_size\n        ? action.response.pagination.total_size\n        : 25;\n    // return action.response.pagination.total_size;\n    default:\n      return state;\n  }\n};\n\nconst columns = (state = null, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_STORE_COLUMNS:\n      return action.columns;\n    default:\n      return state;\n  }\n};\n\ninterface checkedAction {\n  type:string\n  [key: string]: any;\n  \n}\n\nexport interface checkedState {\n  checked: [];\n}\n\n\n// interface checkedState {\n//   action: {\n//     type: string\n//   }\n// }\n\nconst checked = (state = {}, action:checkedAction) => {\n  let rVal:any = null;\n\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_UNCHECK_ALL:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_SORTED:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE_SIZE:\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH:\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_LOCAL_DATA:\n    case ccDataGridConstants.CCDATAGRID_CLEAR_ADVANCED_SEARCH:\n      return {};\n    case ccDataGridConstants.CCDATAGRID_CHECK_ROWS:\n      return action.rowIds.reduce(\n        (nextState:any, rowId:string) => ({\n          ...nextState,\n          [rowId]: true\n        }),\n        state\n      );\n    case ccDataGridConstants.CCDATAGRID_UNCHECK_ROW:\n      rVal = { ...state };\n\n      if (state[action.rowId as keyof object]) {\n        delete rVal[action.rowId];\n      }\n      return rVal;\n    case ccDataGridConstants.CCDATAGRID_CLEAR_DATA:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst showAdvancedSearchForm = (state = false, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SHOW_ADVANCED_SEARCH_FORM:\n      return true;\n    case ccDataGridConstants.CCDATAGRID_HIDE_ADVANCED_SEARCH_FORM:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst advancedSearch = (state = null, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH:\n      return action.values;\n    case ccDataGridConstants.CCDATAGRID_CLEAR_ADVANCED_SEARCH:\n    case ccDataGridConstants.CCDATAGRID_REMOVE_SEARCH_TAGS_RELOAD:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst showCCDataGridCurrentSearch = (state = false, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SHOW_CURRENT_SEARCH:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nconst advancedSearchOptionsSelected = (state = null, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH_OPTIONS_SELECTED:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nconst advancedSearchOptions = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH_OPTIONS:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_ADVANCED_SEARCH_OPTIONS:\n      return action.data;\n    // case ccDataGridConstants.CCDATAGRID_UPDATE_ADVANCED_SEARCH_OPTIONS:\n    //   return {\n    //     options: action.data\n    //   }\n    default:\n      return state;\n  }\n};\n\nconst advancedSearchOptionsUnChanged = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH_OPTIONS_UNCHANGED:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nconst optionsForTags = (state = {}, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_OPTIONS_FOR_TAGS:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_OPTIONS_FOR_TAGS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst selectedSavedSearchInitialState = {\n  filter_id: \"\",\n  filter_name: \"\"\n};\n\nconst selectedSavedSearch = (\n  state = selectedSavedSearchInitialState,\n  action:any\n) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SELECTED_SAVED_SEARCH:\n      return {\n        filter_id: action.filter_id,\n        filter_name: action.filter_name,\n        ...action.data\n      };\n    case ccDataGridConstants.CCDATAGRID_RESET_SELECTED_SAVED_SEARCH:\n      return {\n        filter_id: \"\",\n        filter_name: \"\"\n      };\n    default:\n      return state;\n  }\n};\n\nconst userSearchData = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_USER_SEARCH_DATA:\n      return action.data.userSearchList;\n    case ccDataGridConstants.CCDATAGRID_RESET_USER_SEARCH_DATA:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst systemSearchData = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SYSTEM_SEARCH_DATA:\n      return action.data.systemSearchList;\n    case ccDataGridConstants.CCDATAGRID_RESET_SYSTEM_SEARCH_DATA:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst showSaveSearchModal = (state = false, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SHOW_SAVE_SEARCH_MODAL:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_SHOW_SAVE_SEARCH_MODAL:\n      return false;\n    default:\n      return state;\n  }\n};\nconst saveSearchText = (state = \"\", action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_SET_SAVE_SEARCH_TEXT:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_SAVE_SEARCH_TEXT:\n      return \"\";\n    default:\n      return state;\n  }\n};\n\nconst considerAdvancedSearchOptions = (state = true, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_CONSIDER_ADVANCED_SEARCH_OPTIONS:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_CONSIDER_ADVANCED_SEARCH_OPTIONS:\n      return true;\n    default:\n      return state;\n  }\n};\n\nconst manageSaveSearchOptions = (state = [], action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_MANAGE_SAVE_SEARCH_OPTIONS: {\n      let answers = updateOptions(\n        action.actualOptions,\n        action,\n        action.organization_type,\n        action.isImpersonationView\n      );\n      return answers;\n    }\n\n    case ccDataGridConstants.CCDATAGRID_UPDATE_MANAGE_SAVE_SEARCH_OPTIONS:\n      return action.data;\n    // case ccDataGridConstants.CCDATAGRID_UPDATE_ADVANCED_SEARCH_OPTIONS:\n    //   return {\n    //     options: action.data\n    //   }\n    default:\n      return state;\n  }\n};\n\nconst manageSelectedSavedSearch = (state = {}, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_MANAGE_SELECTED_SAVE_SEARCH:\n      return action.data;\n    case ccDataGridConstants.CCDATAGRID_RESET_MANAGE_SELECTED_SAVE_SEARCH:\n      return {};\n    default:\n      return state;\n  }\n};\n\nfunction updateOptions(\n  options:any,\n  action:any,\n  organization_type:string,\n  isImpersonationView:boolean\n) {\n  if (options) {\n    return options.map((option:any) => {\n      if (action.data.data && action.data.data[option.key] !== undefined) {\n        return {\n          ...option,\n          selectedOptions: updateSelectedOptions(\n            option,\n            action,\n            organization_type,\n            isImpersonationView\n          ),\n          orignalOptions: updateSelectedOptions(\n            option,\n            action,\n            organization_type,\n            isImpersonationView\n          )\n        };\n      }\n      return option;\n    });\n  }\n}\n\nfunction updateSelectedOptions(\n  option:any,\n  action:any,\n  organization_type:string,\n  isImpersonationView:boolean\n) {\n  let selectedOptions = cloneDeep(option.selectedOptions);\n  let type = option.type;\n\n  switch (type) {\n    case \"date-picker\":\n    case \"date-range-picker\":\n      if (\n        action.data &&\n        action.data.data &&\n        action.data.data.hasOwnProperty(option.key)\n      ) {\n        return action.data.data[option.key];\n      }\n      return {};\n\n    case \"single-select\": {\n      let arrayToReturn = [];\n      if (\n        action.data &&\n        action.data.data &&\n        action.data.data.hasOwnProperty(option.key)\n      ) {\n        let selectedOption = option.options.filter(\n          (item:any) => item.value === action.data.data[option.key].toString()\n        )[0];\n        if (selectedOption && selectedOption.label === \"direct_admin\") {\n          if (organization_type !== \"msp\" || isImpersonationView) {\n            selectedOption.label = \"admin\";\n          }\n        }\n        arrayToReturn.push(selectedOption);\n      }\n      return arrayToReturn;\n    }\n    case constant.ADVANCED_SEARCH_API_OPTIONS_KEYS.ORGANIZATIONS.TYPE:\n      if (\n        action.data &&\n        action.data.data &&\n        action.data.data.hasOwnProperty(option.type)\n      ) {\n        let data;\n        if (!Array.isArray(action.data.data[option.type])) {\n          data = [action.data.data[option.type]];\n        } else {\n          data = cloneDeep(action.data.data[option.type]);\n        }\n        return data.map((selOpt:any) => {\n          for (let index = 0; index < option.options.length; index++) {\n            if (\n              option.options[index].id &&\n              selOpt === option.options[index].id\n            ) {\n              selOpt = option.options[index].value;\n            }\n          }\n          return {\n            ...selectedOptions,\n            label: selOpt,\n            value: selOpt\n          };\n        });\n      }\n      return [];\n    default:\n      if (\n        action.data &&\n        action.data.data &&\n        action.data.data.hasOwnProperty(option.key)\n      ) {\n        let data;\n        if (!Array.isArray(action.data.data[option.key])) {\n          data = [action.data.data[option.key]];\n        } else {\n          data = cloneDeep(action.data.data[option.key]);\n        }\n        return data.map((selOpt:any) => {\n          for (let index = 0; index < option.options.length; index++) {\n            if (\n              option.options[index].id &&\n              selOpt === option.options[index].id\n            ) {\n              selOpt = option.options[index].value;\n            }\n          }\n          let labelSelOpt = selOpt;\n          let valueSelOpt = selOpt;\n          if (selOpt === \"direct_admin\") {\n            if (organization_type !== \"msp\" || isImpersonationView) {\n              labelSelOpt = \"admin\";\n            }\n          }\n\n          return {\n            ...selectedOptions,\n            label: labelSelOpt,\n            value: valueSelOpt\n          };\n        });\n      }\n      return [];\n  }\n}\n\nconst ui = combineReducers({\n  sorted,\n  page,\n  pages,\n  pageSize,\n  totalSize,\n  columns,\n  checked,\n  showAdvancedSearchForm,\n  advancedSearch,\n  showCCDataGridCurrentSearch,\n  advancedSearchOptions,\n  advancedSearchOptionsUnChanged,\n  advancedSearchOptionsSelected,\n  optionsForTags,\n  selectedSavedSearch,\n  userSearchData,\n  systemSearchData,\n  showSaveSearchModal,\n  saveSearchText,\n  manageSaveSearchOptions,\n  manageSelectedSavedSearch,\n  considerAdvancedSearchOptions\n});\n\n// data for displaying\nconst entitiesInitialState = {\n  byId: {},\n  allIds: []\n};\n\nconst entities = (state = entitiesInitialState, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n    case ccDataGridConstants.CCDATAGRID_UPDATE_LOCAL_DATA: {\n      const { data } = action;\n      if (Array.isArray(data)) {\n        const byId:any = {};\n        data.forEach(r => {\n          byId[r._rowId] = r;\n        });\n        let x = data.map(r => r._rowId);\n        return {\n          allIds: x,\n          byId\n        };\n      }\n\n      return state;\n    }\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE:\n      return action.refreshGrid ? entitiesInitialState : state;\n    case ccDataGridConstants.CCDATAGRID_UPDATE_PAGE_SIZE:\n      return action.refreshGrid ? entitiesInitialState : state;\n    case ccDataGridConstants.CCDATAGRID_UPDATE_SORTED:\n      return entitiesInitialState;\n    case ccDataGridConstants.CCDATAGRID_ADVANCED_SEARCH:\n      return entitiesInitialState;\n    case ccDataGridConstants.CCDATAGRID_CLEAR_DATA:\n      return entitiesInitialState;\n    default:\n      return state;\n  }\n};\n\n// save last api (for debugging)\nconst api = (state = null, action:any) => {\n  switch (action.type) {\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_SUCCESS:\n    case ccDataGridConstants.CCDATAGRID_FETCH_DATA_FAILURE:\n      return action.response;\n    case ccDataGridConstants.CCDATAGRID_CLEAR_DATA:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst ccDataGrid = combineReducersWithNamespace(\n  {\n    config,\n    loading,\n    ui,\n    entities,\n    api\n  },\n  (action:any) => action.ccDataGridId\n);\n\nexport default ccDataGrid;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as ccDataGridSelectors from \"../../../../state/selectors/ccDataGrid\";\nimport * as ccDataGridActions from \"../../../../state/actions/ccDataGrid\";\nimport { setColumnWidth } from \"../../../../state/actions/actions\";\nimport { CCDataGridConsumer } from \"../../CCDataGrid-MUI\";\n\nexport const withCCDataGrid = WrappedComponent => props => (\n  <CCDataGridConsumer>\n    {context => <WrappedComponent ccDataGrid={context} {...props} />}\n  </CCDataGridConsumer>\n);\n\n// Fix for pagination false\nexport const withPagination = WrappedComponent =>\n  connect(\n    (state, ownProps) => {\n      const { ccDataGrid } = ownProps;\n      let { ccDataGridId, pagination } = ccDataGrid.config;\n      const { ccDataGridUniqueId } = ccDataGrid;\n      if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n        ccDataGridId = ccDataGridUniqueId;\n      if (pagination === false) {\n        const totalEntities = ccDataGridSelectors.getEntities(ccDataGridId)(\n          state\n        ).length;\n        const pageSize = ccDataGridSelectors.getPageSize(ccDataGridId)(state);\n\n        return {\n          page: ccDataGridSelectors.getPage(ccDataGridId)(state),\n          pages:\n            Math.floor(totalEntities / pageSize) +\n            Math.ceil((totalEntities % pageSize) / pageSize),\n          pageSize,\n          total: ccDataGridSelectors.getEntities(ccDataGridId)(state).length\n        };\n      }\n      return {\n        page: ccDataGridSelectors.getPage(ccDataGridId)(state),\n        pages: ccDataGridSelectors.getPages(ccDataGridId)(state),\n        pageSize: ccDataGridSelectors.getPageSize(ccDataGridId)(state),\n        total: ccDataGridSelectors.getTotalSize(ccDataGridId)(state)\n      };\n    },\n    (dispatch, ownProps) => ({\n      updatePage(page, refreshGrid) {\n        const { ccDataGrid } = ownProps;\n        let { ccDataGridId } = ccDataGrid.config;\n        const { ccDataGridUniqueId } = ccDataGrid;\n        if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n          ccDataGridId = ccDataGridUniqueId;\n\n        dispatch(ccDataGridActions.updatePage(ccDataGridId, page, refreshGrid));\n      },\n      updatePageSize(pageSize, refreshGrid) {\n        const { ccDataGrid } = ownProps;\n        let { ccDataGridId } = ccDataGrid.config;\n        const { ccDataGridUniqueId } = ccDataGrid;\n        if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n          ccDataGridId = ccDataGridUniqueId;\n\n        dispatch(\n          ccDataGridActions.updatePageSize(ccDataGridId, pageSize, refreshGrid)\n        );\n      },\n      setColumnWidth(newResized) {\n        dispatch(setColumnWidth({ newResized }));\n      }\n    })\n  )(WrappedComponent);\n\nexport const withSorted = WrappedComponent =>\n  connect(\n    (state, ownProps) => {\n      const { ccDataGrid } = ownProps;\n      let { ccDataGridId } = ccDataGrid.config;\n      const { ccDataGridUniqueId } = ccDataGrid;\n      if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n        ccDataGridId = ccDataGridUniqueId;\n\n      return {\n        sorted: ccDataGridSelectors.getSorted(ccDataGridId)(state)\n      };\n    },\n    (dispatch, ownProps) => ({\n      updateSorted(sorted, refreshGrid) {\n        const { ccDataGridId } = ownProps.ccDataGrid.config;\n        dispatch(\n          ccDataGridActions.updateSorted(ccDataGridId, sorted, refreshGrid)\n        );\n      }\n    })\n  )(WrappedComponent);\n\nexport const withLoading = WrappedComponent =>\n  connect((state, ownProps) => {\n    const { ccDataGrid } = ownProps;\n    let { ccDataGridId } = ccDataGrid.config;\n    const { ccDataGridUniqueId } = ccDataGrid;\n    if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n      ccDataGridId = ccDataGridUniqueId;\n\n    return {\n      isLoading: ccDataGridSelectors.isLoading(ccDataGridId)(state)\n    };\n  })(WrappedComponent);\n\nexport const withEntities = WrappedComponent =>\n  connect((state, ownProps) => {\n    const { ccDataGrid } = ownProps;\n    let { ccDataGridId } = ccDataGrid.config;\n\n    const { ccDataGridUniqueId } = ccDataGrid;\n    if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n      ccDataGridId = ccDataGridUniqueId;\n    //const entities = ccDataGridSelectors.getEntities(ccDataGridId)(state);\n    const entities = ccDataGridSelectors.getCCDGEntities(state, ccDataGridId);\n\n    return {\n      entities\n    };\n  })(WrappedComponent);\n\nexport const withChecked = WrappedComponent =>\n  connect(\n    (state, ownProps) => {\n      const { ccDataGrid } = ownProps;\n      let { ccDataGridId } = ccDataGrid.config;\n      const { ccDataGridUniqueId } = ccDataGrid;\n      if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n        ccDataGridId = ccDataGridUniqueId;\n\n      return {\n        checked: ccDataGridSelectors.getChecked(ccDataGridId)(state),\n        checkedItems: ccDataGridSelectors.getCheckedItems(ccDataGridId)(state),\n        checkedEntities: ccDataGridSelectors.getCheckedEntities(ccDataGridId)(\n          state\n        ),\n        availableBulkActions: ccDataGridSelectors.getAvailableBulkActions(\n          ccDataGridId\n        )(state)\n      };\n    },\n    (dispatch, ownProps) => ({\n      uncheckAll() {\n        const { ccDataGrid } = ownProps;\n        let { ccDataGridId } = ccDataGrid.config;\n        const { ccDataGridUniqueId } = ccDataGrid;\n        if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n          ccDataGridId = ccDataGridUniqueId;\n        dispatch(ccDataGridActions.uncheckAll(ccDataGridId));\n      },\n      checkRows(...rowIds) {\n        const { ccDataGrid } = ownProps;\n        let { ccDataGridId } = ccDataGrid.config;\n        const { ccDataGridUniqueId } = ccDataGrid;\n        if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n          ccDataGridId = ccDataGridUniqueId;\n        dispatch(ccDataGridActions.checkRows(ccDataGridId, ...rowIds));\n      },\n      uncheckRow(rowId) {\n        const { ccDataGrid } = ownProps;\n        let { ccDataGridId } = ccDataGrid.config;\n        const { ccDataGridUniqueId } = ccDataGrid;\n        if (ccDataGridUniqueId && ccDataGridUniqueId.length > 0)\n          ccDataGridId = ccDataGridUniqueId;\n        dispatch(ccDataGridActions.uncheckRow(ccDataGridId, rowId));\n      }\n    })\n  )(WrappedComponent);\nexport const withCheckedTbody = WrappedComponent =>\n  connect(\n    (state, ownProps) => {\n      const { ccDataGrid } = ownProps;\n      const { tbodyProps } = ccDataGrid;\n      let { ccDataGridId } = ccDataGrid.config;\n      if (\n        tbodyProps.ccDataGridReplaceId &&\n        tbodyProps.ccDataGridReplaceId.length > 0\n      )\n        ccDataGridId = tbodyProps.ccDataGridReplaceId;\n\n      return {\n        checked: ccDataGridSelectors.getChecked(ccDataGridId)(state)\n\n        // checkedItems: ccDataGridSelectors.getCheckedItems(ccDataGridId)(state),\n        // checkedEntities: ccDataGridSelectors.getCheckedEntities(ccDataGridId)(\n        //   state\n        // ),\n        // availableBulkActions: ccDataGridSelectors.getAvailableBulkActions(\n        //   ccDataGridId\n        // )(state)\n      };\n    },\n    (dispatch, ownProps) => ({\n      uncheckAll() {\n        const { ccDataGrid } = ownProps;\n        const { tbodyProps } = ccDataGrid;\n        let { ccDataGridId } = ccDataGrid.config;\n        if (\n          tbodyProps.ccDataGridReplaceId &&\n          tbodyProps.ccDataGridReplaceId.length > 0\n        )\n          ccDataGridId = tbodyProps.ccDataGridReplaceId;\n        dispatch(ccDataGridActions.uncheckAll(ccDataGridId));\n      },\n      checkRows(...rowIds) {\n        const { ccDataGrid } = ownProps;\n        const { tbodyProps } = ccDataGrid;\n        let { ccDataGridId } = ccDataGrid.config;\n        if (\n          tbodyProps.ccDataGridReplaceId &&\n          tbodyProps.ccDataGridReplaceId.length > 0\n        )\n          ccDataGridId = tbodyProps.ccDataGridReplaceId;\n        dispatch(ccDataGridActions.checkRows(ccDataGridId, ...rowIds));\n      },\n      uncheckRow(rowId) {\n        const { ccDataGrid } = ownProps;\n        const { tbodyProps } = ccDataGrid;\n        let { ccDataGridId } = ccDataGrid.config;\n        if (\n          tbodyProps.ccDataGridReplaceId &&\n          tbodyProps.ccDataGridReplaceId.length > 0\n        )\n          ccDataGridId = tbodyProps.ccDataGridReplaceId;\n        dispatch(ccDataGridActions.uncheckRow(ccDataGridId, rowId));\n      }\n    })\n  )(WrappedComponent);\nexport default withCCDataGrid;\n","import React from \"react\";\nimport { FormattedMessage as ReactIntlFormattedMessage } from \"react-intl\";\n\n//Wrapper function to fix: [React Intl] Messages must be statically evaluate-able for extraction. issue.\nfunction FormattedMessage(props) {\n  return <ReactIntlFormattedMessage {...props} />;\n}\n\nexport default FormattedMessage;\n","import FormattedMessage from \"./FormattedMessage\";\nexport default FormattedMessage;\n","export const ID_PREFIX = \"cc_id_\";","import DropdownButton from \"./DropdownButton\";\n\nexport default DropdownButton;\n","import React, { useEffect } from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport Button from \"../button\";\nimport { ID_PREFIX } from \"../../../configs/IdConfig\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nconst DropdownButton = ({\n  className,\n  title,\n  children,\n  color,\n  variant,\n  size,\n  endIcon,\n  disabled,\n  customButtonStyle,\n  menuAlign,\n  testId,\n  id,\n  closeOnClick = true,\n  showManageSettingsModal,\n  closeTriggeredFromParent\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  useEffect(() => {\n    if (showManageSettingsModal) {\n      setAnchorEl(null);\n    }\n  }, [showManageSettingsModal]);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    closeTriggeredFromParent && setAnchorEl(null);\n  }, [closeTriggeredFromParent]);\n  return (\n    <>\n      <Button\n        testId={testId ? `${testId}_button` : \"\"}\n        id={id}\n        color={color}\n        content={title}\n        className={className}\n        onClick={handleClick}\n        variant={variant}\n        size={size}\n        endIcon={endIcon}\n        disabled={disabled}\n        style={customButtonStyle ? { ...customButtonStyle } : {}}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        onClick={closeOnClick ? handleClose : () => {}}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: menuAlign ? menuAlign : \"right\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: menuAlign ? menuAlign : \"right\"\n        }}\n        id={`${ID_PREFIX}${testId}_menu`}\n      >\n        {children}\n      </Menu>\n    </>\n  );\n};\n\nexport default DropdownButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FormattedMessage from \"../formatted-message\";\nimport { getLogin } from \"../../../state/selectors\";\nconst FormattedBrandMessage = props => {\n  const {\n    id = \"\",\n    defaultMessage = \"\",\n    brand_names = {\n      ARCSERVE_PRODUCT_NAME: \"Arcserve\",\n      CD_PRODUCT_NAME: \"Cloud Direct\",\n      CH_PRODUCT_NAME: \"Cloud Hybrid\",\n      UDP_PRODUCT_NAME: \"UDP\"\n    },\n    values = {}\n  } = props;\n\n  return (\n    <FormattedMessage\n      id={id}\n      values={{ ...brand_names, ...values }}\n      defaultMessage={defaultMessage}\n    />\n  );\n};\nFormattedBrandMessage.defaultProps = {\n  id: \"\",\n  defaultMessage: \"\"\n};\n\nFormattedBrandMessage.propTypes = {\n  id: PropTypes.string.isRequired,\n  defaultMessage: PropTypes.string.isRequired\n};\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    brand_names: getLogin(state).brand_names\n  });\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(FormattedBrandMessage);\n","import FormattedBrandMessage from \"./FormattedBrandMessage\";\n\nexport default FormattedBrandMessage;\n","import React from \"react\";\nimport get from \"lodash/get\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport DropdownButton from \"../dropdown-button-mui\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from \"react-intl\";\nimport { ID_PREFIX } from \"../../../configs/IdConfig\";\nimport FormattedBrandMessage from \"../FormattedBrandMessage\";\n\nconst LoadingDots = testId => {\n  return (\n    <div id={testId} className=\"loading-dropdown-dots\">\n      {\" \"}\n      &nbsp;\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n    </div>\n  );\n};\n\nconst ActionDropdown = ({\n  showDateRange,\n  onMenuItemClick,\n  optionIndex,\n  render,\n  hasi18nSupport,\n  disabledOptions,\n  skipDefaultOption,\n  defaultOptionKey,\n  intl,\n  defaultOptionValue,\n  color,\n  endIcon,\n  variant,\n  pullRight,\n  dropup,\n  loading,\n  size,\n  customButtonStyle,\n  id,\n  testId,\n  keyAsTestId,\n  ...props\n}) => {\n  /**\n   * stop event propagation to table header cell\n   */\n  const handlebuttonClicked = e => {\n    const _elemToStop = e.currentTarget.parentNode.parentNode;\n    if (_elemToStop.id === \"grid-header-dropdown-wrapper\") {\n      e.stopPropagation();\n    }\n  };\n\n  const handleOnSelect = eventKey => {\n    let event = Object.assign(\n      {},\n      {\n        ...eventKey,\n        showPicker: showDateRange,\n        key: \"single_select\"\n      }\n    );\n    if (onMenuItemClick) {\n      render\n        ? onMenuItemClick(optionIndex, [{ ...event }])\n        : onMenuItemClick(eventKey);\n    }\n  };\n\n  const processMenuItem = (\n    item,\n    optionIndex,\n    isDisabled = false,\n    menuid,\n    keyAsTestId\n  ) => {\n    let customKey = item.value\n      ? item.value.toString()\n      : item.key\n      ? item.key.toString()\n      : item.toString();\n    return item ? (\n      <MenuItem\n        id={\n          menuid\n            ? `${menuid}_${\n                keyAsTestId ? customKey.split(\".\").pop() : optionIndex\n              }`\n            : \"\"\n        }\n        key={optionIndex}\n        onClick={() => handleOnSelect(item)}\n        disabled={isDisabled}\n        style={{ fontSize: 14 }}\n      >\n        {hasi18nSupport ? (\n          <FormattedBrandMessage\n            id={\n              item.value\n                ? item.value.toString()\n                : item.key\n                ? item.key.toString()\n                : item.toString()\n            }\n            defaultMessage={\n              item.value\n                ? item.value.toString()\n                : item.key\n                ? item.key.toString()\n                : item.toString()\n            }\n          />\n        ) : (\n          <span>{typeof item === \"object\" ? item.key : item}</span>\n        )}\n      </MenuItem>\n    ) : (\n      false\n    );\n  };\n\n  /**\n   * to render menu items for dropdown\n   */\n  const renderMenuItem = (menuid, keyAsTestId) => {\n    if (props.options && props.options.length + disabledOptions.length === 0)\n      return <div />;\n    let options = cloneDeep(props.options);\n    if (!skipDefaultOption) {\n      options.unshift({\n        key: hasi18nSupport\n          ? defaultOptionKey\n          : intl.formatMessage({\n              id: defaultOptionKey,\n              defaultMessage: defaultOptionKey\n            }),\n        value: defaultOptionValue\n      });\n    }\n    return (\n      options &&\n      options\n        .map((item, index) =>\n          processMenuItem(item, index, false, menuid, keyAsTestId)\n        )\n        .concat(\n          disabledOptions.map((item, index) =>\n            processMenuItem(item, index, true, menuid, keyAsTestId)\n          )\n        )\n    );\n  };\n\n  const dropdownClass = props.title ? get(props, \"className\", \"\") : \"no-text\";\n\n  let title = props.title ? (\n    typeof props.title === \"string\" ? (\n      <FormattedBrandMessage id={props.title} defaultMessage={props.title} />\n    ) : (\n      props.title\n    )\n  ) : (\n    \"\"\n  );\n\n  let menuid = testId ? `${ID_PREFIX}${testId}` : id ? id : \"\";\n\n  return (\n    <React.Fragment>\n      <DropdownButton\n        title={title}\n        color={color}\n        variant={variant || \"default\"}\n        endIcon={endIcon}\n        pullRight={pullRight}\n        menuAlign={get(props, \"menuAlign\", \"left\")}\n        dropup={dropup}\n        className={dropdownClass}\n        onClick={handlebuttonClicked}\n        customButtonStyle={customButtonStyle}\n        size={size}\n        disabled={\n          props.disabled\n            ? props.disabled\n            : props.options && !props.options.length\n        }\n        id={id}\n        testId={testId}\n      >\n        {renderMenuItem(menuid ? `${menuid}_menu` : \"\", keyAsTestId)}\n      </DropdownButton>\n      {/* Show loading dots on dropdown */}\n      {loading && (\n        <LoadingDots testId={menuid ? `${menuid}_loadingdots` : \"\"} />\n      )}\n    </React.Fragment>\n  );\n};\n\nActionDropdown.defaultProps = {\n  dropup: false,\n  pullRight: true,\n  disabled: false,\n  hasi18nSupport: true,\n  options: [],\n  title: \"\",\n  optionIndex: 0,\n  render: false,\n  showDateRange: false,\n  skipDefaultOption: true,\n  defaultOptionKey: \"select\",\n  defaultOptionValue: null,\n  onMenuItemClick: () => {},\n  disabledOptions: [],\n  className: \"\",\n  loading: false\n};\n\nActionDropdown.propTypes = {\n  defaultOptionKey: PropTypes.string,\n  defaultOptionValue: PropTypes.string,\n  dropup: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  menuAlign: PropTypes.string,\n  title: PropTypes.any,\n  disabled: PropTypes.bool,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })\n    ),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n  ]),\n  disabledOptions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })\n    ),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n  ]),\n  onMenuItemClick: PropTypes.func,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func\n  }).isRequired,\n  hasi18nSupport: PropTypes.bool,\n  optionIndex: PropTypes.number,\n  render: PropTypes.bool,\n  showDateRange: PropTypes.bool,\n  skipDefaultOption: PropTypes.bool,\n  className: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default injectIntl(React.memo(ActionDropdown));\n","import ActionDropdown from \"./ActionDropdown\";\n\nexport default ActionDropdown;\n","import ChipComponent from \"./ChipComponent\";\n\nexport default ChipComponent;\n","import React from \"react\";\nimport Chip from \"@mui/material/Chip\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Reusable component to render chip\n */\nconst ChipComponent = props => {\n  const { size, label, onClick, onDelete, className } = props;\n  return (\n    <Chip\n      size={size}\n      label={label}\n      onClick={onClick}\n      onDelete={onDelete}\n      className={className}\n    />\n  );\n};\n\nChipComponent.propTypes = {\n  size: PropTypes.string,\n  label: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.object.isRequired\n  ]),\n  onClick: PropTypes.func,\n  onDelete: PropTypes.func,\n  className: PropTypes.string\n};\n\nexport default ChipComponent;\n","import React from \"react\";\n\nconst Icon = props => {\n  const IconClass = props.icon;\n  return (\n    <IconClass\n      color={props.color}\n      fontSize={props.fontSize}\n      sx={props.sx}\n      style={props.style}\n      {...props}\n    />\n  );\n};\n\nexport default Icon;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { compose, bindActionCreators } from \"redux\";\nimport {\n  withCCDataGrid,\n  withLoading,\n  withEntities,\n  withChecked\n} from \"../HOCs/index\";\nimport FormattedMessage from \"../../formatted-message\";\n// import ActionDropdown from \"components/common/action-dropdown\";\nimport ActionDropdown from \"../../action-dropdown-button-mui\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { GridSettings } from \"../../CCDataGrid-MUI/index\";\nimport Chip from \"../../chip\";\nimport Icon from \"../../icon/IconMui\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport Grid from \"@mui/material/Grid\";\nimport * as ccDataGridSelectors from \"../../../../state/selectors/ccDataGrid\";\nimport {\n  getAdvancedSearchCurrentSearchCriteria,\n  getAdvancedSearchOptions\n} from \"../../../../state/selectors/ccDataGrid\";\nimport * as ccDataGridActions from \"../../../../state/actions/ccDataGrid\";\n// import CurrentSearchCriteria from \"../AdvancedSearchForm/components/CurrentSearchCriteria\";\n// import SavedSearches from \"../AdvancedSearchForm/components/SavedSearches\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nconst THeader = ({\n  ccDataGrid: {\n    config: {\n      ccDataGridId /* , disableBulkActions = [] */,\n      hideCheckbox,\n      hideGridSettings,\n      hideSaveSearchLink = false\n    },\n    AdvancedSearchForm,\n    onActions,\n    gridHeaderButtons,\n    columnsModel,\n    filterType,\n    groupActionHandler,\n  },\n  // entities,\n  checkedItems,\n  checkedEntities,\n  availableBulkActions,\n  children = [],\n  twoFactorRequired,\n  ccDataGridUniqueId,\n  ...props\n}) => {\n\n  \n  const isXs = useMediaQuery(\"(max-width:500px)\");\n  useEffect(() => {\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return (\n    <div className=\"grid-header-wrapper\" style={{ margin:'0 16px' }}>\n      <Grid container className=\"search-wrapper\" spacing=\"0\" style={{marginBottom:'10px',marginLeft:isXs?'18%':''}} >\n        <Grid item \n        xs={10} \n        sm={5} \n        md={4}\n        lg={4} >\n          {/* {AdvancedSearchForm && <AdvancedSearchForm />} */}\n        </Grid>\n        <Grid\n          item\n          xs={10}\n          sm={7}\n          md={8}\n          lg={8}\n          // style={{ display: \"flex\", justifyContent: \"end\" }}\n        >\n          <Grid container alignItems=\"center\" justifyContent=\"end\">\n          {!onActions && !hideCheckbox\n            ? \"\"\n            : !hideCheckbox && (\n              <>\n                <Grid item xs={10} sm={4} md={3.5} lg={2} xl={1.6} className={isXs?'grid-buttons-xs-screen':''}>\n                    <div\n                    >\n                      <label\n                        htmlFor=\"selectRows\"\n                        // className=\"d-flex align-items-center\"\n                      >\n                        <FormattedMessage\n                          id=\"Selected\"\n                          defaultMessage=\"Selected\"\n                        />\n                        <Chip\n                          htmlFor=\"type-select\"\n                          className=\"ccChipStyles\"\n                          color=\"primary\"\n                          label={checkedItems.length}\n                        />\n                        {/* <span\n                      htmlFor=\"type-select\"\n                      className={\n                        checkedItems.length > 0\n                          ? \"selectlabel mb-0 ml-2\"\n                          : \"selectlabelNone mb-0 ml-2\"\n                      }\n                    >\n                      {checkedItems.length}\n                    </span> */}\n                      </label>\n                    </div>\n                </Grid>\n                 <Grid item xs={10} sm={4} md={3.5} lg={2} xl={1.6} className={isXs?'grid-buttons-xs-screen':''}>\n                 <ActionDropdown\n                   testId=\"RTYPZ8\"\n                   title=\"Actions\"\n                   color=\"secondary\"\n                   variant=\"outlined\"\n                   size=\"large\"\n                   endIcon={<KeyboardArrowDownIcon />}\n                   options={availableBulkActions}\n                   onMenuItemClick={actionKey => {\n                     groupActionHandler\n                       ? groupActionHandler(\n                           ccDataGridId,\n                           actionKey,\n                           checkedItems,\n                           checkedEntities\n                         )\n                       : onActions(\n                         ccDataGridId,\n                           actionKey,\n                           checkedItems,\n                           checkedEntities\n                         );\n                   }}\n                   disabled={availableBulkActions.length === 0}\n                  //  customButtonStyle={{ marginRight: -5 }}\n                 />\n               </Grid>\n               </>\n              )}\n\n          <Grid item  className={isXs?'grid-buttons-xs-screen':''}>\n            {gridHeaderButtons}\n          </Grid>\n          {!hideGridSettings && (\n            <Grid item>\n              <GridSettings\n                className=\"grid-dropdown\"\n                disableManageSaveSearches={false}\n                //  disableManageSaveSearches={this.props.disableManageSaveSearches}\n                columnsModelData={columnsModel}\n                title={<Icon icon={SettingsOutlinedIcon} />}\n                filterType={ccDataGridId}\n                variant=\"default\"\n              />\n            </Grid>\n          )}\n          {children}\n          </Grid>\n        </Grid>\n        {/* {Object.keys(props.currentOptionToTags).length <= 0 && (\n          <div className=\"SavedSearches\">\n            <SavedSearches\n              // showUserDefinedSearch={props.showUserDefinedSearch}\n              // handleAdvancedSearchClick={handleAdvancedSearchClick}\n              filterType={filterType}\n              options={props.options}\n              totalSize={props.totalSize}\n              ccDataGridId={props.ccValue}\n              callApiForAdvancedSearch={props.callApiForAdvancedSearch}\n              originalAdvancedSearchOptions={\n                props.originalAdvancedSearchOptions\n              }\n            />\n          </div>\n        )}\n        {Object.keys(props.currentOptionToTags).length > 0 && (\n          <div className=\"CurrentSearch\">\n            <CurrentSearchCriteria\n              options={props.currentOptionToTags}\n              advSearchOptions={\n                props.options &&\n                props.options.map(item => ({\n                  key: item.key,\n                  name: item.name\n                }))\n              }\n              hideSaveSearchLink={hideSaveSearchLink}\n              // pass hideSaveSearchLink dynamically\n              filterType={filterType}\n              handleSearchTagsClose={values => {}}\n              handleAdvancedSearchClick={() => {}}\n              classes=\"cc-datagrid--saved-filter-wrapper d-flex\"\n              ccDataGridId={props.ccValue}\n            />\n          </div>\n        )} */}\n      </Grid>\n    </div>\n  );\n};\n\nTHeader.propTypes = {\n  ccDataGrid: PropTypes.shape({\n    config: PropTypes.shape({\n      ccDataGridId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n      disableBulkActions: PropTypes.arrayOf(PropTypes.string),\n      hideGridSettings: PropTypes.bool,\n      hideSaveSearchLink: PropTypes.bool,\n      hideCheckbox: PropTypes.bool\n    }).isRequired,\n    AdvancedSearchForm: PropTypes.func,\n    onActions: PropTypes.func.isRequired,\n    gridHeaderButtons: PropTypes.element,\n    columnsModel: PropTypes.shape([]),\n    groupActionHandler: PropTypes.func,\n    filterType: PropTypes.string,\n    showAddSourceComponent: PropTypes.bool,\n    addSourceOptionClick: PropTypes.func\n  }).isRequired,\n  // entities: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  checkedItems: PropTypes.arrayOf(PropTypes.string).isRequired,\n  checkedEntities: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  availableBulkActions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.oneOfType(\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ).isRequired,\n  options: PropTypes.shape([]),\n  twoFactorRequired: PropTypes.bool,\n  ccDataGridUniqueId: PropTypes.string.isRequired,\n  currentOptionToTags: PropTypes.shape({}).isRequired,\n  totalSize: PropTypes.number.isRequired,\n  ccValue: PropTypes.string.isRequired,\n  callApiForAdvancedSearch: PropTypes.func.isRequired,\n  originalAdvancedSearchOptions: PropTypes.shape([]).isRequired,\n};\n\nTHeader.defaultProps = {\n  options: [],\n  twoFactorRequired: false,\n};\n\nconst mapStateToProps = (state, props) => {\n  const { ccDataGrid } = props;\n  const ccValue = ccDataGrid.ccDataGridUniqueId || ccDataGrid?.config?.ccDataGridId;\n  return {\n    twoFactorRequired:\n      state.login.organizationInfo &&\n      state.login.organizationInfo.two_factor_required,\n    currentOptionToTags: ccDataGridSelectors.getCCDataGridOptionToTags(ccValue)(\n      state\n    ),\n    options: getAdvancedSearchOptions(ccValue)(state),\n    originalAdvancedSearchOptions: ccDataGridSelectors.getAdvancedSearchOptionsUnChanged(\n      ccValue\n    )(state),\n    ccValue,\n    searchOption: getAdvancedSearchCurrentSearchCriteria(ccValue)(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      callApiForAdvancedSearch: ccDataGridId =>\n        dispatch(ccDataGridActions.fetchData(ccDataGridId)),\n      ccDataGridShowCurrentSearch: (ccDataGridId, value) =>\n        dispatch(\n          ccDataGridActions.isAdvancedSearchOptionsSelected(ccDataGridId, value)\n        )\n    },\n    dispatch\n  );\n\nexport default compose(\n  withCCDataGrid,\n  withLoading,\n  withEntities,\n  withChecked,\n  connect(mapStateToProps, mapDispatchToProps)\n)(THeader);\n","/**\n * List of supported column types for data grid\n */\nexport const DataGridConstants = {\n    /**\n     * Enumerates the list of grid column types that are supported for display\n     */\n    GridColumnCellTypes: {\n      CHECKBOX_CELL: \"checkbox-cell\",\n      LINK_CELL: \"link-cell\",\n      LINK_CELL_MUI: \"link-cell-mui\",\n      LINK_CELL_WITH_ICON: \"link-cell-with-icon\",\n      ICON_CELL: \"icon-cell\",\n      ICON_CELL_MUI: \"icon-cell-mui\",\n      OVERLAY_CELL: \"overlay-cell\",\n      NUMERICAL_TEXT_CELL: \"numerical-text-cell\",\n      SHORT_TEXT_CELL: \"short-text-cell\",\n      SHORT_TEXT_CELL_MUI: \"short-text-cell-mui\",\n      LONG_TEXT_CELL: \"long-text-cell\",\n      LONG_TEXT_CELL_MUI: \"long-text-cell-mui\",\n      ACTION_DROPDOWN_CELL: \"action-dropdown-cell\",\n      ICON_TEXT_CELL: \"icon-text-cell\",\n      MULTILINE_TEXT_CELL: \"multiline-text-cell\",\n      TWOLINE_TEXT_CELL: \"twoline-text-cell\",\n      TWOLINE_TEXT_CELL_MUI: \"twoline-text-cell-mui\",\n      PROGRESS_TEXT_CELL: \"progress-text-cell\",\n      MULTI_TYPE: \"multi-type\",\n      IMAGE_CELL: \"image-cell\",\n      EDIT_DROPDOWN_CELL: \"edit-dropdown-cell\",\n      MULTI_SELECT_DROPDOWN_CELL: \"multi-select-dropdown\",\n      ID_VALUE_CELL: \"id-value-cell\",\n      DATE_TIME_CELL: \"date-time-cell\",\n      DURATION: \"duration\",\n      SINGLE_SELECT_DROPDOWN_CELL: \"single-select-dropdown\",\n      SINGLE_SELECT_SCROLL_DROPDOWN_CELL: \"single-select-scroll-dropdown\",\n      INPUT_CELL: \"input-cell\",\n      RADIO_BUTTON_CELL: \"radio-button-cell\",\n      EMPTY_TEXT_CELL: \"empty-text-cell\",\n      LATEST_JOB_LINK_CELL: \"latest-job-link-cell\",\n      LATEST_JOB_TEXT_CELL: \"latest-job-text-cell\",\n      EXTERNAL_LINK_CELL: \"external-link-cell\",\n      RENDER_POLICY_OVERLAY_CELL: \"policy-overlay-cell\",\n      RENDER_DESTINATION_OVERLAY_CELL: \"destination-overlay-cell\",\n      RENDER_POLICY_OVERLAY_CELL_WITHOUT_LINK: \"policy-overlay-cell-without-cell\",\n      RENDER_ROLE_OVERLAY_CELL: \"role-overlay-cell\",\n      STATE_LOADER_CELL: \"state-loader-cell\",\n      WRAPPED_CELL: \"wrapped-cell\",\n      WRAPPED_CELL_WITH_HYPERLINK: \"wrapped-cell-hyperlink\",\n      HOVER_CELL: \"hover-cell\",\n      MULTIPLE_POLICY_LINK_CELL: \"mutiple-policy-link-cell\",\n      COMPONENT_CELL: \"component-cell\",\n      ICON_LINK_CELL: \"icon-link-cell\",\n      CELL_ICON: \"cell-icon\",\n      FORMATTED_LOCALIZED_TEXT_CELL: \"localization-text-cell\",\n      BYTE_CELL: \"byte-cell\",\n      BYTE_CELL_MUI: \"byte-cell-mui\",\n      JOB_TYPE_CELL: \"job-type-cell\",\n      BUTTON_ACTION: \"button_action\"\n    },\n  \n    GridColumnStatusTypes: {\n      IN_PROGRESS: \"inprogress\",\n      SCHEDULED: \"scheduled\"\n    },\n    /**\n     * Enumerates the list of grid column width depending on type of column that are supported for display\n     */\n    GridColumnCellWidth: {\n      CHECKBOX_CELL: 50,\n      LINK_CELL: 150,\n      LINK_CELL_MUI: 150,\n      EXTERNAL_LINK_CELL: 150,\n      ICON_CELL: 100,\n      ICON_CELL_MUI: 100,\n      OVERLAY_CELL: 150,\n      OVERLAY_CELL_MAX: 200,\n      NUMERICAL_TEXT_CELL: 150,\n      SHORT_TEXT_CELL: 150,\n      SHORT_TEXT_CELL_MUI: 150,\n      EMPTY_TEXT_CELL: 150,\n      LONG_TEXT_CELL: 250,\n      LONG_TEXT_CELL_MUI: 250,\n      HOVER_CELL: 250,\n      ACTION_DROPDOWN_CELL: 90,\n      ICON_TEXT_CELL: 150,\n      MULTILINE_TEXT_CELL: 250,\n      TWOLINE_TEXT_CELL: 250,\n      TWOLINE_TEXT_CELL_MUI: 250,\n      PROGRESS_TEXT_CELL: 250,\n      IMAGE_CELL: 250,\n      EDIT_DROPDOWN_CELL: 250,\n      MULTI_SELECT_DROPDOWN_CELL: 250,\n      DATE_TIME_CELL: 200,\n      DURATION: 150,\n      MULTILINE_CONTENT_CELL: 250,\n      ID_VALUE_CELL: 150,\n      SINGLE_SELECT_DROPDOWN_CELL: 150,\n      SINGLE_SELECT_SCROLL_DROPDOWN_CELL: 150,\n      INPUT_CELL: 100,\n      RADIO_BUTTON_CELL: 100,\n      WRAPPED_CELL: 200,\n      CELL_ICON: 100,\n      BUTTON_ACTION: 100\n    },\n  \n    /**\n     * Enumerates the grid column header types that are supported for display\n     */\n    GridColumnHeaderTypes: {\n      HEADER_TEXT: \"header-text\",\n      HEADER_SELECT: \"header-select\",\n      HEADER_TEXT_SELECT: \"header-text-select\",\n      HEADER_TEXT_MUI: \"header-text-mui\"\n    },\n  \n    /**\n     * Enumerates the overlay types that are supported for display\n     */\n    OverlayTypes: {\n      TOOLTIP: \"tooltip\",\n      POPOVER: \"popover\"\n    }\n  };\n  \n  export default DataGridConstants;\n  ","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Reference of SVG commands\n// M = moveto\n// L = lineto\n// H = horizontal lineto\n// V = vertical lineto\n// C = curveto\n// S = smooth curveto\n// Q = quadratic Bézier curve\n// T = smooth quadratic Bézier curveto\n// A = elliptical Arc\n// Z = closepath\n//\n// Use this function to convert dimensions of SVG image. given the path, and a scale. It'll return the updated pathname\n// example: scaleImage(path, 1024/24) = will return scaled path from 24 pixels to 1024 pixels.\n//\n// window.scaleImage = (path, scale) => {\n//   const matched = path.match(\n//     /,|[ ]|[MLHVCSQTAZmlhvcsqtaz]|(-[\\d.]*)|([\\d.]*)/g\n//   );\n//   return matched\n//     .map(n => {\n//       if (!isNaN(parseFloat(n))) {\n//         return String((scale * n).toFixed(3));\n//       }\n//       return n;\n//     })\n//     .join(\"\");\n// };\n\nconst icons = {\n  skipped: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  idle: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  success: [\n    {\n      path:\n        \"M439.979 640l256-256-40.277-41.643-215.723 216.405-101.035-101.717-40.277 40.277 141.312 142.677zM497.323 213.333c51.883 0 99.897 12.971 144.043 38.912 42.781 24.576 76.459 58.254 101.035 101.035 25.941 44.146 38.912 92.16 38.912 144.043s-12.971 99.897-38.912 144.043c-24.576 42.781-58.254 76.459-101.035 101.035-44.146 25.941-92.16 38.912-144.043 38.912s-99.897-12.971-144.043-38.912c-42.781-25.031-76.459-58.937-101.035-101.717-25.941-44.146-38.912-91.932-38.912-143.36s12.971-99.214 38.912-143.36c25.031-42.781 58.937-76.686 101.717-101.717 44.146-25.941 91.932-38.912 143.36-38.912z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  active: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  backupjob_proc_exit: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  incomplete: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  stop: [\n    {\n      path:\n        \"M472.994 505.023l-110.327 115.482 39.006 40.829 110.327-115.482 110.327 115.482 39.006-40.829-110.327-115.482 96.995-101.527-39.006-40.829-96.995 101.527-96.995-101.527-39.006 40.829 96.995 101.527zM512 213.333c164.864 0 298.667 133.803 298.667 298.667s-133.803 298.667-298.667 298.667c-164.864 0-298.667-133.803-298.667-298.667s133.803-298.667 298.667-298.667z\",\n      color: \"rgb(244, 45, 78)\"\n    }\n  ],\n  canceled: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  finished: [\n    {\n      path:\n        \"M439.979 640l256-256-40.277-41.643-215.723 216.405-101.035-101.717-40.277 40.277 141.312 142.677zM497.323 213.333c51.883 0 99.897 12.971 144.043 38.912 42.781 24.576 76.459 58.254 101.035 101.035 25.941 44.146 38.912 92.16 38.912 144.043s-12.971 99.897-38.912 144.043c-24.576 42.781-58.254 76.459-101.035 101.035-44.146 25.941-92.16 38.912-144.043 38.912s-99.897-12.971-144.043-38.912c-42.781-25.031-76.459-58.937-101.035-101.717-25.941-44.146-38.912-91.932-38.912-143.36s12.971-99.214 38.912-143.36c25.031-42.781 58.937-76.686 101.717-101.717 44.146-25.941 91.932-38.912 143.36-38.912z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  waiting: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  missed: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  failed: [\n    {\n      path:\n        \"M472.994 505.023l-110.327 115.482 39.006 40.829 110.327-115.482 110.327 115.482 39.006-40.829-110.327-115.482 96.995-101.527-39.006-40.829-96.995 101.527-96.995-101.527-39.006 40.829 96.995 101.527zM512 213.333c164.864 0 298.667 133.803 298.667 298.667s-133.803 298.667-298.667 298.667c-164.864 0-298.667-133.803-298.667-298.667s133.803-298.667 298.667-298.667z\",\n      color: \"rgb(244, 45, 78)\"\n    }\n  ],\n  crash: [\n    {\n      path:\n        \"M472.994 505.023l-110.327 115.482 39.006 40.829 110.327-115.482 110.327 115.482 39.006-40.829-110.327-115.482 96.995-101.527-39.006-40.829-96.995 101.527-96.995-101.527-39.006 40.829 96.995 101.527zM512 213.333c164.864 0 298.667 133.803 298.667 298.667s-133.803 298.667-298.667 298.667c-164.864 0-298.667-133.803-298.667-298.667s133.803-298.667 298.667-298.667z\",\n      color: \"rgb(244, 45, 78)\"\n    }\n  ],\n  license_failed: [\n    {\n      path:\n        \"M472.994 505.023l-110.327 115.482 39.006 40.829 110.327-115.482 110.327 115.482 39.006-40.829-110.327-115.482 96.995-101.527-39.006-40.829-96.995 101.527-96.995-101.527-39.006 40.829 96.995 101.527zM512 213.333c164.864 0 298.667 133.803 298.667 298.667s-133.803 298.667-298.667 298.667c-164.864 0-298.667-133.803-298.667-298.667s133.803-298.667 298.667-298.667z\",\n      color: \"rgb(244, 45, 78)\"\n    }\n  ],\n  notification:\n    \"M635.487 125.703c-7.417-12.715-17.997-23.295-30.712-30.712-40.708-23.747-92.96-9.996-116.706 30.712l-424.258 727.3c-7.613 13.051-11.624 27.888-11.624 42.997 0 47.128 38.205 85.333 85.333 85.333h848.517c15.109 0 29.946-4.011 42.997-11.624 40.708-23.747 54.459-75.998 30.712-116.706l-424.258-727.3zM672.341 104.204l424.258 727.3c35.62 61.063 14.994 139.439-46.068 175.059-19.576 11.419-41.832 17.436-64.495 17.436h-848.517c-70.692 0-128-57.308-128-128 0-22.663 6.017-44.92 17.436-64.495l424.258-727.3c35.62-61.063 113.997-81.688 175.059-46.068 19.072 11.126 34.943 26.996 46.068 46.068zM522.667 341.333v301.699h64v-301.699h-64zM554.667 810.667c23.564 0 42.667-19.103 42.667-42.667s-19.103-42.667-42.667-42.667c-23.564 0-42.667 19.103-42.667 42.667s19.103 42.667 42.667 42.667z\",\n  help:\n    \"M512 981.333c259.206 0 469.333-210.128 469.333-469.333s-210.128-469.333-469.333-469.333c-259.206 0-469.333 210.128-469.333 469.333s210.128 469.333 469.333 469.333zM512 1024c-282.77 0-512-229.23-512-512s229.23-512 512-512c282.77 0 512 229.23 512 512s-229.23 512-512 512zM471.893 632.832h59.904v-33.792c0-85.248 137.472-109.824 137.472-235.008 0-82.176-58.368-143.616-154.368-143.616-86.784 0-129.024 57.6-143.616 98.304l48.384 22.272c12.288-26.88 36.864-64.512 93.696-64.512 58.368 0 92.16 38.4 92.16 89.856 0 100.608-133.632 125.952-133.632 230.4v36.096zM459.605 734.976c0 23.808 19.968 43.008 43.776 43.008s43.008-19.2 43.008-43.008c0-23.808-19.2-43.008-43.008-43.008s-43.776 19.2-43.776 43.008z\",\n  unprotect: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z \",\n      color: \"rgb(247, 108, 131)\"\n    }\n  ],\n  information: [\n    {\n      path:\n        \"M512 219.435c161.323 0 292.565 131.243 292.565 292.565s-131.243 292.565-292.565 292.565c-161.323 0-292.565-131.243-292.565-292.565s131.243-292.565 292.565-292.565zM512 170.667c-188.501 0-341.333 152.832-341.333 341.333s152.832 341.333 341.333 341.333c188.501 0 341.333-152.832 341.333-341.333s-152.832-341.333-341.333-341.333z\"\n    },\n    {\n      path: \"M469.333 341.333h85.333v85.333h-85.333v-85.333z\"\n    },\n    {\n      path: \"M469.333 469.333h85.333v213.291h-85.333v-213.291z\"\n    }\n  ],\n  ok: [\n    {\n      path:\n        \"M439.979 640l256-256-40.277-41.643-215.723 216.405-101.035-101.717-40.277 40.277 141.312 142.677zM497.323 213.333c51.883 0 99.897 12.971 144.043 38.912 42.781 24.576 76.459 58.254 101.035 101.035 25.941 44.146 38.912 92.16 38.912 144.043s-12.971 99.897-38.912 144.043c-24.576 42.781-58.254 76.459-101.035 101.035-44.146 25.941-92.16 38.912-144.043 38.912s-99.897-12.971-144.043-38.912c-42.781-25.031-76.459-58.937-101.035-101.717-25.941-44.146-38.912-91.932-38.912-143.36s12.971-99.214 38.912-143.36c25.031-42.781 58.937-76.686 101.717-101.717 44.146-25.941 91.932-38.912 143.36-38.912z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  allok: [\n    {\n      path:\n        \"M439.979 640l256-256-40.277-41.643-215.723 216.405-101.035-101.717-40.277 40.277 141.312 142.677zM497.323 213.333c51.883 0 99.897 12.971 144.043 38.912 42.781 24.576 76.459 58.254 101.035 101.035 25.941 44.146 38.912 92.16 38.912 144.043s-12.971 99.897-38.912 144.043c-24.576 42.781-58.254 76.459-101.035 101.035-44.146 25.941-92.16 38.912-144.043 38.912s-99.897-12.971-144.043-38.912c-42.781-25.031-76.459-58.937-101.035-101.717-25.941-44.146-38.912-91.932-38.912-143.36s12.971-99.214 38.912-143.36c25.031-42.781 58.937-76.686 101.717-101.717 44.146-25.941 91.932-38.912 143.36-38.912z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  statusdetails: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z \",\n      color: \"rgb(247, 108, 131)\"\n    }\n  ],\n  error: [\n    {\n      path:\n        \"M472.994 505.023l-110.327 115.482 39.006 40.829 110.327-115.482 110.327 115.482 39.006-40.829-110.327-115.482 96.995-101.527-39.006-40.829-96.995 101.527-96.995-101.527-39.006 40.829 96.995 101.527zM512 213.333c164.864 0 298.667 133.803 298.667 298.667s-133.803 298.667-298.667 298.667c-164.864 0-298.667-133.803-298.667-298.667s133.803-298.667 298.667-298.667z\",\n      color: \"rgb(244, 45, 78)\"\n    }\n  ],\n  critical: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  warning: [\n    {\n      path:\n        \"M512 213.333c-164.864 0-298.667 133.803-298.667 298.667s133.803 298.667 298.667 298.667c164.864 0 298.667-133.803 298.667-298.667s-133.803-298.667-298.667-298.667zM541.867 661.333h-59.733v-59.733h59.733v59.733zM541.867 541.867h-59.733v-179.2h59.733v179.2z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  remove_photo: [\n    {\n      path:\n        \"M512 981.333c259.206 0 469.333-210.128 469.333-469.333s-210.128-469.333-469.333-469.333c-259.206 0-469.333 210.128-469.333 469.333s210.128 469.333 469.333 469.333zM512 1024c-282.77 0-512-229.23-512-512s229.23-512 512-512c282.77 0 512 229.23 512 512s-229.23 512-512 512z\"\n    },\n    {\n      path:\n        \"M703.006 280.625l40.727 40.727-190.826 190.826 190.826 190.826-40.727 40.727-190.826-190.826-190.826 190.826-40.727-40.727 190.826-190.826-190.826-190.826 40.727-40.727 190.826 190.826z\"\n    }\n  ],\n  unpinned: [\n    {\n      path:\n        \"M513.295 721.833l-217.223-217.223c-3.717-3.717-5.393-9.065-4.532-14.488 0.848-5.41 4.126-10.329 8.885-13.277 35.938-22.35 83.353-34.284 128.412-32.592l103.091-103.091c-3.195-23.909 3.407-55.734 18.791-89.485 2.511-5.48 7.482-9.534 13.283-10.845s11.662 0.309 15.669 4.316l193.087 193.087c4.007 4.007 5.614 9.881 4.316 15.669-1.311 5.8-5.365 10.772-10.832 13.27-33.764 15.396-65.588 21.999-89.498 18.804l-102.884 102.884c2.052 37.506-8.905 81.216-31.934 127.078-2.666 5.273-7.605 9.101-13.313 10.272-5.671 1.182-11.395-0.456-15.317-4.378zM338.779 495.597l182.552 182.552c13.92-34.025 19.66-65.445 16.627-91.907-0.634-5.521 1.421-11.172 5.507-15.258l116.37-116.37c4.9-4.9 11.957-6.792 18.246-4.899 9.427 2.858 26.565 2.567 49.76-4.675l-154.977-154.977c-7.23 23.208-7.533 40.334-4.663 49.773 1.881 6.277-0.010 13.333-4.911 18.234l-116.37 116.37c-3.931 3.931-9.307 5.976-14.624 5.573-40.042-3.089-72.787 6.655-93.519 15.584z\"\n    },\n    {\n      path:\n        \"M262.454 755.451c-6.662-6.662-6.288-17.848 0.862-24.998l142.229-142.229c7.15-7.15 18.336-7.524 24.998-0.862s6.288 17.848-0.862 24.998l-142.229 142.229c-7.15 7.15-18.336 7.524-24.998 0.862z\"\n    }\n  ],\n  pinned: [\n    {\n      path:\n        \"M513.295 721.833l-217.223-217.223c-3.717-3.717-5.393-9.065-4.532-14.488 0.848-5.41 4.126-10.329 8.885-13.277 35.938-22.35 83.353-34.284 128.412-32.592l103.091-103.091c-3.195-23.909 3.407-55.734 18.791-89.485 2.511-5.48 7.482-9.534 13.283-10.845s11.662 0.309 15.669 4.316l193.087 193.087c4.007 4.007 5.614 9.881 4.316 15.669-1.311 5.8-5.365 10.772-10.832 13.27-33.764 15.396-65.588 21.999-89.498 18.804l-102.884 102.884c2.052 37.506-8.905 81.216-31.934 127.078-2.666 5.273-7.605 9.101-13.313 10.272-5.671 1.182-11.395-0.456-15.317-4.378z\",\n      color: \"rgb(255,215,0)\"\n    },\n    {\n      path:\n        \"M262.454 755.451c-6.662-6.662-6.288-17.848 0.862-24.998l142.229-142.229c7.15-7.15 18.336-7.524 24.998-0.862s6.288 17.848-0.862 24.998l-142.229 142.229c-7.15 7.15-18.336 7.524-24.998 0.862z\",\n      color: \"rgb(255,215,0)\"\n    }\n  ],\n  protect: [\n    {\n      path:\n        \"M438.101 647.994l209.010-217.33-36.921-38.391-172.089 178.289-66.958-70.275-36.921 38.391 103.879 109.316zM490.667 213.333l234.667 109.316v162.672c0 49.453-10.221 97.169-30.663 143.152-20.442 45.115-48.185 83.722-83.228 115.823-36.295 32.968-76.553 55.092-120.775 66.37-44.222-11.279-84.48-33.402-120.775-66.37-35.044-32.101-62.786-70.708-83.228-115.823-20.442-45.982-30.663-93.699-30.663-143.152v-162.672l234.667-109.316z\",\n      color: \"rgb(60, 152, 132)\"\n    }\n  ],\n  machine: [\n    {\n      path:\n        \"M234.667 631.893c-2.56-106.24 0-213.333 0-322.987 0-42.667 32.427-52.907 74.667-52.907h405.333c42.667 0 73.813 11.093 74.667 52.907 2.987 110.080 0 217.6 0 322.987 0 32.853-33.707 51.627-78.507 51.627h-133.12v20.48h-128v-20.48h-146.347c-2.044 0.174-4.424 0.274-6.827 0.274s-4.782-0.099-7.135-0.294l0.308 0.021c-28.759-1.161-52.016-23.24-55.018-51.374l-0.022-0.252zM512 298.667h-206.933c-1.432-0.317-3.077-0.498-4.765-0.498-12.725 0-23.040 10.315-23.040 23.040 0 1.687 0.181 3.333 0.526 4.917l-0.028-0.152q0 142.933 0 285.867c-0.309 1.429-0.486 3.070-0.486 4.753 0 12.96 10.506 23.467 23.467 23.467 1.683 0 3.324-0.177 4.907-0.514l-0.154 0.027h414.293c1.295 0.254 2.785 0.399 4.308 0.399 12.96 0 23.467-10.506 23.467-23.467 0-1.651-0.171-3.263-0.495-4.818l0.027 0.152q0-142.933 0-285.867c0.345-1.495 0.543-3.211 0.543-4.974 0-12.725-10.315-23.040-23.040-23.040-2.012 0-3.963 0.258-5.823 0.742l0.16-0.035h-206.933z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M341.333 768c0-5.973 0-10.667 0-15.787-0.24-1.249-0.378-2.685-0.378-4.154 0-12.725 10.315-23.040 23.040-23.040 1.339 0 2.651 0.114 3.928 0.333l-0.137-0.019h288.427c1.159-0.199 2.495-0.313 3.856-0.313 13.196 0 23.893 10.697 23.893 23.893 0 1.62-0.161 3.203-0.469 4.733l0.026-0.153c0 4.693 0 8.96 0 14.507h-342.187z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  view: [\n    {\n      path:\n        \"M234.667 631.893c-2.56-106.24 0-213.333 0-322.987 0-42.667 32.427-52.907 74.667-52.907h405.333c42.667 0 73.813 11.093 74.667 52.907 2.987 110.080 0 217.6 0 322.987 0 32.853-33.707 51.627-78.507 51.627h-133.12v20.48h-128v-20.48h-146.347c-2.044 0.174-4.424 0.274-6.827 0.274s-4.782-0.099-7.135-0.294l0.308 0.021c-28.759-1.161-52.016-23.24-55.018-51.374l-0.022-0.252zM512 298.667h-206.933c-1.432-0.317-3.077-0.498-4.765-0.498-12.725 0-23.040 10.315-23.040 23.040 0 1.687 0.181 3.333 0.526 4.917l-0.028-0.152q0 142.933 0 285.867c-0.309 1.429-0.486 3.070-0.486 4.753 0 12.96 10.506 23.467 23.467 23.467 1.683 0 3.324-0.177 4.907-0.514l-0.154 0.027h414.293c1.295 0.254 2.785 0.399 4.308 0.399 12.96 0 23.467-10.506 23.467-23.467 0-1.651-0.171-3.263-0.495-4.818l0.027 0.152q0-142.933 0-285.867c0.345-1.495 0.543-3.211 0.543-4.974 0-12.725-10.315-23.040-23.040-23.040-2.012 0-3.963 0.258-5.823 0.742l0.16-0.035h-206.933z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M341.333 768c0-5.973 0-10.667 0-15.787-0.24-1.249-0.378-2.685-0.378-4.154 0-12.725 10.315-23.040 23.040-23.040 1.339 0 2.651 0.114 3.928 0.333l-0.137-0.019h288.427c1.159-0.199 2.495-0.313 3.856-0.313 13.196 0 23.893 10.697 23.893 23.893 0 1.62-0.161 3.203-0.469 4.733l0.026-0.153c0 4.693 0 8.96 0 14.507h-342.187z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  instant_vm: [\n    {\n      path:\n        \"M234.667 631.893c-2.56-106.24 0-213.333 0-322.987 0-42.667 32.427-52.907 74.667-52.907h405.333c42.667 0 73.813 11.093 74.667 52.907 2.987 110.080 0 217.6 0 322.987 0 32.853-33.707 51.627-78.507 51.627h-133.12v20.48h-128v-20.48h-146.347c-2.044 0.174-4.424 0.274-6.827 0.274s-4.782-0.099-7.135-0.294l0.308 0.021c-28.759-1.161-52.016-23.24-55.018-51.374l-0.022-0.252zM512 298.667h-206.933c-1.432-0.317-3.077-0.498-4.765-0.498-12.725 0-23.040 10.315-23.040 23.040 0 1.687 0.181 3.333 0.526 4.917l-0.028-0.152q0 142.933 0 285.867c-0.309 1.429-0.486 3.070-0.486 4.753 0 12.96 10.506 23.467 23.467 23.467 1.683 0 3.324-0.177 4.907-0.514l-0.154 0.027h414.293c1.295 0.254 2.785 0.399 4.308 0.399 12.96 0 23.467-10.506 23.467-23.467 0-1.651-0.171-3.263-0.495-4.818l0.027 0.152q0-142.933 0-285.867c0.345-1.495 0.543-3.211 0.543-4.974 0-12.725-10.315-23.040-23.040-23.040-2.012 0-3.963 0.258-5.823 0.742l0.16-0.035h-206.933z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M341.333 768c0-5.973 0-10.667 0-15.787-0.24-1.249-0.378-2.685-0.378-4.154 0-12.725 10.315-23.040 23.040-23.040 1.339 0 2.651 0.114 3.928 0.333l-0.137-0.019h288.427c1.159-0.199 2.495-0.313 3.856-0.313 13.196 0 23.893 10.697 23.893 23.893 0 1.62-0.161 3.203-0.469 4.733l0.026-0.153c0 4.693 0 8.96 0 14.507h-342.187z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M512 597.333h-105.387c-0.509 0.015-1.107 0.023-1.708 0.023-34.969 0-63.343-28.233-63.572-63.148l-0-0.022q0-64.853 0-128c-0.001-0.127-0.001-0.278-0.001-0.428 0-35.432 28.603-64.184 63.978-64.425l0.023-0h213.333c35.399 0.241 64.001 28.993 64.001 64.425 0 0.151-0.001 0.301-0.002 0.451l0-0.023q0 63.573 0 128c-0.229 34.937-28.603 63.17-63.572 63.17-0.601 0-1.199-0.008-1.796-0.025l0.088 0.002h-105.387zM384 406.613c-0.098 0.769-0.154 1.658-0.154 2.56s0.056 1.791 0.165 2.664l-0.011-0.104c0 39.68 0 79.787 0 119.467-0.040 0.506-0.062 1.095-0.062 1.69 0 12.725 10.315 23.040 23.040 23.040 1.531 0 3.027-0.149 4.475-0.434l-0.146 0.024h199.68c1.419 0.289 3.051 0.455 4.721 0.455 13.667 0 24.747-11.079 24.747-24.747 0-1.67-0.165-3.302-0.481-4.879l0.026 0.158c0-30.293 0-60.587 0-91.307 0-9.387 0-18.773 0-28.587h-256z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  agentless_vm: [\n    {\n      path:\n        \"M234.667 631.893c-2.56-106.24 0-213.333 0-322.987 0-42.667 32.427-52.907 74.667-52.907h405.333c42.667 0 73.813 11.093 74.667 52.907 2.987 110.080 0 217.6 0 322.987 0 32.853-33.707 51.627-78.507 51.627h-133.12v20.48h-128v-20.48h-146.347c-2.044 0.174-4.424 0.274-6.827 0.274s-4.782-0.099-7.135-0.294l0.308 0.021c-28.759-1.161-52.016-23.24-55.018-51.374l-0.022-0.252zM512 298.667h-206.933c-1.432-0.317-3.077-0.498-4.765-0.498-12.725 0-23.040 10.315-23.040 23.040 0 1.687 0.181 3.333 0.526 4.917l-0.028-0.152q0 142.933 0 285.867c-0.309 1.429-0.486 3.070-0.486 4.753 0 12.96 10.506 23.467 23.467 23.467 1.683 0 3.324-0.177 4.907-0.514l-0.154 0.027h414.293c1.295 0.254 2.785 0.399 4.308 0.399 12.96 0 23.467-10.506 23.467-23.467 0-1.651-0.171-3.263-0.495-4.818l0.027 0.152q0-142.933 0-285.867c0.345-1.495 0.543-3.211 0.543-4.974 0-12.725-10.315-23.040-23.040-23.040-2.012 0-3.963 0.258-5.823 0.742l0.16-0.035h-206.933z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M341.333 768c0-5.973 0-10.667 0-15.787-0.24-1.249-0.378-2.685-0.378-4.154 0-12.725 10.315-23.040 23.040-23.040 1.339 0 2.651 0.114 3.928 0.333l-0.137-0.019h288.427c1.159-0.199 2.495-0.313 3.856-0.313 13.196 0 23.893 10.697 23.893 23.893 0 1.62-0.161 3.203-0.469 4.733l0.026-0.153c0 4.693 0 8.96 0 14.507h-342.187z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M512 597.333h-105.387c-0.509 0.015-1.107 0.023-1.708 0.023-34.969 0-63.343-28.233-63.572-63.148l-0-0.022q0-64.853 0-128c-0.001-0.127-0.001-0.278-0.001-0.428 0-35.432 28.603-64.184 63.978-64.425l0.023-0h213.333c35.399 0.241 64.001 28.993 64.001 64.425 0 0.151-0.001 0.301-0.002 0.451l0-0.023q0 63.573 0 128c-0.229 34.937-28.603 63.17-63.572 63.17-0.601 0-1.199-0.008-1.796-0.025l0.088 0.002h-105.387zM384 406.613c-0.098 0.769-0.154 1.658-0.154 2.56s0.056 1.791 0.165 2.664l-0.011-0.104c0 39.68 0 79.787 0 119.467-0.040 0.506-0.062 1.095-0.062 1.69 0 12.725 10.315 23.040 23.040 23.040 1.531 0 3.027-0.149 4.475-0.434l-0.146 0.024h199.68c1.419 0.289 3.051 0.455 4.721 0.455 13.667 0 24.747-11.079 24.747-24.747 0-1.67-0.165-3.302-0.481-4.879l0.026 0.158c0-30.293 0-60.587 0-91.307 0-9.387 0-18.773 0-28.587h-256z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  one_drive: [\n    {\n      path:\n        \"M803.333,486.667l-16.667-6.667l-3.333-23.333c-6.667-80.000-86.667-126.667-170.000-100.000L596.667,366.667l-20.000-20.000c-33.333-36.667-60.000-46.667-106.667-46.667  c-33.333,0.000-50.000,3.333-76.667,16.667c-26.667,13.333-53.333,46.667-66.667,86.667c-3.333,10.000-6.667,20.000-6.667,23.333c0.000,10.000-6.667,16.667-26.667,20.000c-43.333,10.000-73.333,33.333-86.667,63.333  C200.000,520.000,200.000,530.000,200.000,550.000c0.000,60.000,30.000,103.333,80.000,113.333C293.333,666.667,356.667,666.667,553.333,666.667l256.667,0.000l10.000-6.667c23.333-13.333,40.000-40.000,43.333-73.333  C870.000,536.667,850.000,503.333,803.333,486.667z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M653.333,283.333c-26.667-76.667-96.667-130.000-180.000-130.000c-30.000,0.000-53.333,6.667-76.667,16.667c-23.333,10.000-50.000,33.333-63.333,50.000c-23.333,30.000-20.000,30.000-33.333,23.333  C270.000,233.333,233.333,230.000,203.333,240.000c-56.667,16.667-96.667,73.333-100.000,133.333c0.000,10.000,0.000,20.000-3.333,20.000C100.000,396.667,93.333,400.000,83.333,400.000c-33.333,10.000-63.333,30.000-76.667,63.333C0.000,476.667,0.000,483.333,0.000,510.000  c0.000,30.000,0.000,33.333,10.000,50.000c16.667,30.000,46.667,56.667,76.667,66.667c10.000,3.333,90.000,3.333,93.333,0.000c0.000,0.000,0.000-6.667-3.333-13.333c-6.667-16.667-13.333-43.333-13.333-66.667c0.000-63.333,36.667-110.000,103.333-133.333  c20.000-6.667,26.667-10.000,26.667-16.667c0.000-10.000,16.667-43.333,26.667-60.000c16.667-26.667,40.000-46.667,66.667-60.000c70.000-33.333,153.333-23.333,203.333,26.667l16.667,16.667l20.000-6.667  c10.000-3.333,23.333-6.667,26.667-6.667C660.000,313.333,660.000,300.000,653.333,283.333z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  office_365: [\n    {\n      path:\n        \"M572.609 318.997c0.777 4.89 0.975 358.453 0.237 366.168-60.076-14.31-120.063-28.607-180.297-42.955v-249.235c-31.010-12.121-61.91-24.191-92.797-36.249-0.199 0.111-0.369 0.172-0.53 0.287-0.136 0.099-0.309 0.248-0.322 0.385-0.098 0.933-0.221 1.867-0.221 2.813-0.013 100.706-0.013 201.425-0.013 301.883 1.383 1.704 3.169 1.918 4.722 2.488 88.286 33.063 176.597 66.092 264.893 99.152 3.059 1.147 5.833 1.707 9.223 0.71 48.447-14.061 96.941-27.96 145.423-41.91 0.704-0.213 1.408-0.462 2.405-0.784v-424.468c-13.92-3.87-27.718-7.741-41.528-11.548-35.155-9.694-70.331-19.314-105.461-29.081-3.441-0.959-6.449-0.886-9.83 0.36-86.84 32.092-173.722 64.085-260.574 96.090-1.714 0.634-3.393 1.344-4.836 2.873 89.839-12.331 179.678-24.65 269.504-36.982z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  shared_folder: [\n    {\n      path:\n        \"M767.989 683.077v-299.126h-510.862v299.126h510.862zM751.795 341.486c16.274 0 30.154 5.983 41.641 17.949s17.231 26.085 17.231 42.359v263.179c0 16.274-5.744 30.393-17.231 42.359s-25.367 17.949-41.641 17.949h-479.59c-16.274 0-30.154-5.983-41.641-17.949s-17.231-26.085-17.231-42.359v-305.538c0-16.274 5.744-30.393 17.231-42.359s25.367-17.949 41.641-17.949h179.487l60.308 42.359h239.795z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  share_point: [\n    {\n      path:\n        \"M322.785 438.993c-13.536 15.565-17.663 37.31-15.094 57.221 2.087 17.335 11.818 33.154 25.258 44.294 12.252 10.303 27.795 16.466 38.666 28.413 8.173 8.976 10.245 24.067 2.104 33.691-6.519 7.727-17.775 8.391-27.137 6.842-15.511-2.228-28.823-11.694-38.955-23.056 0.128 15.976-0.016 31.953 0.080 47.929 15.126 11.409 34.668 15.376 53.391 15.17 13.135-0.363 26.671-3.287 37.349-11.172 13.504-9.56 21.212-25.41 23.090-41.418 2.714-18.6-0.546-38.748-12.155-54.044-10.212-12.8-24.102-22.044-38.104-30.357-7.483-4.583-15.158-9.497-20.232-16.719-5.973-9.892-5.765-24.146 2.987-32.442 7.386-7 18.498-7.617 28.132-6.432 11.77 1.201 22.769 6.4 31.906 13.653-0.032-15.881-0.016-31.747 0-47.629-15.254-6.242-32.083-6.874-48.333-5.547-16.33 1.691-32.452 8.913-42.953 21.602zM213.338 313.79c109.575-19.295 219.151-38.511 328.726-57.79 0.112 184.715 0.032 369.446 0.048 554.161-109.624-19.105-219.183-38.511-328.774-57.695 0.016-146.22-0.016-292.456 0-438.677z\",\n      color: \"rgb(143, 143, 143)\"\n    },\n    {\n      path:\n        \"M573.842 348.95c11.176-10.983 26.944-17.478 42.841-16.087 22.673 1.264 42.777 18.584 48.268 40.091 2.232 8.059 2.473 16.545 1.028 24.778 36.659 14.933 66.269 45.227 80.399 81.683 16.057-3.002 33.383 1.58 45.474 12.452 19.172 16.15 24.231 45.4 12.605 67.255-10.405 20.67-35.133 33.106-58.256 28.286-14.066 36.314-43.564 66.686-80.19 81.414 3.292 17.809-2.36 37.199-15.624 49.92-13.713 13.875-35.567 18.979-54.194 12.832-8.543-2.765-16.346-7.648-22.4-14.206 0.032-25.426 0.064-50.852-0.016-76.279 10.566-10.888 25.708-17.62 41.139-16.766 14.532 0.363 28.036 7.538 37.911 17.762 30.862-11.978 55.623-37.499 66.847-68.172-9.153-9.276-15.784-21.286-16.973-34.307-2.28-17.193 4.833-34.528 17.053-46.696-11.288-30.752-36.129-56.431-67.12-68.393-8.864 9.924-21.453 16.577-34.877 17.841-16.298 1.786-32.677-5.041-43.965-16.482 0.096-25.647-0.032-51.279 0.048-76.926z\",\n      color: \"rgb(143, 143, 143)\"\n    }\n  ],\n  back: [\n    {\n      path: \"M107.061 544v-64h1109.178v64z\",\n      color: \"rgb(151, 151, 151)\"\n    },\n    {\n      path:\n        \"M125.037 521.594l414.299 414.299-45.255 45.255-458.527-458.527 458.014-479.532 46.281 44.205z\",\n      color: \"rgb(151, 151, 151)\"\n    }\n  ],\n  partial_protect: [\n    {\n      path:\n        \"M490.667 213.333l234.667 109.316v162.672c0 49.453-10.221 97.169-30.663 143.152-20.442 45.115-48.185 83.722-83.228 115.823-36.295 32.968-76.553 55.092-120.775 66.37-44.222-11.279-84.48-33.402-120.775-66.37-35.044-32.101-62.786-70.708-83.228-115.823-20.442-45.982-30.663-93.699-30.663-143.152v-162.672l234.667-109.316zM520.533 661.333v-59.733h-59.733v59.733h59.733zM520.533 541.867v-179.2h-59.733v179.2h59.733z\",\n      color: \"rgb(234, 164, 51)\"\n    }\n  ],\n  connected: [\n    {\n      path:\n        \"M512.284 781.938l330.809-412.16c-12.8-9.671-140.231-113.778-331.093-113.778-191.147 0-318.293 104.107-331.093 113.778l331.093 412.444 0.284-0.284z\",\n      color: \"rgba(75, 191, 165, 0.43)\"\n    },\n    {\n      path:\n        \"M271.076 482.133l240.924 300.089 0.284-0.284 240.64-299.804c-12.231-9.387-104.107-83.911-240.924-83.911s-228.693 74.524-240.924 83.911z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  online: [\n    {\n      path:\n        \"M512.284 781.938l330.809-412.16c-12.8-9.671-140.231-113.778-331.093-113.778-191.147 0-318.293 104.107-331.093 113.778l331.093 412.444 0.284-0.284z\",\n      color: \"rgba(75, 191, 165, 0.43)\"\n    },\n    {\n      path:\n        \"M271.076 482.133l240.924 300.089 0.284-0.284 240.64-299.804c-12.231-9.387-104.107-83.911-240.924-83.911s-228.693 74.524-240.924 83.911z\",\n      color: \"rgb(75, 191, 165)\"\n    }\n  ],\n  notconnected: [\n    {\n      path:\n        \"M512 256c-143.644 0-251.733 52.622-341.333 120.32l341.333 420.124 341.333-419.556c-89.6-67.698-197.689-120.889-341.333-120.889zM540.444 625.778h-56.889v-170.667h56.889v170.667zM483.556 398.222v-56.889h56.889v56.889h-56.889z\",\n      color: \"rgb(247, 108, 131)\"\n    }\n  ],\n  offline: [\n    {\n      path:\n        \"M512 256c-143.644 0-251.733 52.622-341.333 120.32l341.333 420.124 341.333-419.556c-89.6-67.698-197.689-120.889-341.333-120.889zM540.444 625.778h-56.889v-170.667h56.889v170.667zM483.556 398.222v-56.889h56.889v56.889h-56.889z\",\n      color: \"rgb(247, 108, 131)\"\n    }\n  ],\n  monitor_menu: [\n    {\n      path:\n        \"M128 0h768c70.692 0 128 57.308 128 128v768c0 70.692-57.308 128-128 128h-768c-70.692 0-128-57.308-128-128v-768c0-70.692 57.308-128 128-128z\",\n      color: \"transparent\"\n    },\n    {\n      path:\n        \"M285.457 499.821c36.204-92.25 125.569-154.221 226.543-154.221 134.322 0 243.2 108.654 243.2 242.673 0 7.069 5.731 12.8 12.8 12.8s12.8-5.731 12.8-12.8c0-148.169-120.352-268.273-268.8-268.273-111.585 0-210.353 68.492-250.374 170.469-8.080 20.589-14.117 52.639-18.367 96.571l-1.353 13.984 167.649 0.576c7.069 0.024 12.82-5.687 12.844-12.756s-5.687-12.82-12.756-12.844c-24.619-0.085-25.562-0.088-139.441-0.479 3.901-34.548 9.045-59.878 15.254-75.7z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M717.321 588.431c0-105.841-85.967-191.631-192-191.631-79.701 0-150.249 48.923-178.836 121.765-2.583 6.581 0.658 14.009 7.239 16.591s14.009-0.658 16.591-7.239c24.77-63.116 85.915-105.518 155.006-105.518 91.906 0 166.4 74.34 166.4 166.031 0 7.069 5.731 12.8 12.8 12.8s12.8-5.731 12.8-12.8z\",\n      color: \"#83D3C0\"\n    },\n    {\n      path:\n        \"M505.141 647.532c-35.346 0-64-28.654-64-64s28.654-64 64-64c35.346 0 64 28.654 64 64s-28.654 64-64 64zM505.141 621.932c21.208 0 38.4-17.192 38.4-38.4s-17.192-38.4-38.4-38.4c-21.208 0-38.4 17.192-38.4 38.4s17.192 38.4 38.4 38.4z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M545.264 540.844l78.035-135.063c3.537-6.121 1.441-13.95-4.68-17.487s-13.95-1.441-17.487 4.68l-78.035 135.063c-3.537 6.121-1.441 13.95 4.68 17.487s13.95 1.441 17.487-4.68z\",\n      color: \"#ffffff\"\n    }\n  ],\n  analyze_menu: [\n    {\n      path:\n        \"M128 0h768c70.692 0 128 57.308 128 128v768c0 70.692-57.308 128-128 128h-768c-70.692 0-128-57.308-128-128v-768c0-70.692 57.308-128 128-128z\",\n      color: \"transparent\"\n    },\n    {\n      path:\n        \"M720.525 449.577l56.526-56.526c4.999-4.999 4.999-13.103 0-18.102s-13.103-4.999-18.102 0l-45.874 45.874-180.942-51.698-101.315 151.972-143.493-71.747c-6.323-3.161-14.012-0.599-17.173 5.724s-0.599 14.012 5.724 17.173l163.707 81.853 103.485-155.228 177.458 50.702z\",\n      color: \"#83D3C0\"\n    },\n    {\n      path:\n        \"M615.54 448.542c0-92.232-74.766-166.998-166.998-166.998s-166.998 74.766-166.998 166.998c0 92.232 74.766 166.998 166.998 166.998s166.998-74.766 166.998-166.998zM641.14 448.542c0 106.37-86.227 192.598-192.598 192.598s-192.598-86.227-192.598-192.598c0-106.37 86.227-192.598 192.598-192.598s192.598 86.227 192.598 192.598z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M608.084 674.256c-18.26-18.26-18.26-47.882 0.007-66.179 18.282-18.253 47.904-18.253 66.164 0.007l80.105 80.105c18.268 18.268 18.263 47.879-0.007 66.179-18.285 18.256-47.896 18.261-66.164-0.007l-80.105-80.105zM736.252 736.266c8.277-8.29 8.279-21.703 0.007-29.975l-80.105-80.105c-8.265-8.265-21.689-8.265-29.96-0.007-8.272 8.286-8.272 21.71-0.007 29.975l80.105 80.105c8.272 8.272 21.685 8.269 29.96 0.007z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M626.184 608.082l-41.671-41.671c-4.999-4.999-13.103-4.999-18.102 0s-4.999 13.103 0 18.102l41.671 41.671c4.999 4.999 13.103 4.999 18.102 0s4.999-13.103 0-18.102z\",\n      color: \"#ffffff\"\n    }\n  ],\n  protect_menu: [\n    {\n      path:\n        \"M128 0h768c70.692 0 128 57.308 128 128v768c0 70.692-57.308 128-128 128h-768c-70.692 0-128-57.308-128-128v-768c0-70.692 57.308-128 128-128z\",\n      color: \"transparent\"\n    },\n    {\n      path:\n        \"M320 357.919v131.214c0 40.558 8.528 79.66 25.583 117.339 17.119 37.106 40.294 68.781 69.534 95.087 29.298 26.138 61.552 43.84 96.883 53.222 35.33-9.382 67.583-27.083 96.843-53.186 29.28-26.342 52.455-58.018 69.536-95.039 17.094-37.764 25.622-76.865 25.622-117.423v-131.214l-192-87.843-192 87.843zM729.6 341.48v147.653c0 44.218-9.312 86.917-27.938 128.064-18.562 40.234-43.81 74.742-75.737 103.466-33.196 29.615-70.177 49.574-110.815 59.754l-3.11 0.779-3.11-0.779c-40.637-10.179-77.619-30.139-110.855-59.79-31.887-28.688-57.135-63.196-75.736-103.514-18.587-41.063-27.9-83.762-27.9-127.98v-147.653l217.6-99.556 217.6 99.556z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M418.651 516.33l-18.102 18.102 60.251 60.251 150.432-150.432-18.102-18.102-132.33 132.33z\",\n      color: \"#83D3C0\"\n    }\n  ],\n  recover_menu: [\n    {\n      path:\n        \"M128 0h768c70.692 0 128 57.308 128 128v768c0 70.692-57.308 128-128 128h-768c-70.692 0-128-57.308-128-128v-768c0-70.692 57.308-128 128-128z\",\n      color: \"transparent\"\n    },\n    {\n      path:\n        \"M481.597 662.578l-7.997-3.237v-19.341c0-35.346-28.654-64-64-64h-27.567l-3.75-3.755c-3.29-3.294-5.957-6.793-7.941-10.579-16.174-30.864-24.743-65.263-24.743-100.866 0-120.177 97.423-217.6 217.6-217.6s217.6 97.423 217.6 217.6c0 120.177-97.423 217.6-217.6 217.6-28.315 0-55.898-5.417-81.603-15.822zM563.2 652.8c106.039 0 192-85.961 192-192s-85.961-192-192-192c-106.039 0-192 85.961-192 192 0 31.439 7.554 61.764 21.818 88.984 0.071 0.135 5.598 0.341 16.582 0.616 49.485 0 89.6 40.115 89.6 89.6v1.879c20.352 7.194 41.909 10.921 64 10.921z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M499.2 768v-128c0-49.485-40.115-89.6-89.6-89.6h-204.8v25.6h204.8c35.346 0 64 28.654 64 64v128h25.6z\",\n      color: \"#ffffff\"\n    },\n    {\n      path:\n        \"M265.051 521.051l-18.102-18.102-60.251 60.251 60.251 60.251 18.102-18.102-42.149-42.149z\",\n      color: \"#83D3C0\"\n    },\n    {\n      path: \"M576 332.8h-25.6v166.4h140.8v-25.6h-115.2z\",\n      color: \"#83D3C0\"\n    }\n  ],\n  configure_menu: [\n    {\n      path:\n        \"M128 0h768c70.692 0 128 57.308 128 128v768c0 70.692-57.308 128-128 128h-768c-70.692 0-128-57.308-128-128v-768c0-70.692 57.308-128 128-128z\",\n      color: \"transparent\"\n    },\n    {\n      path:\n        \"M422.4 512c0-49.476 40.121-89.6 89.6-89.6 49.492 0 89.6 40.118 89.6 89.6 0 49.475-40.111 89.6-89.6 89.6-49.476 0-89.6-40.131-89.6-89.6zM448 512c0 35.331 28.664 64 64 64 35.349 0 64-28.661 64-64 0-35.345-28.648-64-64-64-35.34 0-64 28.662-64 64z\",\n      color: \"#83D3C0\"\n    },\n    {\n      path:\n        \"M585.898 329.961l6.587 10.975 5.443-11.585c-2.081-0.978-4.181-1.921-6.3-2.829l-5.73 3.439zM749.511 449.662c17.576 4.398 31.289 21.962 31.289 40.077v44.522c0 18.112-13.722 35.698-31.289 40.077l-50.058 12.515c-0.639 1.601-1.296 3.188-1.972 4.761l26.543 44.248c9.321 15.53 6.595 37.65-6.208 50.453l-31.49 31.501c-12.808 12.808-34.931 15.529-50.462 6.2l-44.244-26.536c-1.579 0.677-3.169 1.334-4.77 1.972l-12.503 50.049c-4.396 17.583-21.968 31.3-40.088 31.3h-44.522c-18.115 0-35.689-13.725-40.066-31.3l-12.512-50.050c-1.606-0.639-3.197-1.296-4.773-1.972l-44.241 26.529c-15.528 9.336-37.649 6.616-50.477-6.196l-31.468-31.49c-12.823-12.806-15.55-34.935-6.217-50.457l26.541-44.251c-0.675-1.577-1.331-3.164-1.969-4.762l-50.047-12.512c-17.585-4.38-31.311-21.964-31.311-40.080v-44.522c0-18.119 13.716-35.681 31.3-40.077l50.051-12.513c0.638-1.602 1.295-3.192 1.971-4.77l-26.53-44.233c-9.339-15.532-6.613-37.657 6.202-50.472l31.478-31.49c12.812-12.812 34.932-15.533 50.464-6.21l44.245 26.547c1.577-0.675 3.169-1.334 4.777-1.975l12.513-50.051c4.382-17.576 21.956-31.297 40.068-31.297h44.522c18.116 0 35.69 13.713 40.089 31.291l12.504 50.056c1.603 0.64 3.194 1.298 4.774 1.975l44.239-26.549c15.545-9.32 37.665-6.6 50.46 6.212l31.494 31.494c12.799 12.815 15.524 34.931 6.204 50.458l-26.543 44.239c0.674 1.572 1.331 3.162 1.973 4.772l50.057 12.514zM686.76 460.362c-4.134-1.033-7.482-4.056-8.932-8.063-1.945-5.375-4.046-10.459-6.336-15.3-1.828-3.866-1.605-8.39 0.595-12.058l29.986-49.977c3.275-5.456 2.138-14.684-2.361-19.189l-31.494-31.494c-4.493-4.499-13.716-5.633-19.184-2.355l-49.965 29.985c-3.658 2.195-8.169 2.424-12.030 0.61-4.975-2.337-10.073-4.447-15.333-6.347-4.011-1.448-7.037-4.799-8.071-8.937l-14.123-56.538c-1.546-6.177-8.88-11.9-15.253-11.9h-44.522c-6.362 0-13.691 5.722-15.23 11.898l-14.136 56.543c-1.033 4.134-4.056 7.482-8.063 8.932-5.32 1.925-10.432 4.038-15.331 6.345-3.862 1.819-8.377 1.592-12.038-0.605l-49.977-29.986c-5.461-3.278-14.684-2.143-19.187 2.36l-31.478 31.49c-4.509 4.509-5.645 13.728-2.359 19.192l29.974 49.976c2.195 3.66 2.422 8.175 0.604 12.036-2.326 4.94-4.434 10.040-6.326 15.299-1.445 4.017-4.798 7.049-8.94 8.084l-56.543 14.136c-6.189 1.547-11.909 8.871-11.909 15.241v44.522c0 6.367 5.725 13.701 11.909 15.241l56.543 14.136c4.136 1.034 7.486 4.060 8.935 8.070 1.895 5.247 4.005 10.35 6.34 15.332 1.808 3.858 1.579 8.363-0.613 12.017l-29.982 49.988c-3.277 5.451-2.142 14.667 2.37 19.172l31.468 31.49c4.51 4.505 13.734 5.639 19.199 2.353l49.987-29.974c3.663-2.197 8.181-2.421 12.045-0.599 4.895 2.309 9.999 4.418 15.289 6.322 4.017 1.445 7.049 4.798 8.084 8.94l14.138 56.554c1.538 6.176 8.864 11.898 15.227 11.898h44.522c6.374 0 13.706-5.723 15.252-11.906l14.125-56.543c1.035-4.145 4.071-7.5 8.092-8.945 5.233-1.879 10.322-3.984 15.291-6.323 3.862-1.818 8.376-1.592 12.036 0.604l49.983 29.978c5.463 3.281 14.686 2.147 19.184-2.351l31.49-31.501c4.498-4.498 5.635-13.723 2.36-19.181l-29.985-49.987c-2.198-3.664-2.423-8.182-0.6-12.046 2.324-4.925 4.432-10.015 6.338-15.292 1.448-4.010 4.798-7.036 8.935-8.070l56.551-14.138c6.164-1.537 11.889-8.874 11.889-15.239v-44.522c0-6.369-5.719-13.694-11.899-15.242l-56.541-14.135z\",\n      color: \"#ffffff\"\n    }\n  ],\n  refresh:\n    \"M791.273 362.667l-147.394 149.333h110.545c0 123.573-99.122 224-221.091 224-37.217 0-72.592-9.333-103.176-26.133l-53.799 54.507c45.324 29.12 99.122 46.293 156.975 46.293 162.87 0 294.788-133.653 294.788-298.667h110.545l-147.394-149.333zM312.242 512c0-123.573 99.122-224 221.091-224 37.217 0 72.592 9.333 103.176 26.133l53.799-54.507c-45.324-29.12-99.122-46.293-156.975-46.293-162.87 0-294.788 133.653-294.788 298.667h-110.545l147.394 149.333 147.394-149.333h-110.545z\",\n  download:\n    \"M768 409.098h-134.095v-195.765h-201.143v195.765h-134.095l234.667 228.392 234.667-228.392zM298.667 702.745v65.255h469.333v-65.255h-469.333z\",\n  maximize:\n    \"M324.267 597.333h-68.267v170.667h170.667v-68.267h-102.4v-102.4zM256 426.667h68.267v-102.4h102.4v-68.267h-170.667v170.667zM699.733 699.733h-102.4v68.267h170.667v-170.667h-68.267v102.4zM597.333 256v68.267h102.4v102.4h68.267v-170.667h-170.667z\",\n  collapseSideBar: [\n    {\n      path:\n        \"M85.333 128v768h426.667v-768h-426.667zM42.667 85.333h512v853.333h-512v-853.333z\",\n      color: \"#444444\"\n    },\n    {\n      path: \"M682.667 320v-42.667h554.667v42.667z\",\n      color: \"#444444\"\n    },\n    {\n      path: \"M682.667 533.333v-42.667h426.667v42.667z\",\n      color: \"#444444\"\n    },\n    {\n      path: \"M682.667 746.667v-42.667h298.667v42.667z\",\n      color: \"#444444\"\n    }\n  ],\n  search:\n    \"M1012.646 966.726l-263.953-259.735c69.121-75.098 111.591-174.416 111.591-283.705-0.033-233.789-192.599-423.286-430.159-423.286s-430.125 189.497-430.125 423.286c0 233.789 192.565 423.286 430.125 423.286 102.642 0 196.783-35.503 270.73-94.525l264.977 260.759c12.911 12.719 33.872 12.719 46.783 0 12.941-12.717 12.941-33.361 0.030-46.080zM430.125 781.447c-201.001 0-363.944-160.354-363.944-358.161s162.943-358.161 363.944-358.161c201.003 0 363.944 160.354 363.944 358.161s-162.941 358.161-363.944 358.161z\",\n  windows: [\n    {\n      path: \"M213.551 492.089l-0.218-194.179 238.934-32.445v226.625z\"\n    },\n    {\n      path: \"M492.090 259.678l318.499-46.344v278.756h-318.499z\"\n    },\n    {\n      path: \"M810.667 531.911l-0.077 278.756-318.499-44.81v-233.946z\"\n    },\n    {\n      path: \"M452.268 760.787l-238.74-32.725-0.012-196.151h238.753z\"\n    }\n  ],\n  linux: [\n    {\n      path:\n        \"M750.933 691.2c-17.067-8.533-25.6-17.067-25.6-29.867 0-17.067-8.533-29.867-12.8-34.133 4.267-8.533 8.533-46.933 0-76.8-12.8-34.133-46.933-85.333-81.067-132.267-12.8-21.333-17.067-42.667-17.067-68.267s0-51.2-17.067-85.333c-12.8-29.867-42.667-51.2-76.8-51.2-21.333 0-46.933 8.533-64 17.067-34.133 25.6-29.867 81.067-29.867 115.2 0 4.267 0 8.533 0 12.8 0 34.133 0 51.2-4.267 59.733 0 4.267-8.533 12.8-17.067 25.6-4.267 12.8-12.8 25.6-21.333 38.4s-17.067 38.4-25.6 59.733c-4.267 12.8-12.8 25.6-17.067 34.133-8.533 17.067-8.533 34.133-4.267 38.4-4.267 4.267-8.533 8.533-12.8 17.067-4.267 12.8-17.067 17.067-38.4 21.333-8.533 0-17.067 8.533-21.333 12.8-4.267 8.533-4.267 21.333 0 29.867 4.267 12.8 0 21.333-4.267 34.133 0 4.267-4.267 8.533-4.267 8.533 0 4.267 0 12.8 0 17.067 8.533 12.8 34.133 17.067 59.733 21.333 17.067 0 29.867 8.533 46.933 12.8s34.133 12.8 46.933 12.8c4.267 0 4.267 0 8.533 0 21.333 0 34.133-12.8 34.133-21.333 8.533 0 34.133-8.533 64-8.533s55.467 4.267 64 8.533c4.267 4.267 8.533 17.067 21.333 21.333 4.267 4.267 12.8 4.267 21.333 4.267 0 0 0 0 0 0 8.533 0 25.6 0 38.4-17.067 12.8-12.8 46.933-29.867 68.267-42.667 4.267-4.267 8.533-4.267 12.8-8.533 12.8-8.533 21.333-17.067 21.333-29.867 4.267-4.267-4.267-12.8-12.8-17.067zM456.533 691.2c0-12.8-17.067-21.333-34.133-38.4-12.8-12.8-29.867-21.333-34.133-34.133-8.533-21.333 0-59.733 12.8-81.067 4.267-8.533 12.8-25.6 17.067-38.4 4.267-17.067 12.8-29.867 17.067-38.4 8.533-12.8 17.067-34.133 21.333-51.2 8.533 8.533 21.333 21.333 38.4 21.333 0 0 4.267 0 4.267 0 8.533-4.267 21.333-8.533 34.133-17.067 12.8-4.267 25.6-12.8 29.867-12.8 8.533 12.8 59.733 123.733 64 162.133 4.267 29.867 0 51.2-4.267 59.733 0 0-4.267 0-4.267 0-12.8 0-17.067 8.533-17.067 12.8-4.267 12.8-4.267 51.2-4.267 59.733-4.267 8.533-29.867 38.4-68.267 42.667-17.067 4.267-29.867 4.267-42.667 4.267s-17.067 0-21.333 0l-17.067-21.333c4.267-8.533 8.533-17.067 8.533-29.867zM482.133 337.067c-4.267 4.267-4.267 4.267 0 0-4.267 0-4.267 0 0 0-4.267-12.8-12.8-21.333-21.333-21.333 0 0 0 0 0 0-4.267 0-8.533 4.267-12.8 8.533 0-12.8 8.533-21.333 17.067-21.333s17.067 12.8 17.067 29.867c0 4.267 0 4.267 0 4.267zM554.667 349.867c0-4.267 0-4.267 0-8.533 0-12.8-8.533-25.6-21.333-25.6s-21.333 12.8-21.333 25.6c0 0 0 0 0 4.267 0 0 0 0 0 0 0-4.267 0-8.533 0-12.8 0-21.333 12.8-34.133 25.6-34.133s21.333 12.8 21.333 29.867c0 8.533 0 12.8-4.267 21.333zM546.133 379.733c0 0 0 0-4.267 4.267-4.267 0-4.267 4.267-8.533 4.267h-4.267c-8.533 4.267-29.867 17.067-38.4 21.333-4.267 0-8.533 0-12.8-4.267 0 0-4.267 0-4.267-4.267-8.533-8.533-17.067-12.8-17.067-17.067 4.267 0 12.8-8.533 17.067-12.8 8.533-8.533 17.067-12.8 21.333-12.8 0 0 0 0 0 0 4.267 0 17.067 4.267 25.6 8.533 4.267 0 8.533 4.267 8.533 4.267 12.8 4.267 12.8 8.533 17.067 8.533zM614.4 746.667c4.267-21.333 8.533-46.933 8.533-64 0-4.267 0-8.533 0-12.8 0-8.533 0-17.067 0-21.333 0 0 0 0 0 0 0 8.533 0 25.6 17.067 34.133 4.267 0 8.533 4.267 12.8 4.267 12.8 0 29.867-8.533 38.4-12.8 4.267-4.267 8.533-8.533 8.533-12.8 0 0 0 4.267 0 4.267 0 12.8 4.267 29.867 17.067 38.4v0c4.267 4.267 17.067 8.533 17.067 12.8 0 0 0 0 0 0-4.267 4.267-12.8 8.533-21.333 12.8-17.067 8.533-38.4 21.333-46.933 29.867-12.8 12.8-25.6 21.333-34.133 21.333 0 0 0 0-4.267 0-8.533-4.267-17.067-17.067-12.8-34.133zM290.133 695.467c0-4.267 0-8.533 0-12.8s12.8-4.267 17.067-8.533c8.533 0 17.067-4.267 21.333-8.533 8.533-4.267 12.8-12.8 12.8-17.067 4.267-4.267 8.533-8.533 8.533-8.533s0 0 0 0c4.267 0 17.067 12.8 25.6 21.333 0 4.267 4.267 8.533 8.533 12.8 12.8 17.067 25.6 42.667 34.133 51.2s17.067 21.333 17.067 34.133c0 8.533-12.8 17.067-17.067 17.067 0 0 0 0-4.267 0-12.8 0-42.667-12.8-59.733-17.067h-4.267c-8.533-4.267-21.333-4.267-38.4-8.533-12.8 0-25.6-4.267-29.867-8.533 0-4.267 0-8.533 4.267-17.067 0-4.267 4.267-8.533 4.267-12.8 4.267-8.533 4.267-12.8 0-17.067z\"\n    }\n  ],\n  mac:\n    \"M756.051 649.487c-8.974 28.359-23.333 58.513-44.154 89.744-30.872 47.026-61.744 70.359-92.256 70.359-12.205 0-28.718-3.949-50.256-11.487-21.179-7.897-39.487-11.487-54.205-11.487-14.359 0-31.59 3.949-50.974 11.846-19.744 8.256-35.538 12.205-47.385 12.205-36.974 0-72.513-31.231-108.051-92.974-34.821-61.744-52.769-121.692-52.769-180.564 0-54.923 13.641-99.436 40.564-134.256 26.923-34.462 60.667-51.692 101.949-51.692 17.59 0 38.41 3.59 63.538 10.769 24.769 7.179 41.282 10.769 49.538 10.769 10.41 0 27.641-3.949 51.333-12.205 23.692-7.897 44.513-12.205 62.103-12.205 28.718 0 54.205 7.897 76.462 23.333 12.564 8.615 25.128 20.821 37.333 35.897-18.667 15.795-32.308 29.795-40.923 42.359-15.436 22.256-23.333 47.026-23.333 74.308 0 29.436 8.256 56.359 24.769 80.051s35.538 38.769 56.718 45.231zM621.077 228.41c0 14.718-3.59 31.231-10.41 48.821-7.179 17.949-18.308 34.462-33.385 49.538-12.923 12.923-25.846 21.538-38.769 25.846-8.256 2.513-20.462 4.667-37.333 6.103 0.718-35.538 10.051-66.41 28-92.256s48.103-43.436 89.744-53.128c0.718 3.231 1.436 5.744 1.795 7.897 0 2.513 0.359 4.667 0.359 7.179z\",\n  settings:\n    \"M959.615 604.874c20.039 15.821 25.275 43.846 12.69 66.901l-94.47 163.415c-12.546 23.001-40.007 32.786-64.49 23.204l-103.48-41.558c-19.077 13.322-38.371 24.633-58.171 33.898l-15.702 109.474c-3.224 25.792-25.432 44.827-51.454 44.827h-189.63c-26.022 0-48.23-19.036-51.386-44.318l-15.767-109.952c-20.282-9.416-39.691-20.711-58.324-33.872l-104.21 41.837c-23.693 8.616-51.182-0.756-63.266-22.927l-95.16-164.644c-12.24-22.441-7.005-50.466 13.138-66.368l87.529-68.447c-1.148-11.994-1.74-23.014-1.74-33.828s0.592-21.834 1.74-33.828l-87.633-68.528c-20.263-15.997-25.908-44.535-12.69-66.901l94.47-163.415c12.546-23.001 40.007-32.786 64.49-23.204l103.48 41.558c19.077-13.322 38.371-24.633 58.171-33.898l15.702-109.474c3.224-25.792 25.432-44.827 51.454-44.827h189.63c26.022 0 48.23 19.036 51.386 44.318l15.767 109.952c20.282 9.416 39.691 20.711 58.324 33.872l104.21-41.837c23.693-8.616 51.182 0.756 63.266 22.927l95.16 164.644c12.24 22.441 7.005 50.466-13.138 66.368l-87.52 68.44c1.156 11.969 1.731 22.774 1.731 33.835s-0.576 21.866-1.731 33.835l87.623 68.521zM920.991 646.888l-109.256-85.437 2-16.001c2.094-16.75 3.099-29.816 3.099-42.931s-1.005-26.181-3.099-42.931l-2-16.001 109.25-85.432-90.739-156.995-128.815 51.733-12.873-9.902c-23.182-17.832-47.577-32.035-73.562-42.685l-15.059-6.172-2.31-16.11-17.366-121.134h-181.070l-19.68 137.244-15.059 6.172c-25.006 10.248-49.36 24.536-73.839 42.895l-12.809 9.607-128.594-51.645-90.748 156.992 109.25 85.433-2 16.001c-2.055 16.436-3.099 30.117-3.099 42.931s1.044 26.495 3.099 42.931l2 16.001-109.25 85.432 90.739 156.995 128.815-51.733 12.873 9.902c23.182 17.832 47.577 32.035 73.562 42.685l15.059 6.172 2.31 16.11 17.366 121.134h181.070l19.68-137.244 15.059-6.172c25.006-10.248 49.36-24.536 73.839-42.895l12.809-9.607 128.594 51.645 90.754-156.987zM489.723 696.889c-107.206 0-194.37-87.165-194.37-194.37s87.165-194.37 194.37-194.37c107.206 0 194.37 87.165 194.37 194.37s-87.165 194.37-194.37 194.37zM489.723 640c75.787 0 137.481-61.695 137.481-137.481s-61.695-137.481-137.481-137.481c-75.787 0-137.481 61.695-137.481 137.481s61.695 137.481 137.481 137.481z\",\n  dragdrop: [\n    {\n      path:\n        \"M118.154 236.308c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154zM118.154 393.846c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154zM118.154 787.692c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154z\"\n    },\n    {\n      path:\n        \"M512 236.308c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154zM512 393.846c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154zM512 787.692c-64.985 0-118.154 53.169-118.154 118.154s53.169 118.154 118.154 118.154c64.985 0 118.154-53.169 118.154-118.154s-53.169-118.154-118.154-118.154z\"\n    }\n  ],\n  close:\n    \"M1024 103.131l-103.131-103.131-408.869 408.869-408.869-408.869-103.131 103.131 408.869 408.869-408.869 408.869 103.131 103.131 408.869-408.869 408.869 408.869 103.131-103.131-408.869-408.869z\",\n  connector: [\n    {\n      path:\n        \"M512 987.429c262.572 0 475.429-212.857 475.429-475.429s-212.857-475.429-475.429-475.429c-262.572 0-475.429 212.857-475.429 475.429s212.857 475.429 475.429 475.429zM512 1024c-282.77 0-512-229.23-512-512s229.23-512 512-512c282.77 0 512 229.23 512 512s-229.23 512-512 512zM634.295 404.334h-98.304v46.811h98.304c13.263 0 25.746 3.413 37.449 10.24s20.968 16.091 27.794 27.794c6.827 11.703 10.24 24.186 10.24 37.449s-3.413 25.746-10.24 37.449c-6.827 11.703-16.091 20.968-27.794 27.794s-24.186 10.24-37.449 10.24h-98.304v46.811h98.304c21.845 0 42.13-5.461 60.855-16.384s33.451-25.746 44.178-44.471c10.728-18.725 16.091-39.204 16.091-61.44s-5.364-42.715-16.091-61.44c-10.728-18.725-25.454-33.548-44.178-44.471s-39.009-16.384-60.855-16.384zM414.866 550.619h194.267v-47.982h-194.267v47.982zM314.222 526.629c0-13.263 3.413-25.746 10.24-37.449s16.091-20.968 27.794-27.794c11.703-6.827 24.186-10.24 37.449-10.24h98.304v-46.811h-98.304c-21.845 0-42.13 5.461-60.855 16.384s-33.451 25.746-44.178 44.471c-10.728 18.725-16.091 39.204-16.091 61.44s5.364 42.715 16.091 61.44c10.728 18.725 25.454 33.548 44.178 44.471s39.009 16.384 60.855 16.384h98.304v-46.811h-98.304c-13.263 0-25.746-3.413-37.449-10.24s-20.968-16.091-27.794-27.794c-6.827-11.703-10.24-24.186-10.24-37.449z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  complete:\n    \"M384 691.2l-179.2-179.2-59.733 59.733 238.933 238.933 512-512-59.733-59.733z\",\n  listView:\n    \"M333.653 263.68h498.347v69.973h-498.347v-69.973zM333.653 546.987v-69.973h498.347v69.973h-498.347zM333.653 760.32v-69.973h498.347v69.973h-498.347zM226.987 671.573c14.791 0 27.449 5.404 37.973 16.213s15.787 23.324 15.787 37.547c0 14.222-5.404 26.596-16.213 37.12s-23.324 15.787-37.547 15.787c-14.222 0-26.596-5.262-37.12-15.787s-15.787-22.898-15.787-37.12c0-14.222 5.12-26.738 15.36-37.547s22.755-16.213 37.547-16.213zM226.987 244.907c14.791 0 27.449 5.262 37.973 15.787s15.787 23.182 15.787 37.973c0 14.791-5.262 27.307-15.787 37.547s-23.182 15.36-37.973 15.36c-14.791 0-27.307-5.12-37.547-15.36s-15.36-22.755-15.36-37.547c0-14.791 5.12-27.449 15.36-37.973s22.755-15.787 37.547-15.787zM226.987 458.24c14.791 0 27.449 5.262 37.973 15.787s15.787 23.182 15.787 37.973c0 14.791-5.262 27.307-15.787 37.547s-23.182 15.36-37.973 15.36c-14.791 0-27.307-5.12-37.547-15.36s-15.36-22.755-15.36-37.547c0-14.791 5.12-27.449 15.36-37.973s22.755-15.787 37.547-15.787z\",\n  cloud:\n    \"M710.656 697.344c15.019 0 29.127-3.868 42.325-11.605s23.666-18.204 31.403-31.403c7.737-13.198 11.605-27.307 11.605-42.325s-3.868-29.127-11.605-42.325c-7.737-13.198-18.204-23.666-31.403-31.403s-27.307-11.605-42.325-11.605h-42.325v-15.019c0-28.217-6.94-54.272-20.821-78.165s-32.882-42.78-57.003-56.661c-24.121-13.881-50.29-20.821-78.507-20.821-23.666 0-45.739 4.892-66.219 14.677s-38.115 23.211-52.907 40.277c-14.791 17.067-25.372 36.523-31.744 58.368h-19.797c-20.48 0-39.367 5.12-56.661 15.36s-31.061 24.235-41.301 41.984c-10.24 17.749-15.36 36.864-15.36 57.344s5.12 39.367 15.36 56.661c10.24 17.294 24.007 31.061 41.301 41.301s36.181 15.36 56.661 15.36h369.323zM721.579 470.699c24.121 1.82 46.194 9.216 66.219 22.187s35.954 29.923 47.787 50.859c11.833 20.935 17.749 43.691 17.749 68.267 0 25.941-6.371 49.835-19.115 71.68s-30.037 39.139-51.883 51.883c-21.845 12.743-45.739 19.115-71.68 19.115h-369.323c-30.948 0-59.506-7.623-85.675-22.869s-46.876-35.954-62.123-62.123c-15.246-26.169-22.869-54.727-22.869-85.675 0-28.672 6.713-55.41 20.139-80.213s31.744-45.056 54.955-60.757c23.211-15.701 48.924-25.145 77.141-28.331 18.205-35.044 43.918-63.033 77.141-83.968 34.134-21.39 71.452-32.085 111.957-32.085 34.134 0 65.991 7.509 95.573 22.528 29.127 14.564 53.703 34.93 73.728 61.099s33.451 55.637 40.277 88.405z\",\n  infoToaster:\n    \"M512 36.571c262.437 0 475.429 212.992 475.429 475.429s-212.992 475.429-475.429 475.429c-262.437 0-475.429-212.992-475.429-475.429s212.992-475.429 475.429-475.429zM464.457 274.286v95.086h95.086v-95.086h-95.086zM559.543 749.714v-285.257h-95.086v285.257h95.086z\",\n  warningToaster: [\n    {\n      path:\n        \"M512 36.571c-262.437 0-475.429 212.992-475.429 475.429s212.992 475.429 475.429 475.429c262.437 0 475.429-212.992 475.429-475.429s-212.992-475.429-475.429-475.429zM559.543 749.714h-95.086v-95.086h95.086v95.086zM574.171 559.543h-109.714v-285.257h109.714v285.257z\",\n      color: \"#eaa433\"\n    }\n  ],\n  successToaster: [\n    {\n      path:\n        \"M416 750.857l428.571-428.571-67.429-69.714-361.143 362.286-169.143-170.286-67.429 67.429 236.571 238.857zM512 36.571c86.858 0 167.238 21.714 241.143 65.143 71.619 41.143 128 97.523 169.143 169.143 43.429 73.905 65.143 154.285 65.143 241.143s-21.714 167.238-65.143 241.143c-41.143 71.619-97.523 128-169.143 169.143-73.905 43.429-154.285 65.143-241.143 65.143s-167.238-21.714-241.143-65.143c-71.619-41.905-128-98.666-169.143-170.286-43.429-73.905-65.143-153.904-65.143-240s21.714-166.095 65.143-240c41.905-71.619 98.666-128.381 170.286-170.286 73.905-43.429 153.904-65.143 240-65.143z\",\n      color: \"#4cbfa5\"\n    }\n  ],\n  errorToaster: [\n    {\n      path:\n        \"M449.908 500.893l-175.622 183.828 62.092 64.993 175.622-183.828 175.622 183.828 62.092-64.993-175.622-183.828 154.401-161.615-62.092-64.993-154.401 161.615-154.401-161.615-62.092 64.993 154.401 161.615zM512 36.571c262.437 0 475.429 212.992 475.429 475.429s-212.992 475.429-475.429 475.429c-262.437 0-475.429-212.992-475.429-475.429s212.992-475.429 475.429-475.429z\",\n      color: \"#f76c83\"\n    }\n  ],\n  delete: [\n    {\n      path:\n        \"M341.333 307.2v-136.533h341.333v136.533h170.667v34.133h-682.667v-34.133h170.667zM375.467 307.2h274.033v-102.4h-274.033v102.4zM715.884 341.333l34.133 0.013-1.592 512h-475.358v-512h33.166l0.051 477.854h409.6v-477.867zM392.533 426.667h34.133v307.2h-34.133v-307.2zM494.933 426.667h34.133v307.2h-34.133v-307.2zM597.333 426.667h34.133v307.2h-34.133v-307.2z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  switchview: [\n    {\n      path:\n        \"M46.545 46.545v698.182h1024v-698.182h-1024zM744.727 1024h-418.909v-139.636h46.545v93.091h372.364v-93.091h46.545v139.636h-46.545zM0 0h1117.091v791.273h-1117.091v-791.273zM325.818 325.818l-139.636 162.909 139.636 162.909v-325.818zM325.818 465.455v46.545h279.273v-46.545h-279.273zM791.273 139.636v325.818l139.636-162.909-139.636-162.909zM791.273 279.273h-279.273v46.545h279.273v-46.545z\",\n      color: \"rgb(151, 151, 151)\"\n    }\n  ],\n  clock: [\n    {\n      path:\n        \"M512 754.688c36.409 0 69.859-9.102 100.352-27.307 30.037-17.749 53.931-41.87 71.68-72.363s26.624-63.943 26.624-100.352c0-36.409-8.875-69.859-26.624-100.352-17.749-30.037-41.643-53.931-71.68-71.68-30.493-17.749-63.943-26.624-100.352-26.624s-69.859 8.875-100.352 26.624c-30.037 17.749-53.931 41.643-71.68 71.68-17.749 30.493-26.624 63.943-26.624 100.352s8.875 69.859 26.624 100.352c17.749 30.493 41.643 54.613 71.68 72.363 30.493 18.205 63.943 27.307 100.352 27.307zM712.021 396.288c17.749 22.301 31.403 46.649 40.96 73.045 10.012 27.307 15.019 55.751 15.019 85.333 0 46.422-11.605 89.429-34.816 129.024-22.756 38.685-53.475 69.404-92.16 92.16-39.595 23.211-82.602 34.816-129.024 34.816s-89.429-11.605-129.024-34.816c-38.685-22.756-69.404-53.475-92.16-92.16-23.211-39.595-34.816-82.602-34.816-129.024s11.605-89.429 34.816-129.024c22.756-38.685 53.475-69.404 92.16-92.16 39.595-23.211 82.602-34.816 129.024-34.816 29.127 0 57.799 5.234 86.016 15.701 26.397 10.012 50.972 23.893 73.728 41.643l40.277-41.643c12.743 10.468 26.169 23.893 40.277 40.277l-40.277 41.643zM484.011 584.021v-170.667h55.979v170.667h-55.979zM597.333 213.333v57.344h-170.667v-57.344h170.667z\",\n      color: \"#444444\"\n    }\n  ],\n  calendar: [\n    {\n      path:\n        \"M160 192h64v64h-64zM256 192h64v64h-64zM352 192h64v64h-64zM64 384h64v64h-64zM160 384h64v64h-64zM256 384h64v64h-64zM160 288h64v64h-64zM256 288h64v64h-64zM352 288h64v64h-64zM64 288h64v64h-64zM416 0v32h-64v-32h-224v32h-64v-32h-64v512h480v-512h-64zM448 480h-416v-352h416v352z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  chevron:\n    \"M0 905.216l393.216-393.216-393.216-391.168 120.832-120.832 512 512-512 512z\",\n  alert:\n    \"M716.902 112.318l442.494 716.419c37.148 60.145 18.506 139.017-41.639 176.165-20.214 12.485-43.504 19.098-67.263 19.098h-884.988c-70.692 0-128-57.308-128-128 0-23.759 6.613-47.049 19.098-67.263l442.494-716.419c37.148-60.145 116.020-78.787 176.165-41.639 16.927 10.455 31.184 24.712 41.639 41.639zM580.736 752.512c-8.448 8.448-12.672 19.584-12.672 33.408s4.224 24.96 12.672 33.408c8.448 8.448 19.584 12.672 33.408 12.672s24.96-4.224 33.408-12.672c8.448-8.448 12.672-19.584 12.672-33.408s-4.224-24.96-12.672-33.408c-8.448-8.448-19.584-12.672-33.408-12.672s-24.96 4.224-33.408 12.672zM644.864 282.112h-61.44v384h61.44v-384z\",\n  internet:\n    \"M851.804 831.111c-32.195-28.631-67.502-52.879-105.103-72.294 19.62-67.912 30.925-144.425 32.809-223.805h198.533c-5.857 114.278-52.675 217.743-126.239 296.1zM638.239 960.668c24.863-24.658 47.432-57.016 67.297-96.338 9.789-19.21 18.596-39.895 26.542-61.44 30.72 16.507 59.761 36.577 86.508 59.965-51.405 45.138-112.845 79.012-180.347 97.812zM535.224 970.908v-222.126c53.903 2.703 106.332 14.418 155.238 34.693-7.7 21.504-16.302 41.779-25.887 60.785-36.372 71.926-81.51 115.999-129.352 126.648zM319.939 739.566c-17.326-62.259-27.361-131.85-29.041-204.554h198.328v167.772c-58.737 2.54-115.794 15.073-169.288 36.782zM489.226 970.908c-47.882-10.65-93.020-54.723-129.352-126.648-9.626-19.005-18.186-39.281-25.928-60.785 48.906-20.275 101.376-32.195 155.279-34.693v222.126zM205.824 863.101c26.788-23.429 55.828-43.5 86.548-60.006 7.946 21.545 16.712 42.23 26.542 61.44 19.866 39.281 42.394 71.475 67.297 96.338-67.502-19.005-128.942-52.879-180.388-97.772zM46.612 535.011h198.533c1.884 79.585 13.148 155.894 32.809 223.805-37.642 19.415-72.95 43.459-105.144 72.294-73.728-78.356-120.586-181.821-126.198-296.1zM171.991 193.733c32.399 28.836 67.707 53.084 105.513 72.704-19.415 67.707-30.72 143.565-32.358 222.577h-198.533c5.612-113.91 52.224-217.129 125.379-295.281zM386.212 63.316c-24.904 24.658-47.432 57.057-67.297 96.133-9.83 19.661-18.801 40.55-26.952 62.71-30.925-16.712-60.006-36.782-86.958-60.416 51.61-45.343 113.295-79.421 181.207-98.427zM489.226 53.076v223.601c-54.108-2.703-106.783-14.623-155.689-34.898 7.741-21.914 16.507-42.639 26.337-62.054 36.332-71.885 81.469-115.999 129.352-126.648zM489.021 489.013h-198.328c1.679-72.294 11.51-141.476 28.631-203.325 53.494 21.709 110.756 34.284 169.492 36.782v166.543h0.205zM704.471 285.893c17.121 61.85 26.952 131.031 28.631 203.325h-198.124v-166.339c58.941-2.744 115.999-15.483 169.492-36.987zM534.979 53.076c47.882 10.65 93.020 54.764 129.352 126.648 9.83 19.415 18.596 40.141 26.337 62.054-49.111 20.275-101.54 32.195-155.689 34.898v-223.601zM819.2 161.743c-26.747 23.634-55.992 43.704-86.917 60.416-7.946-22.159-16.957-43.049-26.993-62.71-19.825-39.281-42.394-71.475-67.256-96.133 67.912 19.005 129.556 53.084 181.166 98.427zM534.979 535.011h198.328c-1.679 72.704-11.715 142.295-29.041 204.554-53.494-21.504-110.551-34.038-169.288-36.782v-167.772zM977.592 489.013h-198.492c-1.884-79.012-12.984-155.075-32.399-222.577 37.806-19.415 73.114-43.868 105.513-72.704 73.155 78.152 119.767 181.371 125.379 295.281zM873.964 150.069c-96.543-96.788-225.28-150.077-361.964-150.077s-265.38 53.289-361.964 150.077c-96.543 96.748-150.036 225.28-150.036 361.923 0 136.684 53.289 265.421 150.036 361.964s225.28 150.036 361.964 150.036c136.684 0 265.421-53.289 361.964-150.036s150.036-225.28 150.036-361.964c0-136.643-53.289-265.421-150.036-361.923z\",\n  vpnuser: [\n    {\n      path:\n        \"M309.044 593.254v296.075h488.594v-296.075h-488.594zM797.639 949.114h121.417v41.587h-731.429v-41.587h121.417c-16.579 0-30.72-5.931-42.423-17.793s-17.554-25.859-17.554-41.991v-296.075c0-16.132 5.851-30.129 17.554-41.991s25.844-17.793 42.423-17.793h488.594c16.579 0 30.72 5.931 42.423 17.793s17.554 25.859 17.554 41.991v296.075c0 16.132-5.851 30.129-17.554 41.991s-25.844 17.793-42.423 17.793z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M223.625 300.853c-15.973-5.823-30.416-14.671-42.355-26.22-22.511-21.763-36.662-52.147-36.662-85.849 0-66.005 53.709-119.682 119.682-119.682s119.682 53.676 119.682 119.682c0 33.702-14.151 64.086-36.662 85.849-11.939 11.549-26.383 20.397-42.355 26.22-12.752 4.619-26.318 7.58-40.664 7.58s-27.912-2.96-40.664-7.58zM416.501 188.784c0-83.93-68.283-152.213-152.213-152.213s-152.213 68.283-152.213 152.213c0 37.541 14.184 71.503 36.793 98.048-66.298 31.913-112.297 99.545-112.297 177.945v109.076h32.531v-109.076c0-70.039 44.014-129.604 105.693-153.514 25.179 18.445 55.953 29.701 89.493 29.701s64.314-11.256 89.493-29.701c61.679 23.91 105.693 83.475 105.693 153.514h32.531c0-78.4-45.999-146.032-112.297-177.945 22.609-26.545 36.793-60.508 36.793-98.048z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  routerArrow: [\n    {\n      path:\n        \"M848.458 341.74l28.417 29.077-112.457 115.278h245.269v41.244h-245.269l112.658 115.072-28.618 29.284-161.228-164.978z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M164.978 671.696l-28.417-29.077 112.457-115.278h-245.269v-41.244h245.269l-112.658-115.072 28.618-29.284 161.228 164.978z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M341.74 840.691l29.077-28.417 115.278 112.457v-245.269h41.244v245.269l115.072-112.658 29.284 28.618-164.978 161.228z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M671.696 172.745l-29.077 28.417-115.278-112.457v245.269h-41.244v-245.269l-115.072 112.658-29.284-28.618 164.978-161.228z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  collapse: [\n    {\n      path:\n        \"M288.712 838.661c39.539 0 94.324 0 94.324 0v-197.695h-197.695v79.078h118.617v118.617c0 0-54.785 0-15.245 0zM383.034 245.575h-79.078v118.617h-118.617v79.078h197.695v-197.695zM778.425 720.043v-79.078h-197.695v197.695h79.078v-118.617h118.617zM778.425 443.27v-79.078h-118.617v-118.617h-79.078v197.695h197.695z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  networkLines:\n    \"M5509.12 849.92l143.36 143.36 491.52-491.52-491.52-491.52-143.36 143.36 235.52 235.52h-5744.64v204.8h5744.64l-235.52 256z\",\n  folder:\n    \"M806.4 695.467v-341.333h-584.533v341.333h584.533zM785.067 302.933c17.067 0 34.133 8.533 46.933 21.333s21.333 29.867 21.333 46.933v298.667c0 17.067-8.533 34.133-21.333 46.933s-29.867 21.333-46.933 21.333h-546.133c-17.067 0-34.133-8.533-46.933-21.333s-21.333-25.6-21.333-42.667v-349.867c0-17.067 8.533-34.133 21.333-46.933s25.6-21.333 46.933-21.333h204.8l68.267 46.933h273.067z\",\n  save: [\n    {\n      path:\n        \"M85.333 85.333v766.661l128.272 86.672h725.061v-853.333h-853.333zM896.113 896.104h-640.192l-127.977-83.971v-683.556h768.17v767.527z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M725.665 469.807h-428.065v-342.565h-40.796v384.758h510.844v-390.176l-40.715-5.127z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path:\n        \"M299.733 897.834v-215.104h424.533v227.384l-41.316-2.537v-182.243h-341.469v170.706z\",\n      color: \"#8f8f8f\"\n    },\n    {\n      path: \"M426.667 810.667h42.667v85.333h-42.667v-85.333z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  file: [\n    {\n      path:\n        \"M768 853.333h-512v-682.667h324.267l187.733 192v490.667zM298.667 810.667h426.667v-430.933l-162.133-166.4h-264.533v597.333z\",\n      color: \"rgb(151, 151, 151)\"\n    },\n    {\n      path: \"M554.667 213.333h42.667v174.933h-42.667z\",\n      color: \"rgb(151, 151, 151)\"\n    },\n    {\n      path: \"M554.667 426.667v-42.667h213.333v42.667z\",\n      color: \"rgb(151, 151, 151)\"\n    }\n  ],\n  call: [\n    {\n      path:\n        \"M612.963 583.56c27.799-17.943 59.202-12.406 79.316 13.957 29.321 38.733 42.318 55.949 58.487 77.542 20.638 27.591 15.077 58.317-13.886 77.4-4.394 2.885-8.136 5.268-15.764 10.073-15.583 9.816-22.293 14.21-29.975 19.835-23.611 17.338-50.584 21.353-81.726 14.165-35.87-8.229-68.967-24.399-105.94-49.693-69.936-47.894-127.048-107.423-171.402-178.344-34.759-55.508-58.2-110.366-69.884-166.813-7.314-34.651-8.319-62.625-1.154-89.987 5.491-20.778 17.358-37.033 35.773-48.304 8.299-5.103 15.239-9.585 29.334-18.848 1.050-0.69 1.050-0.69 2.101-1.381 8.835-5.806 13.673-8.96 19.125-12.439 27.732-17.773 59.078-12.289 79.27 13.825 5.572 7.243 9.951 13.059 19.739 26.155 4.868 6.512 7.032 9.402 9.783 13.057 3.929 5.277 7.083 9.478 14.19 18.918 7.134 9.476 10.306 13.701 14.254 19.003 21.127 28.24 15.827 58.565-13.655 77.857-2.482 1.629-6.167 4.049-12.41 8.15-15.518 10.187-25.579 16.706-35.685 23.056 5.148 19.132 13.907 38.235 26.646 59.355 26.236 43.425 55.376 79.108 89.758 108.385 3.65 3.076 6.952 5.477 14.527 10.711 4.605 3.182 7.051 4.9 9.519 6.725 13.53-9.030 24.875-16.401 49.658-32.362zM626.835 605.075c-25.311 16.301-36.513 23.583-50.329 32.814-9.117 6.127-18.558 6.222-27.177-0.457-2.584-1.946-4.898-3.582-9.689-6.893-8.653-5.98-12.396-8.702-16.928-12.52-36.672-31.226-67.54-69.024-95.128-114.689-14.461-23.975-24.408-45.982-30.148-68.605-2.567-10.084 0.582-18.413 9.702-24.34 10.774-6.745 20.981-13.35 37.353-24.097 6.234-4.094 9.927-6.52 12.562-8.249 16.988-11.116 19.344-24.596 7.037-41.046-3.929-5.277-7.083-9.478-14.19-18.918-7.134-9.476-10.306-13.701-14.231-18.972-2.734-3.632-4.91-6.537-9.795-13.073-9.718-13-14.049-18.754-19.506-25.847-12.072-15.613-28.638-18.511-45.206-7.893-5.349 3.413-10.114 6.519-18.859 12.266-1.050 0.69-1.050 0.69-2.1 1.38-14.304 9.4-21.399 13.983-30.007 19.276-12.739 7.797-20.581 18.539-24.402 32.996-5.99 22.873-5.119 47.090 1.455 78.236 11.035 53.311 33.29 105.394 66.527 158.47 42.49 67.94 97.137 124.9 164.161 170.799 34.537 23.627 64.876 38.45 97.221 45.87 24.33 5.615 43.696 2.732 60.849-9.863 8.336-6.103 15.384-10.718 30.684-20.357 8.278-5.214 11.924-7.536 16.124-10.294 16.697-11.001 19.221-24.946 7.458-40.672-16.126-21.537-29.105-38.727-58.359-77.372-12.020-15.74-28.512-18.642-45.076-7.951z\"\n    }\n  ],\n  knowledgeBase: [\n    {\n      path:\n        \"M865.28 474.453c-20.48-162.133-158.72-286.72-327.68-286.72-76.8 0-146.773 25.6-201.387 68.267h-302.080v266.24h75.093l49.493 68.267 47.787-68.267c6.827 174.080 151.893 314.027 331.093 314.027 90.453 0 174.080-35.84 233.813-95.573h39.253l54.613 71.68 44.373-71.68h75.093v-266.24h-119.467zM455.68 225.28c-11.947 11.947-22.187 25.6-32.427 42.667v-11.947h-40.96c22.187-13.653 47.787-23.893 73.387-30.72zM233.813 525.653h131.413c0 46.080 6.827 90.453 17.067 129.707h-110.933c-22.187-39.253-35.84-83.627-37.547-129.707zM286.72 680.96h102.4c15.36 49.493 39.253 90.453 66.56 117.76-69.973-18.773-128-61.44-168.96-117.76zM523.947 808.96c-42.667-8.533-81.92-58.027-105.813-128h105.813v128zM523.947 653.653h-114.347c-11.947-37.547-17.067-81.92-18.773-129.707h131.413v129.707zM523.947 498.347h-100.693v-129.707h100.693v129.707zM523.947 343.040h-100.693v-11.947c23.893-63.147 59.733-107.52 100.693-116.053v128zM837.973 474.453h-129.707c-1.707-37.547-6.827-71.68-15.36-104.107h110.933c17.067 30.72 29.013 66.56 34.133 104.107zM786.773 343.040h-102.4c-15.36-51.2-39.253-90.453-66.56-117.76 69.973 18.773 129.707 61.44 168.96 117.76zM549.547 215.040c42.667 8.533 81.92 58.027 105.813 128h-105.813v-128zM549.547 368.64h112.64c8.533 32.427 15.36 66.56 17.067 104.107h-85.333v23.893h-44.373v-128zM549.547 525.653h44.373v129.707h-44.373v-129.707zM549.547 808.96v-128h44.373v59.733h32.427c-20.48 37.547-46.080 61.44-76.8 68.267zM617.813 798.72c15.36-15.36 29.013-34.133 40.96-58.027h69.973c-30.72 27.307-68.267 47.787-110.933 58.027z\"\n    },\n    {\n      path:\n        \"M122.88 496.64h-63.147v-215.040h337.92v215.040h-203.093l-35.84 51.2z\",\n      color: \"#fff\"\n    },\n    {\n      path:\n        \"M894.293 715.093h64.853v-215.040h-337.92v215.040h201.387l39.253 52.907z\",\n      color: \"#fff\"\n    }\n  ],\n  email: [\n    {\n      path:\n        \"M204.8 332.8c-4.713 0-8.533 3.821-8.533 8.533v341.333c0 4.713 3.821 8.533 8.533 8.533h631.467c4.713 0 8.533-3.821 8.533-8.533v-341.333c0-4.713-3.821-8.533-8.533-8.533h-631.467zM204.8 307.2h631.467c18.851 0 34.133 15.282 34.133 34.133v341.333c0 18.851-15.282 34.133-34.133 34.133h-631.467c-18.851 0-34.133-15.282-34.133-34.133v-341.333c0-18.851 15.282-34.133 34.133-34.133z\"\n    },\n    {\n      path:\n        \"M518.521 522.743l323.842-209.228 13.892 21.503-337.734 218.203-337.734-218.203 13.892-21.503z\"\n    },\n    {\n      path: \"M204.502 711.19l-17.802-18.397 238.1-230.395 17.802 18.397z\"\n    },\n    {\n      path: \"M853.608 711.19l17.825-18.375-240.242-233.048-17.825 18.375z\"\n    }\n  ],\n  salesChat: [\n    {\n      path:\n        \"M858.174 715.424l-8.367 8.1 0.255 12.483c0.255 5.845 0.99 11.721 2.076 17.407 4.279 21.663 16.606 41.325 34.777 57.016-35.479-0.191-71.884-7.877-107.938-31.542l-8.75-5.781-11.113 1.842-1.501 0.318-1.597 0.476c-11.592 3.78-23.504 6.861-35.479 9.212-80.123 15.564-156.894-3.081-207.031-43.834-11.72 1.048-23.568 1.715-35.639 1.747 54.544 57.906 148.814 86.652 247.651 67.435 13.221-2.605 26.090-5.94 38.449-9.974 65.21 42.373 129.271 39.991 191.766 29.382-37.555-10.609-71.661-47.519-78.303-81.221-0.894-4.574-1.437-9.148-1.661-13.659 50.009-48.917 75.333-112.413 62.879-175.592-14.594-74.233-77.665-129.121-159.321-149.641 4.088 9.656 7.632 19.535 10.251 29.668 64.029 20.805 112.154 65.752 123.778 124.896 10.283 52.22-9.836 107.363-55.183 151.26z\"\n    },\n    {\n      path:\n        \"M727.317 406.065c1.524 5.779 2.497 11.716 3.502 17.654 1.783 10.706 3.048 21.538 3.048 32.655 0 122.818-113.488 224.919-263.518 247.025-7.685 1.137-15.467 2.053-23.346 2.779-11.868 1.042-23.93 1.705-37.419 1.8-7.36 0-14.429-0.947-21.66-1.295-9.436-0.505-19.034-0.6-29.345-1.326-69.13 65.751-148.863 77.878-228.661 79.71 43.028-20.401 77.009-73.773 77.009-115.807 0-5.716-0.454-11.306-1.881-17.685-73.021-46.108-119.713-116.439-119.713-195.201 0-138.956 145.167-251.573 324.25-251.573 134.207 0 249.413 63.256 298.7 153.483 3.21 5.937 5.966 12.095 8.625 18.285 4.15 9.601 7.75 19.391 10.408 29.497zM437.502 675.323c147.858-10.643 263.94-104.722 263.94-218.95 0-14.527-2.010-28.644-5.577-42.382-1.459-5.685-3.437-11.211-5.447-16.706-3.534-9.474-7.62-18.696-12.711-27.602-3.243-5.716-6.874-11.338-10.733-16.801-49.189-69.257-146.075-116.502-257.39-116.502-160.893 0-291.825 98.69-291.825 219.992 0 65.088 38.262 126.608 104.927 168.705l12.289 7.769 2.756 15.032c1.070 7.074 1.621 14.275 1.621 21.38 0 27.002-10.408 53.498-29.085 76.584 43.806-8.527 86.899-26.244 125.647-63.099l9.468-8.969 14.137-0.379h1.913l2.075 0.221c0.973 0.126 1.946 0.063 2.918 0.189 6.355 0.726 12.775 0.758 19.131 1.137 8.041 0.505 16.050 1.453 24.027 1.453 2.691 0 5.318-0.284 8.009-0.316 6.68-0.126 13.359-0.284 19.909-0.758z\"\n    }\n  ],\n  chat: [\n    {\n      path:\n        \"M211.914 445.748c-24.235 7.662-41.546 30.519-41.546 56.492 0 25.719 16.429 48.163 40.13 56.206-1.983-19.806-3.997-42.695-3.997-54.807 0-19.106 1.825-38.531 5.414-57.891zM829.247 445.78c3.62 19.361 5.445 38.785 5.445 57.859 0 17.898-1.7 36.369-5.004 55.030 24.204-7.757 41.011-30.201 41.011-56.429 0-25.941-17.279-48.767-41.451-56.461zM488.729 772.24c-8.215 0-14.919 6.708-14.919 14.973s6.704 14.973 14.919 14.973h84.917c8.246 0 14.95-6.708 14.95-14.973s-6.704-14.973-14.95-14.973h-84.917zM488.729 836.267c-26.879 0-48.722-21.999-48.722-49.053s21.843-49.053 48.722-49.053h84.917c19.231 0 36.636 11.731 44.379 29.248 109.624-40.406 182.833-145.634 182.833-263.769 0-155.394-125.708-281.826-280.277-281.826-154.538 0-280.277 126.432-280.277 281.826 0 16.976 4.312 56.715 8.341 85.454l1.039 7.534-29.743-1.049c-47.746-5.277-83.406-45.397-83.406-93.338 0-48.417 36.699-88.379 84.351-92.829 40.602-130.724 163.225-221.678 299.697-221.678 136.503 0 259.095 90.954 299.728 221.709 47.589 4.514 84.225 44.412 84.225 92.797 0 47.972-36.321 87.838-83.469 92.702-29.46 97.852-104.274 175.009-201.183 207.467-6.515 20.124-25.053 33.857-46.235 33.857h-84.917z\"\n    },\n    {\n      path:\n        \"M616.533 454.776c10.581 0 19.2-8.186 19.2-18.31v-39.677c0-10.124-8.619-18.31-19.2-18.31s-19.2 8.186-19.2 18.31v39.677c0 10.124 8.619 18.31 19.2 18.31z\"\n    },\n    {\n      path:\n        \"M443.733 436.466v-39.677c0-10.124-8.597-18.31-19.186-18.31-10.618 0-19.214 8.186-19.214 18.31v39.677c0 10.124 8.597 18.31 19.214 18.31 10.589 0 19.186-8.186 19.186-18.31z\"\n    }\n  ],\n  add: [\n    {\n      path:\n        \"M9.10714 4.10714H6.07143C5.97281 4.10714 5.89286 4.02719 5.89286 3.92857V0.892857C5.89286 0.39978 5.49308 0 5 0C4.50692 0 4.10714 0.39978 4.10714 0.892857V3.92857C4.10714 4.02719 4.02719 4.10714 3.92857 4.10714H0.892857C0.39978 4.10714 0 4.50692 0 5C0 5.49308 0.39978 5.89286 0.892857 5.89286H3.92857C4.02719 5.89286 4.10714 5.97281 4.10714 6.07143V9.10714C4.10714 9.60022 4.50692 10 5 10C5.49308 10 5.89286 9.60022 5.89286 9.10714V6.07143C5.89286 5.97281 5.97281 5.89286 6.07143 5.89286H9.10714C9.60022 5.89286 10 5.49308 10 5C10 4.50692 9.60022 4.10714 9.10714 4.10714Z\"\n    }\n  ],\n  rps: [\n    {\n      path:\n        \"M12.6551 11.4487C12.8357 11.4487 13.013 11.4954 13.1691 11.5828L12.5761 11.8404L12.4658 11.8883L12.5776 11.9327L14.3306 12.629L14.3803 12.6487L14.3967 12.5978L14.9386 10.9137L14.972 10.8098L14.8715 10.8524L14.2236 11.1267C14.0155 10.8916 13.4871 10.4159 12.6551 10.4159C11.5036 10.4159 10.567 11.3527 10.567 12.5041C10.567 13.1753 10.8805 13.7 11.3051 14.0557C11.7286 14.4106 12.2649 14.5995 12.7174 14.5995H12.7674V14.5495V13.6203V13.5703H12.7174C12.6019 13.5703 12.3195 13.5035 12.0664 13.3336C11.8154 13.1651 11.5996 12.8998 11.5996 12.5041C11.5996 11.922 12.0731 11.4487 12.6551 11.4487ZM17.3183 12.5688C17.3183 10.4166 15.6808 8.46509 13.5079 8.13804V6.30264C13.5079 6.16787 13.4789 6.03907 13.4211 5.91803C13.4789 5.7966 13.5079 5.66717 13.5079 5.53136V2.70052C13.5079 2.44108 13.3892 2.20078 13.1457 1.98849C12.9034 1.77721 12.5361 1.59228 12.0333 1.4392C11.0274 1.13299 9.46432 0.95 7.22896 0.95C5.21903 0.95 3.65656 1.10098 2.59501 1.39078C2.06446 1.53562 1.65523 1.71612 1.37765 1.93275C1.09897 2.15023 0.95 2.40689 0.95 2.70052V5.53136C0.95 5.66735 0.979155 5.79678 1.03683 5.91804C0.97918 6.03904 0.95 6.16782 0.95 6.30264V8.35439C0.95 8.49216 0.97992 8.62323 1.03911 8.74582C0.979953 8.8684 0.95 8.99882 0.95 9.1356V11.1872V11.1875C0.95 11.2757 0.949999 11.4458 1.07299 11.6452C1.19565 11.844 1.43677 12.066 1.90648 12.2692C2.83995 12.6731 4.69192 13.0091 8.37222 12.9301C8.57139 15.3951 10.6551 17.05 12.8371 17.05C15.3082 17.05 17.3183 15.0398 17.3183 12.5688ZM7.22912 1.95419C9.23567 1.95419 10.5324 2.12954 11.3388 2.3169C11.742 2.41057 12.0222 2.50716 12.2072 2.58612C12.2997 2.6256 12.3681 2.66057 12.416 2.68842C12.4293 2.69617 12.4408 2.70325 12.4508 2.70963C12.4061 2.73885 12.3298 2.78178 12.2125 2.83274C12.0307 2.91168 11.7543 3.00827 11.3537 3.10196C10.5523 3.28935 9.25565 3.46475 7.22912 3.46475C5.17763 3.46475 3.88099 3.28938 3.08594 3.10204C2.68845 3.00838 2.41677 2.91183 2.23903 2.83297C2.12351 2.78171 2.04902 2.73852 2.00563 2.7092C2.04866 2.67987 2.12224 2.63681 2.23633 2.58577C2.41245 2.50699 2.6822 2.41048 3.0784 2.31685C3.8709 2.12957 5.16752 1.95419 7.22912 1.95419ZM1.95419 5.49755V3.47536C2.38572 3.66201 3.87498 4.16309 7.22912 4.16309C10.6015 4.16309 12.0742 3.66217 12.5039 3.47546V5.49617C12.5024 5.49752 12.5006 5.49906 12.4985 5.50078C12.4881 5.50944 12.4727 5.52073 12.4517 5.53429C12.4098 5.56138 12.3471 5.59643 12.2596 5.63661C12.0845 5.71693 11.8117 5.817 11.4107 5.9147C10.6086 6.11011 9.29541 6.29559 7.22912 6.29559C5.05777 6.29559 3.74482 6.11006 2.96928 5.9148C2.58157 5.81718 2.32891 5.7173 2.17076 5.63743C2.09168 5.59748 2.03659 5.56272 2.0002 5.53599C1.982 5.52261 1.96875 5.51145 1.95965 5.50288C1.95759 5.50093 1.95577 5.49915 1.95419 5.49755ZM1.95419 8.31895V6.33742C1.95925 6.33204 1.96656 6.32493 1.97676 6.31624C2.33563 6.4688 3.85667 6.99361 7.22912 6.99361C10.5602 6.99361 12.1142 6.47161 12.4814 6.31626C12.4914 6.3249 12.4987 6.33205 12.5039 6.33756V8.40716C11.9595 8.45011 11.4448 8.59756 10.9792 8.82935C9.95847 9.01574 8.60497 9.11846 7.22912 9.11846C5.16024 9.11846 3.85061 8.9357 3.05091 8.74167C2.65109 8.64466 2.37924 8.54496 2.20394 8.46418C2.11626 8.42378 2.05312 8.38829 2.01036 8.36048C1.98896 8.34656 1.97303 8.33479 1.96184 8.32554C1.95891 8.32312 1.95637 8.32092 1.95419 8.31895ZM3.31174 11.6369C2.71232 11.5171 2.22804 11.3567 1.95419 11.1472V9.17049C1.96057 9.16368 1.97048 9.15414 1.98526 9.14221C3.19874 9.61868 4.98003 9.78459 6.55848 9.81541C7.99536 9.84347 9.27173 9.75962 9.81112 9.69276C9.23941 10.2941 8.84507 11.0656 8.71179 11.9238C8.1645 11.9573 6.7696 11.9788 5.36452 11.8851C4.64419 11.8371 3.92254 11.7589 3.31174 11.6369ZM12.8371 16.0499C10.9148 16.0499 9.35641 14.4913 9.35641 12.5692C9.35641 10.6467 10.9148 9.08831 12.8373 9.08831C14.7594 9.08831 16.318 10.6469 16.318 12.569C16.318 14.4913 14.7597 16.0499 12.8371 16.0499Z\",\n      color: \"#8f8f8f\"\n    }\n  ],\n  volumes_information: [\n    {\n      path:\n        \"M9 0C4.032 0 0 4.032 0 9C0 13.968 4.032 18 9 18C13.968 18 18 13.968 18 9C18 4.032 13.968 0 9 0ZM8.09978 4.49956H9.89978V6.29956H8.09978V4.49956ZM8.10022 13.4991H9.90022V8.09912H8.10022V13.4991Z\",\n      color: \"#2A80BA\",\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\"\n    }\n  ],\n  common_information: [\n    {\n      path:\n        \"M9 0C4.032 0 0 4.032 0 9C0 13.968 4.032 18 9 18C13.968 18 18 13.968 18 9C18 4.032 13.968 0 9 0ZM8.09978 4.49956H9.89978V6.29956H8.09978V4.49956ZM8.10022 13.4991H9.90022V8.09912H8.10022V13.4991Z\",\n      color: \"#B9BAB9\",\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\"\n    }\n  ],\n  trash: [\n    {\n      path: \"M1 4.50078H15V3.80078H1V4.50078Z\",\n      color: \"#8F8F8F\"\n    },\n    {\n      path:\n        \"M12.1808 4.5V14.3H3.78082L3.77977 4.50026H3.09961V15.0003H12.8482L12.8808 4.50026L12.1808 4.5Z\",\n      color: \"#8F8F8F\"\n    },\n    {\n      path: \"M11.5 4.5H10.8198V1.7H5.2V4.5H4.5V1H11.5V4.5Z\",\n      color: \"#8F8F8F\"\n    },\n    {\n      path: \"M5.5498 6.25H6.2498V12.55H5.5498V6.25Z\",\n      color: \"#979797\"\n    },\n    {\n      path: \"M7.65039 6.25H8.35039V12.55H7.65039V6.25Z\",\n      color: \"#979797\"\n    },\n    {\n      path: \"M9.75 6.25H10.45V12.55H9.75V6.25Z\",\n      color: \"#979797\"\n    }\n  ],\n  up_arrow: [\n    {\n      path:\n        \"M0 8C0 12.4126 3.58737 16 8 16C12.4126 16 16 12.4126 16 8C16 3.58737 12.4126 0 8 0C3.58737 0 0 3.58737 0 8ZM11.9242 6.97263L10.6779 8.21895L8.87579 6.41684V12.5811H7.12421V6.41684L5.32211 8.21895L4.07579 6.97263L8 3.06526L11.9242 6.97263Z\",\n      color: \"#999999\"\n    }\n  ],\n  down_arrow: [\n    {\n      path:\n        \"M16 8C16 3.58737 12.4126 -3.53166e-07 8 -7.87576e-07C3.58737 -1.22199e-06 9.6363e-07 3.58737 6.21064e-07 8C2.78498e-07 12.4126 3.58737 16 8 16C12.4126 16 16 12.4126 16 8ZM4.07579 9.02737L5.32211 7.78105L7.12421 9.58316L7.12421 3.41895L8.87579 3.41895L8.87579 9.58316L10.6779 7.78105L11.9242 9.02737L8 12.9347L4.07579 9.02737Z\",\n      color: \"#999999\"\n    }\n  ],\n  question: [\n    {\n      path:\n        \"M12.9777 4.59302C10.0656 4.59302 7.67363 6.88867 7.67363 9.72821C7.6727 9.80233 7.68651 9.87591 7.71423 9.94465C7.74196 10.0134 7.78306 10.076 7.83515 10.1287C7.88724 10.1814 7.94928 10.2233 8.01767 10.2519C8.08607 10.2805 8.15946 10.2952 8.23359 10.2952C8.30771 10.2952 8.3811 10.2805 8.4495 10.2519C8.51789 10.2233 8.57993 10.1814 8.63202 10.1287C8.68411 10.076 8.72521 10.0134 8.75294 9.94465C8.78066 9.87591 8.79447 9.80233 8.79354 9.72821C8.79354 7.51655 10.6496 5.71293 12.9777 5.71293C14.1394 5.71293 15.3075 6.18621 16.1087 6.9192C16.9099 7.65219 17.3399 8.59746 17.1668 9.63616C17.1668 9.63635 17.1668 9.63654 17.1668 9.63673C16.7928 11.8958 15.7767 12.2731 14.6117 12.9883C14.0292 13.3458 13.3988 13.7775 12.9701 14.5262C12.5414 15.2748 12.3438 16.2875 12.4558 17.7373C12.4606 17.8113 12.48 17.8836 12.5129 17.95C12.5458 18.0164 12.5916 18.0756 12.6476 18.1242C12.7036 18.1728 12.7687 18.2098 12.8391 18.233C12.9095 18.2562 12.9838 18.2652 13.0578 18.2595C13.1317 18.2538 13.2037 18.2335 13.2697 18.1997C13.3357 18.1659 13.3943 18.1194 13.4422 18.0628C13.4901 18.0062 13.5262 17.9406 13.5486 17.87C13.5709 17.7993 13.579 17.7248 13.5724 17.651C13.4711 16.34 13.6543 15.5849 13.942 15.0826C14.2296 14.5803 14.6512 14.2781 15.1976 13.9427C16.2903 13.2719 17.8398 12.427 18.2715 9.82022C18.2715 9.82002 18.2715 9.81994 18.2715 9.81966C18.5135 8.3666 17.8829 7.02442 16.8647 6.09294C15.8464 5.16134 14.4362 4.59302 12.9777 4.59302Z\",\n      color: \"#444444\",\n      clipRule: \"evenodd\",\n      fillRule: \"evenodd\"\n    },\n    {\n      path:\n        \"M12.9999 19.2593C12.3899 19.2593 11.8826 19.7705 11.8826 20.3793C11.8826 20.9879 12.3865 21.4992 12.9999 21.4992C13.6134 21.4992 14.1174 20.9913 14.1174 20.3793C14.1174 19.7671 13.61 19.2593 12.9999 19.2593Z\",\n      color: \"#444444\",\n      clipRule: \"evenodd\",\n      fillRule: \"evenodd\"\n    },\n    {\n      path:\n        \"M12.9999 0.628174C6.20128 0.628174 0.679932 6.1761 0.679932 13.0014C0.679932 19.8267 6.20145 25.3717 12.9999 25.3717C19.7984 25.3717 25.3199 19.8267 25.3199 13.0014C25.3199 6.1761 19.7986 0.628174 12.9999 0.628174ZM12.9999 1.74809C19.1906 1.74809 24.2 6.77867 24.2 13.0014C24.2 19.2241 19.1907 24.2518 12.9999 24.2518C6.80913 24.2518 1.79985 19.2241 1.79985 13.0014C1.79985 6.77866 6.8093 1.74809 12.9999 1.74809Z\",\n      color: \"#444444\",\n      clipRule: \"evenodd\",\n      fillRule: \"evenodd\"\n    }\n  ]\n};\n\nconst styles = {\n  color: {\n    default: \"#8f8f8f\"\n  },\n  svg: {\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  }\n};\n\nconst Icon = ({ icon, color, style, width, height, viewBox }) => {\n  const renderPath = () => {\n    if (Array.isArray(icons[icon])) {\n      return icons[icon].map((item, i) => {\n        let keyIndex = i;\n        return (\n          <path\n            d={item.path}\n            key={keyIndex}\n            fill={item.color || color || styles.color.default}\n            fillRule={item.fillRule ? item.fillRule : \"\"}\n            clipRule={item.clipRule ? item.clipRule : \"\"}\n          />\n        );\n      });\n    }\n    return <path d={icons[icon]} fill={color} />;\n  };\n\n  return (\n    <svg\n      style={style ? style : styles.svg}\n      width={width}\n      height={height}\n      viewBox={viewBox}\n    >\n      {renderPath()}\n    </svg>\n  );\n};\n\nIcon.defaultProps = {\n  color: \"#8f8f8f\",\n  viewBox: \"0 0 1024 1024\"\n};\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  viewBox: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\n\nexport default React.memo(Icon);\n","import React from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from \"react-intl\";\nimport { ID_PREFIX } from \"../../../configs/IdConfig\";\nimport FormattedBrandMessage from \"../FormattedBrandMessage\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst LoadingDots = () => {\n  return (\n    <div className=\"dropdown-loding-icon\">\n      {\" \"}\n      &nbsp;\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n    </div>\n  );\n};\n\nconst ActionDropdown = ({\n  showDateRange,\n  onMenuItemClick,\n  optionIndex,\n  render,\n  hasi18nSupport,\n  disabledOptions,\n  skipDefaultOption,\n  defaultOptionKey,\n  intl,\n  defaultOptionValue,\n  variant,\n  pullRight,\n  dropup,\n  loading,\n  label,\n  id,\n  testId,\n  keyAsTestId,\n  value,\n  disabled,\n  customStyle,\n  className = \"\",\n  customMenuClassName = \"\",\n  hideFloatingLabel,\n  displayValue, //displays the value as is\n  hideOutline,\n  ...props\n}) => {\n  // const useStyles = makeStyles(theme => ({\n  //   formControl: {\n  //     \"& .MuiInputLabel-formControl\": {\n  //       fontSize: \"13px\",\n  //       fontFamily: \"Sans-Regular\",\n  //       position: \"relative\",\n  //       top: \"20px\"\n  //     },\n  //     \"& .MuiInputLabel-root.Mui-focused\": {\n  //       backgroundColor: \"white\",\n  //       fontSize: \"1rem\",\n  //       position: \"absolute\",\n  //       top: \"0\"\n  //     },\n  //     \"& .MuiFormLabel-filled\": {\n  //       backgroundColor: \"white\",\n  //       fontSize: \"1rem\",\n  //       position: \"absolute\",\n  //       top: \"0\"\n  //     },\n  //     \"& .MuiOutlinedInput-root.Mui-disabled\": {\n  //       backgroundColor: \"rgba(0,0,0,0.12)\",\n  //       color: \"rgba(0,0,0,0.26)\"\n  //     },\n  //     width: !(customStyle && customStyle.hasOwnProperty(\"width\"))\n  //       ? \"100%\"\n  //       : null,\n  //     marginTop: 0\n  //   },\n  //   dropdownStyle: {\n  //     height: \"37px\",\n  //     fontFamily: \"Sans Source Pro\",\n  //     fontSize: \"13px\"\n  //   },\n  //   selectEmpty: {}\n  // }));\n  // const classes = useStyles();\n\n  const handleChange = event => {\n    onMenuItemClick({ key: event.target.value, value: event.target.value });\n  };\n\n  const processMenuItem = (\n    item,\n    optionIndex,\n    isDisabled = false,\n    menuid,\n    keyAsTestId\n  ) => {\n    let customKey = item.value\n      ? item.value.toString()\n      : item.key\n      ? item.key.toString()\n      : item.toString();\n    if (displayValue) {\n      return (\n        <MenuItem\n          value={item.key}\n          key={item.key}\n          id={\n            menuid\n              ? `${menuid}_${\n                  keyAsTestId ? customKey.split(\".\").pop() : optionIndex\n                }`\n              : \"\"\n          }\n        >\n          {item.value}\n        </MenuItem>\n      );\n    }\n    return item ? (\n      <MenuItem\n        disabled={isDisabled}\n        value={item.key}\n        key={item.key}\n        id={\n          menuid\n            ? `${menuid}_${\n                keyAsTestId ? customKey.split(\".\").pop() : optionIndex\n              }`\n            : \"\"\n        }\n      >\n        {hasi18nSupport ? (\n          <FormattedBrandMessage\n            id={\n              item.value\n                ? item.value.toString()\n                : item.key\n                ? item.key.toString()\n                : item.toString()\n            }\n            defaultMessage={\n              item.value\n                ? item.value.toString()\n                : item.key\n                ? item.key.toString()\n                : item.toString()\n            }\n          />\n        ) : typeof item === \"object\" ? (\n          item.key\n        ) : (\n          item\n        )}\n      </MenuItem>\n    ) : (\n      false\n    );\n  };\n  const renderMenuItem = (menuid, keyAsTestId) => {\n    if (props.options && props.options.length + disabledOptions.length === 0)\n      return <div />;\n    let options = cloneDeep(props.options);\n    if (!skipDefaultOption) {\n      options.unshift({\n        key: hasi18nSupport\n          ? defaultOptionKey\n          : intl.formatMessage({\n              id: defaultOptionKey,\n              defaultMessage: defaultOptionKey\n            }),\n        value: defaultOptionValue\n      });\n    }\n    return (\n      options &&\n      options\n        .map((item, index) =>\n          processMenuItem(item, index, false, menuid, keyAsTestId)\n        )\n        .concat(\n          disabledOptions.map((item, index) =>\n            processMenuItem(item, index, true, menuid, keyAsTestId)\n          )\n        )\n    );\n  };\n\n  let title = props.title ? (\n    typeof props.title === \"string\" ? (\n      <FormattedBrandMessage id={props.title} defaultMessage={props.title} />\n    ) : (\n      props.title\n    )\n  ) : null;\n\n  let inputid = testId ? `${ID_PREFIX}${testId}` : id ? id : \"\";\n  let menuid = testId ? `${ID_PREFIX}${testId}` : id ? id : \"\";\n  let selectid = testId ? `${ID_PREFIX}${testId}` : id ? id : \"\";\n\n  const formControl = {\n    \"& .MuiInputLabel-formControl\": {\n      fontSize: \"13px\",\n      fontFamily: \"Sans-Regular\",\n      position: \"relative\",\n      top: \"20px\"\n    },\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      backgroundColor: \"white\",\n      fontSize: \"1rem\",\n      position: \"absolute\",\n      top: \"0\"\n    },\n    \"& .MuiFormLabel-filled\": {\n      backgroundColor: \"white\",\n      fontSize: \"1rem\",\n      position: \"absolute\",\n      top: \"0\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-disabled\": {\n      backgroundColor: \"rgba(0,0,0,0.12)\",\n      color: \"rgba(0,0,0,0.26)\"\n    },\n    width: !(customStyle && customStyle.hasOwnProperty(\"width\"))\n      ? \"100%\"\n      : null,\n    marginTop: 0\n  };\n  const isEmpty = props?.options?.length === 0;\n  return (\n    <div style={formControl}>\n      <FormControl\n        variant={hideOutline ? \"standard\" : \"outlined\"}\n        sx={formControl}\n      >\n        {label ? (\n          <InputLabel id={`outlined-age-native-simple-${label}`}>\n            <b>{label}</b>\n          </InputLabel>\n        ) : null}\n        <Select\n          disableUnderline={hideOutline ? hideOutline : false}\n          labelId={`outlined-age-native-simple-${label}`}\n          id={selectid}\n          disabled={disabled || isEmpty || loading}\n          displayEmpty={true}\n          defaultValue=\"\"\n          value={props.options.length > 0 ? value : \"\"}\n          renderValue={\n            loading ? () => <LoadingDots /> : title ? () => title : () => {}\n          }\n          onChange={handleChange}\n          label={label || null}\n          role=\"button\"\n          style={customStyle}\n          sx={{\n            height: \"37px\",\n            fontFamily: \"Sans Source Pro\",\n            fontSize: \"13px\"\n          }}\n          className={`${className} mui-action-select-dropdown`}\n          inputProps={{\n            name: label,\n            id: inputid ? `${inputid}_input` : \"\",\n            \"aria-label\": \"Without label\"\n          }}\n          MenuProps={{\n            id: `${menuid}_menu`,\n            PaperProps: { className: customMenuClassName }\n          }}\n        >\n          {renderMenuItem(menuid ? `${menuid}_menu` : \"\", keyAsTestId)}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nActionDropdown.defaultProps = {\n  dropup: false,\n  pullRight: true,\n  disabled: false,\n  hasi18nSupport: true,\n  options: [],\n  title: \"\",\n  optionIndex: 0,\n  render: false,\n  showDateRange: false,\n  skipDefaultOption: true,\n  defaultOptionKey: \"select\",\n  defaultOptionValue: null,\n  onMenuItemClick: () => {},\n  disabledOptions: [],\n  className: \"\",\n  loading: false\n};\n\nActionDropdown.propTypes = {\n  defaultOptionKey: PropTypes.string,\n  defaultOptionValue: PropTypes.string,\n  dropup: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  menuAlign: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  disabled: PropTypes.bool,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })\n    ),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n  ]),\n  disabledOptions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })\n    ),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n  ]),\n  onMenuItemClick: PropTypes.func,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func\n  }).isRequired,\n  hasi18nSupport: PropTypes.bool,\n  optionIndex: PropTypes.number,\n  render: PropTypes.bool,\n  showDateRange: PropTypes.bool,\n  skipDefaultOption: PropTypes.bool,\n  className: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default injectIntl(React.memo(ActionDropdown));\n","import ActionDropdown from \"./ActionDropdown\";\n\nexport default ActionDropdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ActionDropdown from \"../action-dropdown-mui\";\nimport FormattedMessage from \"../formatted-message\";\n\n/**\n * Re-usable component that enables additional column header\n * options for a specific column.\n */\nclass HeaderDropdown extends React.Component {\n  /**\n   * Default constructor\n   * @param {*} props\n   * @override\n   */\n  constructor(props) {\n    super(props);\n  }\n\n  /**\n   * Handle main rendering logic for the component.\n   * @override\n   */\n  render() {\n    return (\n      <div\n        className=\"header-dropdown-wrapper d-flex align-items-center\"\n        id=\"grid-header-dropdown-wrapper\"\n      >\n        <div className=\"header-dropdown-title\">\n          <FormattedMessage\n            id={this.props.displayIdentifier}\n            defaultMessage={this.props.defaultDisplayMessage}\n          />\n        </div>\n        <ActionDropdown\n          onMenuItemClick={this.props.onMenuItemClick}\n          options={this.props.options}\n        />\n      </div>\n    );\n  }\n}\n\nHeaderDropdown.defaultProps = {\n  defaultDisplayMessage: \"\",\n  options: [],\n  onMenuItemClick: () => {}\n};\n\nHeaderDropdown.propTypes = {\n  displayIdentifier: PropTypes.string.isRequired,\n  defaultDisplayMessage: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({})),\n  onMenuItemClick: PropTypes.func\n};\n\nexport default HeaderDropdown;\n","import \"react-grid-layout/css/styles.css\";\nimport React from \"react\";\nimport _ from \"lodash\";\n//import Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from \"react-intl\";\nimport { getLogin } from \"../../../state/selectors\";\nimport { BRAND_NAMES } from \"../../../utils/appConstants\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Chip from \"@mui/material/Chip\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport FormattedMessage from \"../formatted-message/FormattedMessage\";\nimport { ID_PREFIX } from \"../../../configs/IdConfig\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst LoadingDots = classToAdd => {\n  return (\n    <div\n      style={{\n        minWidth: \"185px\",\n        display: \"flex\",\n        height: \"10px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n      className={classToAdd ? classToAdd : \"\"}\n    >\n      {\" \"}\n      &nbsp;\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n      <div className=\"state-loading-bar\" />\n    </div>\n  );\n};\n\nconst SelectDropdown = ({\n  dropdownOptions,\n  selectedOption,\n  testId,\n  id,\n  loading = false,\n  classToAdd,\n  ...props\n}) => {\n  const handleChange = (event, newValues, reason, currentSelectedOption) => {\n    let updatedValues = [];\n\n    if (currentSelectedOption && currentSelectedOption.option) {\n      if (currentSelectedOption.option.value === \"select_all\") {\n        if (reason === \"removeOption\") {\n          updatedValues = [];\n        } else {\n          updatedValues = [...dropdownOptions];\n        }\n      } else {\n        updatedValues = newValues.length ? [...newValues] : [];\n      }\n    }\n\n    props.getSelectedOption(\n      props.optionType,\n      updatedValues\n        .filter(item => item.value !== \"select_all\")\n        .map(item => {\n          return {\n            value: item.value,\n            label: item.label,\n            id: item.id ? item.id : \"\"\n          };\n        })\n    );\n  };\n\n  let brandNames = _.get(props, \"brand_names\", BRAND_NAMES);\n  const dropdownAllOptions =\n    dropdownOptions.map(option => {\n      return {\n        ...option,\n        label: props.hasi18nSupportByLabel\n          ? props.intl.formatMessage(\n              {\n                id: option.label,\n                defaultMessage: option.label\n              },\n              { ...brandNames }\n            )\n          : props.hasi18nSupport\n          ? props.intl.formatMessage(\n              {\n                id: option.value,\n                defaultMessage: option.value\n              },\n              { ...brandNames }\n            )\n          : option.label\n      };\n    }) || [];\n\n  if (props.isMultiSelect) {\n    dropdownAllOptions.length &&\n      dropdownAllOptions.unshift({\n        value: \"select_all\",\n        key: \"select-all\",\n        label: props.intl.formatMessage({\n          id: \"select_all\",\n          defaultMessage: \"Select All\"\n        })\n      });\n  }\n\n  let options = selectedOption ? selectedOption.map(item => item.value) : [];\n  if (selectedOption && selectedOption.length) {\n    if (dropdownAllOptions.length === options.length + 1) {\n      options.unshift(\"select_all\");\n    }\n  } else {\n    options = [];\n  }\n  const selectedValues = dropdownAllOptions\n    ? dropdownAllOptions.filter(item => {\n        return options.indexOf(item.value) !== -1;\n      })\n    : [];\n\n  const textFieldClassname = props.label\n    ? \"multiselectDropdown\"\n    : \"multiselectDropdown spog-mui-textfield\";\n\n  let selectDropdownId = testId ? `${ID_PREFIX}${testId}` : id ? id : \"\";\n\n  return (\n    <Autocomplete\n      disabled={loading}\n      noOptionsText={\n        <FormattedMessage id=\"no_options\" defaultMessage=\"No options\" />\n      }\n      openText={null}\n      closeText={null}\n      className=\"mui-action-select-dropdown\"\n      multiple\n      id={selectDropdownId ? selectDropdownId : \"checkboxes-tags\"}\n      limitTags={1}\n      //size=\"small\"\n      options={dropdownAllOptions}\n      disableCloseOnSelect\n      getOptionLabel={option => option.label}\n      onChange={handleChange}\n      value={[...selectedValues]}\n      renderTags={value => {\n        return selectedValues.length === 1 ? (\n          <Chip\n            label={props.intl.formatMessage(\n              {\n                id: selectedValues[0].label,\n                defaultMessage: selectedValues[0].label\n              },\n              { ...brandNames }\n            )}\n            sx={{\n              \"& .MuiChip-label\": {\n                paddingRight: 0\n              }\n            }}\n            variant=\"outlined\"\n            style={{ border: \"none\", width: \"50%\" }}\n          />\n        ) : (\n          <Chip\n            label={\n              selectedValues.length\n                ? `${\n                    selectedValues.filter(item => item.value !== \"select_all\")\n                      .length\n                  } ${props.intl.formatMessage({\n                    id: \"Selected\",\n                    defaultMessage: \"Selected\"\n                  })}`\n                : null\n            }\n            variant=\"outlined\"\n            style={{ border: \"none\" }}\n          />\n        );\n      }}\n      renderOption={(props, option) => {\n        return (\n          <li {...props}>\n            <Checkbox\n              icon={icon}\n              checkedIcon={checkedIcon}\n              style={{ marginRight: 3 }}\n              checked={options.indexOf(option.value) > -1}\n              id={`${selectDropdownId}_checkbox_${option.value}`}\n            />\n            {option.label}\n          </li>\n        );\n      }}\n      style={props.style ? { ...props.style } : {}}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={loading ? LoadingDots(classToAdd) : props.label}\n          placeholder={\n            !selectedValues.length\n              ? props.placeholder\n                ? props.intl.formatMessage({\n                    id: props.placeholder,\n                    defaultMessage: props.placeholder\n                  })\n                : loading\n                ? LoadingDots(classToAdd)\n                : \"Select\"\n              : \" \"\n          }\n          className={textFieldClassname}\n          sx={{\n            \"& .MuiOutlinedInput-root.Mui-disabled\": {\n              \"& > fieldset\": {\n                backgroundColor: \"rgba(0,0,0,0.12)\",\n                color: \"rgba(0,0,0,0.26)\"\n              }\n            }\n          }}\n        />\n      )}\n    />\n  );\n};\n\nSelectDropdown.defaultProps = {\n  hasi18nSupport: true,\n  isMultiSelect: true,\n  isMenuCloseOnSelect: false,\n  isDropdownDisabled: false,\n  selectedOption: [],\n  class: \"\",\n  noResultsText: \"select.noResults\"\n};\n\nSelectDropdown.propTypes = {\n  dropdownOptions: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  isMenuCloseOnSelect: PropTypes.bool,\n  isDropdownDisabled: PropTypes.bool,\n  isMultiSelect: PropTypes.bool,\n  selectedOption: PropTypes.arrayOf(PropTypes.shape({})),\n  getSelectedOption: PropTypes.func.isRequired,\n  optionType: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  class: PropTypes.string,\n  hasi18nSupport: PropTypes.bool,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func.isRequired\n  }).isRequired,\n  noResultsText: PropTypes.string\n};\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    brand_names: getLogin(state).brand_names\n  });\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(injectIntl(SelectDropdown));\n","import SelectDropdown from \"./SelectDropdown\";\n\nexport default SelectDropdown;\n","import React from \"react\";\nimport FolderIcon from \"@mui/icons-material/FolderOutlined\";\nimport FileIcon from \"@mui/icons-material/InsertDriveFileOutlined\";\n\nexport const Icons = {\n  Machine: (\n    <svg\n      width=\"23\"\n      height=\"20\"\n      viewBox=\"0 0 23 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.5144 0.442383H2.48565C2.09148 0.442818 1.7136 0.599209 1.43504 0.877198C1.15647 1.15519 1 1.53204 1 1.92496V14.8494C1.00054 15.242 1.15724 15.6184 1.43574 15.896C1.71423 16.1736 2.0918 16.3298 2.48565 16.3304H8.58676L8.06794 18.6667H7.13529C7.02609 18.6667 6.92135 18.7099 6.84413 18.7869C6.76691 18.8639 6.72353 18.9683 6.72353 19.0772C6.72353 19.186 6.76691 19.2904 6.84413 19.3674C6.92135 19.4444 7.02609 19.4876 7.13529 19.4876H15.8647C15.9739 19.4876 16.0786 19.4444 16.1559 19.3674C16.2331 19.2904 16.2765 19.186 16.2765 19.0772C16.2765 18.9683 16.2331 18.8639 16.1559 18.7869C16.0786 18.7099 15.9739 18.6667 15.8647 18.6667H14.9321L14.4132 16.3337H20.5144C20.9088 16.3331 21.2868 16.1765 21.5654 15.8981C21.844 15.6198 22.0003 15.2426 22 14.8494V1.92496C22 1.53204 21.8435 1.15519 21.565 0.877198C21.2864 0.599209 20.9085 0.442818 20.5144 0.442383ZM2.48565 1.2633H20.5144C20.6014 1.26335 20.6876 1.28051 20.7681 1.31381C20.8485 1.3471 20.9215 1.39586 20.983 1.45731C21.0445 1.51876 21.0932 1.5917 21.1264 1.67194C21.1596 1.75218 21.1766 1.83816 21.1765 1.92496V12.7294H1.82353V1.92496C1.82337 1.83816 1.84037 1.75218 1.87357 1.67194C1.90676 1.5917 1.9555 1.51876 2.017 1.45731C2.07849 1.39586 2.15153 1.3471 2.23195 1.31381C2.31236 1.28051 2.39857 1.26335 2.48565 1.2633ZM14.0888 18.6667H8.91124L9.43047 16.3337H13.5695L14.0888 18.6667ZM20.5144 15.5127H2.48565C2.39845 15.5126 2.31213 15.4954 2.23163 15.462C2.15113 15.4286 2.07804 15.3796 2.01653 15.318C1.95503 15.2564 1.90632 15.1833 1.8732 15.1029C1.84008 15.0225 1.8232 14.9364 1.82353 14.8494V13.5503H21.1765V14.8494C21.1766 14.9362 21.1595 15.0222 21.1263 15.1024C21.0931 15.1826 21.0444 15.2555 20.9829 15.317C20.9214 15.3784 20.8484 15.4272 20.768 15.4605C20.6876 15.4938 20.6014 15.511 20.5144 15.5111V15.5127Z\"\n        fill=\"#4BBFA5\"\n        stroke=\"#4BBFA5\"\n        stroke-width=\"0.3\"\n      />\n    </svg>\n  ),\n  FolderMachine: (\n    <svg\n      width=\"23\"\n      height=\"20\"\n      viewBox=\"0 0 23 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M19.55 9.04961H13.95C13.7564 9.04961 13.6 8.89281 13.6 8.69961C13.6 8.50641 13.7564 8.34961 13.95 8.34961H19.55C19.7435 8.34961 19.9 8.50641 19.9 8.69961C19.9 8.89281 19.7435 9.04961 19.55 9.04961Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M19.55 10.45H16.75C16.5565 10.45 16.4 10.2932 16.4 10.1C16.4 9.9068 16.5565 9.75 16.75 9.75H19.55C19.7436 9.75 19.9 9.9068 19.9 10.1C19.9 10.2932 19.7436 10.45 19.55 10.45Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M1.7 6.25H21.3V4.5C21.3 4.11395 20.986 3.8 20.6 3.8H8.53235C8.30975 3.8 8.10185 3.70025 7.9629 3.5263L6.6063 1.83055C6.5398 1.7476 6.44075 1.7 6.33435 1.7H2.4C2.01395 1.7 1.7 2.01395 1.7 2.4V6.25ZM21.65 6.95H1.35C1.15645 6.95 1 6.7932 1 6.6V2.4C1 1.6279 1.6279 1 2.4 1H6.33435C6.65425 1 6.9528 1.1435 7.15265 1.3934L8.50925 3.0888L20.6 3.1C21.3721 3.1 22 3.7279 22 4.5V6.6C22 6.7932 21.8435 6.95 21.65 6.95Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M5.55 10.7996C3.05905 10.7996 1.7 11.4933 1.7 11.8496C1.7 12.2059 3.05905 12.8996 5.55 12.8996C8.04095 12.8996 9.4 12.2059 9.4 11.8496C9.4 11.4933 8.04095 10.7996 5.55 10.7996ZM5.55 13.5996C3.289 13.5996 1 12.9987 1 11.8496C1 10.7006 3.289 10.0996 5.55 10.0996C7.811 10.0996 10.1 10.7006 10.1 11.8496C10.1 12.9987 7.811 13.5996 5.55 13.5996Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M1.7 17.0275V18.1492C1.7 18.5055 3.05905 19.1992 5.55 19.1992C8.04095 19.1992 9.4 18.5055 9.4 18.1492V17.0275C7.70005 18.046 3.39995 18.046 1.7 17.0275ZM5.55 19.8992C3.289 19.8992 1 19.2983 1 18.1492V16.0492C1 15.856 1.15645 15.6992 1.35 15.6992C1.54355 15.6992 1.7 15.856 1.7 16.0492C1.7 16.4055 3.05905 17.0992 5.55 17.0992C8.04095 17.0992 9.4 16.4055 9.4 16.0492C9.4 15.856 9.55645 15.6992 9.75 15.6992C9.94355 15.6992 10.1 15.856 10.1 16.0492V18.1492C10.1 19.2983 7.811 19.8992 5.55 19.8992Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M9.75 16.3996C9.55645 16.3996 9.4 16.2428 9.4 16.0496V14.9279C7.70005 15.9464 3.39995 15.9464 1.7 14.9279V16.0496C1.7 16.2428 1.54355 16.3996 1.35 16.3996C1.15645 16.3996 1 16.2428 1 16.0496V13.9496C1 13.7564 1.15645 13.5996 1.35 13.5996C1.54355 13.5996 1.7 13.7564 1.7 13.9496C1.7 14.3059 3.05905 14.9996 5.55 14.9996C8.04095 14.9996 9.4 14.3059 9.4 13.9496C9.4 13.7564 9.55645 13.5996 9.75 13.5996C9.94355 13.5996 10.1 13.7564 10.1 13.9496V16.0496C10.1 16.2428 9.94355 16.3996 9.75 16.3996Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M9.75002 14.3C9.55647 14.3 9.40002 14.1432 9.40002 13.95V11.85C9.40002 11.6568 9.55647 11.5 9.75002 11.5C9.94357 11.5 10.1 11.6568 10.1 11.85V13.95C10.1 14.1432 9.94357 14.3 9.75002 14.3Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M1.35 14.3C1.15645 14.3 1 14.1432 1 13.95V11.85C1 11.6568 1.15645 11.5 1.35 11.5C1.54355 11.5 1.7 11.6568 1.7 11.85V13.95C1.7 14.1432 1.54355 14.3 1.35 14.3Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M20.6 18.5H9.75C9.55645 18.5 9.4 18.3432 9.4 18.15C9.4 17.9568 9.55645 17.8 9.75 17.8H20.6C20.986 17.8 21.3 17.486 21.3 17.1V4.5C21.3 4.11395 20.986 3.8 20.6 3.8H8.53235C8.30975 3.8 8.10185 3.70025 7.9629 3.5263L6.6063 1.83055C6.5398 1.7476 6.44075 1.7 6.33435 1.7H2.4C2.01395 1.7 1.7 2.01395 1.7 2.4V11.85C1.7 12.0432 1.54355 12.2 1.35 12.2C1.15645 12.2 1 12.0432 1 11.85V2.4C1 1.6279 1.6279 1 2.4 1H6.33435C6.65425 1 6.9528 1.1435 7.15265 1.3934L8.50925 3.0888L20.6 3.1C21.3721 3.1 22 3.7279 22 4.5V17.1C22 17.8721 21.3721 18.5 20.6 18.5Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        stroke-width=\"0.2\"\n      />\n    </svg>\n  ),\n  FolderMUI: <FolderIcon />,\n  Folder: (\n    <svg\n      width=\"18\"\n      height=\"16\"\n      viewBox=\"0 0 18 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.6842 5.85023C17.3642 5.42659 16.884 5.18451 16.3639 5.18451H15.7838V3.83291C15.7838 2.92511 15.0636 2.19888 14.1634 2.19888H8.90213C8.68208 2.19888 8.50203 2.01732 8.50203 1.79542V1.63403C8.50203 0.726235 7.78186 0 6.88165 0H1.62039C0.720172 0 0 0.726235 0 1.63403V13.5564C0 14.0809 0.260062 14.5651 0.640153 14.8677C0.92022 15.0896 1.28031 15.2308 1.6604 15.2308L14.3434 15.2106C15.0636 15.2106 15.7038 14.7264 15.9238 14.0405L17.9243 7.28253C18.0843 6.7782 17.9843 6.25369 17.6842 5.85023ZM1.62039 1.23057H6.88165C7.1017 1.23057 7.28174 1.41212 7.28174 1.63403V1.79542C7.28174 2.70321 8.00191 3.42944 8.90213 3.42944H14.1634C14.3834 3.42944 14.5635 3.611 14.5635 3.83291V5.18451H3.96095C3.26078 5.18451 2.62063 5.62832 2.40057 6.29404L1.22029 9.80418V1.63403C1.22029 1.41212 1.40034 1.23057 1.62039 1.23057ZM16.764 6.91941L14.7635 13.6774C14.7035 13.859 14.5435 13.98 14.3434 13.98L1.6604 14.0002C1.52036 14.0002 1.38033 13.9397 1.30031 13.8186C1.2603 13.7581 1.20029 13.6371 1.2403 13.4555L3.52084 6.6975C3.58086 6.53612 3.74089 6.41508 3.92094 6.41508H16.3239C16.4639 6.41508 16.584 6.4756 16.664 6.59664C16.764 6.63698 16.824 6.75802 16.764 6.91941Z\"\n        fill=\"#4CBFA5\"\n      />\n    </svg>\n  ),\n  Database: (\n    <svg\n      width=\"19\"\n      height=\"22\"\n      viewBox=\"0 0 19 22\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9.5 21.5676C14.2218 21.5676 19 20.5097 19 18.4865V3.08108C19 1.05784 14.2218 0 9.5 0C4.77824 0 0 1.05784 0 3.08108V18.4865C0 20.5097 4.77824 21.5676 9.5 21.5676ZM9.5 1.02703C15.0639 1.02703 17.973 2.36473 17.973 3.08108C17.973 3.79743 15.0639 5.13514 9.5 5.13514C3.93608 5.13514 1.02703 3.79743 1.02703 3.08108C1.02703 2.36473 3.93608 1.02703 9.5 1.02703ZM1.02703 4.55743C2.68311 5.61527 6.10824 6.16216 9.5 6.16216C12.8918 6.16216 16.3169 5.61527 17.973 4.55743V8.21622C17.973 8.93257 15.0639 10.2703 9.5 10.2703C3.93608 10.2703 1.02703 8.93257 1.02703 8.21622V4.55743ZM1.02703 9.69257C2.68311 10.7504 6.10824 11.2973 9.5 11.2973C12.8918 11.2973 16.3169 10.7504 17.973 9.69257V13.3514C17.973 14.0677 15.0639 15.4054 9.5 15.4054C3.93608 15.4054 1.02703 14.0677 1.02703 13.3514V9.69257ZM1.02703 14.8277C2.68311 15.8855 6.10824 16.4324 9.5 16.4324C12.8918 16.4324 16.3169 15.8855 17.973 14.8277V18.4865C17.973 19.2028 15.0639 20.5405 9.5 20.5405C3.93608 20.5405 1.02703 19.2028 1.02703 18.4865V14.8277Z\"\n        fill=\"#4CBFA5\"\n      />\n      <path\n        d=\"M16.0784 17.9463C16.0784 18.3329 15.765 18.6463 15.3784 18.6463C14.9918 18.6463 14.6784 18.3329 14.6784 17.9463C14.6784 17.5597 14.9918 17.2463 15.3784 17.2463C15.765 17.2463 16.0784 17.5597 16.0784 17.9463Z\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.6\"\n      />\n      <path\n        d=\"M16.0784 12.8105C16.0784 13.1971 15.765 13.5105 15.3784 13.5105C14.9918 13.5105 14.6784 13.1971 14.6784 12.8105C14.6784 12.4239 14.9918 12.1105 15.3784 12.1105C15.765 12.1105 16.0784 12.4239 16.0784 12.8105Z\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.6\"\n      />\n      <path\n        d=\"M16.0784 7.67578C16.0784 8.06238 15.765 8.37578 15.3784 8.37578C14.9918 8.37578 14.6784 8.06238 14.6784 7.67578C14.6784 7.28918 14.9918 6.97578 15.3784 6.97578C15.765 6.97578 16.0784 7.28918 16.0784 7.67578Z\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.6\"\n      />\n    </svg>\n  ),\n  RightArrow: (\n    <svg\n      width=\"6\"\n      height=\"10\"\n      viewBox=\"0 0 6 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 10L6 5L-4.37114e-07 0\"\n        fill=\"#8F8F8F\"\n      />\n    </svg>\n  ),\n  Volume: (\n    <svg\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M1.43333 4.6821H13.5667C13.8602 4.6821 14.05 4.43715 14.05 4.15647V1.43239C14.05 1.29128 14.0026 1.16982 13.9162 1.08351C13.8297 0.997223 13.708 0.95 13.5667 0.95H1.43333C1.292 0.95 1.17033 0.997223 1.08385 1.08351C0.997361 1.16982 0.95 1.29128 0.95 1.43239V4.19971C0.95 4.34082 0.997361 4.46229 1.08385 4.54859C1.17033 4.63488 1.292 4.6821 1.43333 4.6821ZM13.0833 1.91479V3.71732H1.91667V1.91479H13.0833Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M1.43333 9.35176H13.5667C13.708 9.35176 13.8297 9.30453 13.9162 9.21824C14.0026 9.13194 14.05 9.01048 14.05 8.86936V6.14528C14.05 6.00417 14.0026 5.88271 13.9162 5.79641C13.8297 5.71011 13.708 5.66289 13.5667 5.66289H1.43333C1.292 5.66289 1.17033 5.71011 1.08385 5.79641C0.997361 5.88271 0.95 6.00417 0.95 6.14528V8.86936C0.95 9.01048 0.997361 9.13194 1.08385 9.21824C1.17033 9.30453 1.292 9.35176 1.43333 9.35176ZM13.0833 6.62768V8.38697H1.91667V6.62768H13.0833Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M2.95796 3.15327C3.00425 3.19946 3.05253 3.23609 3.10843 3.26088C3.16454 3.28576 3.22579 3.2976 3.29661 3.2976C3.36743 3.2976 3.42869 3.28576 3.4848 3.26088C3.5407 3.23609 3.58898 3.19946 3.63526 3.15327C3.68155 3.10709 3.71826 3.05891 3.74312 3.0031C3.76808 2.94707 3.77995 2.88591 3.77995 2.81521C3.77995 2.7445 3.76808 2.68334 3.74312 2.62731C3.71826 2.5715 3.68155 2.52332 3.63526 2.47714C3.44241 2.2847 3.15081 2.2847 2.95796 2.47714C2.91168 2.52332 2.87496 2.5715 2.85011 2.62731C2.82515 2.68334 2.81328 2.7445 2.81328 2.81521C2.81328 2.88591 2.82515 2.94707 2.85011 3.0031C2.87496 3.05891 2.91168 3.10709 2.95796 3.15327Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M4.63988 2.33281C4.49855 2.33281 4.37687 2.38004 4.29039 2.46633C4.2039 2.55263 4.15654 2.67409 4.15654 2.81521C4.15654 2.95632 4.2039 3.07778 4.29039 3.16408C4.37687 3.25038 4.49855 3.2976 4.63988 3.2976C4.93059 3.2976 5.12321 3.05582 5.12321 2.81521C5.12321 2.67409 5.07585 2.55263 4.98936 2.46633C4.90288 2.38004 4.78121 2.33281 4.63988 2.33281Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M2.95796 7.8232C3.00425 7.86939 3.05253 7.90601 3.10843 7.9308C3.16454 7.95568 3.22579 7.96752 3.29661 7.96752C3.36743 7.96752 3.42869 7.95568 3.4848 7.9308C3.5407 7.90601 3.58898 7.86939 3.63526 7.8232C3.68155 7.77701 3.71826 7.72883 3.74312 7.67302C3.76808 7.61699 3.77995 7.55583 3.77995 7.48513C3.77995 7.41442 3.76808 7.35326 3.74312 7.29723C3.71826 7.24142 3.68155 7.19324 3.63526 7.14706C3.44241 6.95463 3.15081 6.95463 2.95796 7.14706C2.91168 7.19325 2.87496 7.24142 2.85011 7.29723C2.82515 7.35326 2.81328 7.41442 2.81328 7.48513C2.81328 7.58401 2.86129 7.72674 2.95796 7.8232Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M4.63988 7.00273C4.49855 7.00273 4.37687 7.04996 4.29039 7.13625C4.2039 7.22255 4.15654 7.34401 4.15654 7.48513C4.15654 7.62624 4.2039 7.74771 4.29039 7.83401C4.37687 7.9203 4.49855 7.96752 4.63988 7.96752C4.93058 7.96752 5.12321 7.72574 5.12321 7.48513C5.12321 7.34401 5.07585 7.22255 4.98936 7.13625C4.90288 7.04996 4.78121 7.00273 4.63988 7.00273Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n    </svg>\n  ),\n  FileMUI: <FileIcon />,\n  File: (\n    <svg\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 1024 1024\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M768 853.333h-512v-682.667h324.267l187.733 192v490.667zM298.667 810.667h426.667v-430.933l-162.133-166.4h-264.533v597.333z\"\n        fill=\"rgb(151, 151, 151)\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M554.667 213.333h42.667v174.933h-42.667z\"\n        fill=\"rgb(151, 151, 151)\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n      <path\n        d=\"M554.667 426.667v-42.667h213.333v42.667z\"\n        fill=\"rgb(151, 151, 151)\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.1\"\n      />\n    </svg>\n  ),\n  DbFile: (\n    <svg\n      width=\"17\"\n      height=\"22\"\n      viewBox=\"0 0 17 22\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.5077 4.99077L12.0612 0.497531C11.7762 0.209016 11.2769 0 10.8737 0H2.84888C1.2781 0 0 1.29155 0 2.87886V18.8685C0 20.4555 1.2781 21.7473 2.84888 21.7473H14.1511C15.7219 21.7473 17 20.4555 17 18.8685V6.19099C17 5.78359 16.7932 5.2788 16.5077 4.99077ZM11.9139 2.02951L14.9916 5.13938H12.456C12.1571 5.13938 11.9139 4.89388 11.9139 4.59183V2.02951ZM15.8233 18.8687C15.8233 19.8005 15.0729 20.5587 14.1511 20.5587H2.84888C1.92683 20.5587 1.17671 19.8005 1.17671 18.8687V2.87886C1.17671 1.94687 1.92683 1.18885 2.84888 1.18885H10.737V4.59207C10.737 5.54968 11.5084 6.32872 12.4558 6.32872H15.8231V18.8687H15.8233Z\"\n        fill=\"#4CBFA5\"\n      />\n      <path\n        d=\"M5 10.7588V15.7122C5 16.8848 6.73209 17.4952 8.44221 17.4952C10.1523 17.4952 11.8844 16.8814 11.8844 15.7122V10.7588C11.8844 8.41373 5 8.41373 5 10.7588ZM11.0713 15.7122C11.0713 16.0306 10.1434 16.6462 8.44302 16.6462C6.74267 16.6462 5.81477 16.0272 5.81477 15.7122V14.425C6.62985 14.8482 7.53209 15.0561 8.44221 15.0304C9.3526 15.0562 10.2551 14.8484 11.0705 14.425L11.0713 15.7122ZM11.0713 13.2449C11.0713 13.5633 10.1434 14.1788 8.44302 14.1788C6.74267 14.1788 5.81477 13.5599 5.81477 13.2449V11.9399C6.62982 12.3631 7.53208 12.571 8.44221 12.5452C9.35261 12.5711 10.2552 12.3632 11.0705 11.9399L11.0713 13.2449ZM8.44221 11.6962C6.86233 11.6962 5.81395 11.1316 5.81395 10.7622C5.81395 10.4438 6.74186 9.82825 8.44221 9.82825C10.1426 9.82825 11.0705 10.4472 11.0705 10.7622C11.0705 11.1316 10.0221 11.6962 8.44221 11.6962Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n    </svg>\n  ),\n  DbFolder: (\n    <svg\n      width=\"23\"\n      height=\"20\"\n      viewBox=\"0 0 23 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.55 9.04961H13.95C13.7564 9.04961 13.6 8.89281 13.6 8.69961C13.6 8.50641 13.7564 8.34961 13.95 8.34961H19.55C19.7435 8.34961 19.9 8.50641 19.9 8.69961C19.9 8.89281 19.7435 9.04961 19.55 9.04961Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.55 10.45H16.75C16.5565 10.45 16.4 10.2932 16.4 10.1C16.4 9.9068 16.5565 9.75 16.75 9.75H19.55C19.7436 9.75 19.9 9.9068 19.9 10.1C19.9 10.2932 19.7436 10.45 19.55 10.45Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.7 6.25H21.3V4.5C21.3 4.11395 20.986 3.8 20.6 3.8H8.53235C8.30975 3.8 8.10185 3.70025 7.9629 3.5263L6.6063 1.83055C6.5398 1.7476 6.44075 1.7 6.33435 1.7H2.4C2.01395 1.7 1.7 2.01395 1.7 2.4V6.25ZM21.65 6.95H1.35C1.15645 6.95 1 6.7932 1 6.6V2.4C1 1.6279 1.6279 1 2.4 1H6.33435C6.65425 1 6.9528 1.1435 7.15265 1.3934L8.50925 3.0888L20.6 3.1C21.3721 3.1 22 3.7279 22 4.5V6.6C22 6.7932 21.8435 6.95 21.65 6.95Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.55 10.7996C3.05905 10.7996 1.7 11.4933 1.7 11.8496C1.7 12.2059 3.05905 12.8996 5.55 12.8996C8.04095 12.8996 9.4 12.2059 9.4 11.8496C9.4 11.4933 8.04095 10.7996 5.55 10.7996ZM5.55 13.5996C3.289 13.5996 1 12.9987 1 11.8496C1 10.7006 3.289 10.0996 5.55 10.0996C7.811 10.0996 10.1 10.7006 10.1 11.8496C10.1 12.9987 7.811 13.5996 5.55 13.5996Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.7 17.0275V18.1492C1.7 18.5055 3.05905 19.1992 5.55 19.1992C8.04095 19.1992 9.4 18.5055 9.4 18.1492V17.0275C7.70005 18.046 3.39995 18.046 1.7 17.0275ZM5.55 19.8992C3.289 19.8992 1 19.2983 1 18.1492V16.0492C1 15.856 1.15645 15.6992 1.35 15.6992C1.54355 15.6992 1.7 15.856 1.7 16.0492C1.7 16.4055 3.05905 17.0992 5.55 17.0992C8.04095 17.0992 9.4 16.4055 9.4 16.0492C9.4 15.856 9.55645 15.6992 9.75 15.6992C9.94355 15.6992 10.1 15.856 10.1 16.0492V18.1492C10.1 19.2983 7.811 19.8992 5.55 19.8992Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.75 16.3996C9.55645 16.3996 9.4 16.2428 9.4 16.0496V14.9279C7.70005 15.9464 3.39995 15.9464 1.7 14.9279V16.0496C1.7 16.2428 1.54355 16.3996 1.35 16.3996C1.15645 16.3996 1 16.2428 1 16.0496V13.9496C1 13.7564 1.15645 13.5996 1.35 13.5996C1.54355 13.5996 1.7 13.7564 1.7 13.9496C1.7 14.3059 3.05905 14.9996 5.55 14.9996C8.04095 14.9996 9.4 14.3059 9.4 13.9496C9.4 13.7564 9.55645 13.5996 9.75 13.5996C9.94355 13.5996 10.1 13.7564 10.1 13.9496V16.0496C10.1 16.2428 9.94355 16.3996 9.75 16.3996Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.75002 14.3C9.55647 14.3 9.40002 14.1432 9.40002 13.95V11.85C9.40002 11.6568 9.55647 11.5 9.75002 11.5C9.94357 11.5 10.1 11.6568 10.1 11.85V13.95C10.1 14.1432 9.94357 14.3 9.75002 14.3Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.35 14.3C1.15645 14.3 1 14.1432 1 13.95V11.85C1 11.6568 1.15645 11.5 1.35 11.5C1.54355 11.5 1.7 11.6568 1.7 11.85V13.95C1.7 14.1432 1.54355 14.3 1.35 14.3Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.6 18.5H9.75C9.55645 18.5 9.4 18.3432 9.4 18.15C9.4 17.9568 9.55645 17.8 9.75 17.8H20.6C20.986 17.8 21.3 17.486 21.3 17.1V4.5C21.3 4.11395 20.986 3.8 20.6 3.8H8.53235C8.30975 3.8 8.10185 3.70025 7.9629 3.5263L6.6063 1.83055C6.5398 1.7476 6.44075 1.7 6.33435 1.7H2.4C2.01395 1.7 1.7 2.01395 1.7 2.4V11.85C1.7 12.0432 1.54355 12.2 1.35 12.2C1.15645 12.2 1 12.0432 1 11.85V2.4C1 1.6279 1.6279 1 2.4 1H6.33435C6.65425 1 6.9528 1.1435 7.15265 1.3934L8.50925 3.0888L20.6 3.1C21.3721 3.1 22 3.7279 22 4.5V17.1C22 17.8721 21.3721 18.5 20.6 18.5Z\"\n        fill=\"#4CBFA5\"\n        stroke=\"#4CBFA5\"\n        strokeWidth=\"0.2\"\n      />\n    </svg>\n  )\n};\n","import moment from \"moment\";\nexport function formatBytes(a, b) {\n    if (!a) {\n      return `0 GB`;\n    }\n    if (0 == a) return \"0 GB\";\n    let c = 1024,\n      d = b || 2,\n      e = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"],\n      f = Math.floor(Math.log(a) / Math.log(c));\n    return parseFloat((a / Math.pow(c, f)).toFixed(d)) + \" \" + e[f];\n  }\n\n  export function getBrowserLocale() {\n    let lang;\n    if (navigator.languages && navigator.languages.length) {\n      lang = navigator.languages[0]; // latest versions of Chrome and Firefox set this correctly\n    } else if (navigator.userLanguage) {\n      lang = navigator.userLanguage; // IE only\n    } else {\n      lang = navigator.language; // latest versions of Chrome, Firefox, and Safari set this correctly\n    }\n    return lang;\n  }\n  \n  export const getLocaleDate = (timestamp, format, convertTS = true, lang) => {\n    let locale = lang ? lang : getBrowserLocale();\n    locale && moment.locale(locale);\n    /*let ts = convertTS ? convertUTCtimestamp(timestamp) : timestamp;\n    ts = parseInt(ts, 10);\n    let formattedTime = ts && isNumber(ts) ? moment.unix(ts) : moment.unix();\n    let time = format\n      ? formattedTime.format(format)\n      : formattedTime.format(\"lll\");*/\n  \n    return moment.unix(timestamp).format(format ? format : \"lll\");\n  };","import _, { isNumber } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport DataGridConstants from \"./DataGridConstants\";\nimport Icon from \"../../../assets/icons/icons\";\nimport ActionDropdown from \"../action-dropdown-mui\";\nimport HeaderDropdown from \"./HeaderDropdown\";\nimport Overlay from \"../overlay-mui\";\nimport FormattedMessage from \"../formatted-message\";\n// import ProgressBarComponent from \"../progress-bar\";\nimport ProfileImgUrl from \"../../../assets/images/Profile_icon.png\";\nimport SelectDropdown from \"../select-dropdown-mui\";\nimport { Icons } from \"./Icons\";\nimport {\n  JobNameMapping,\n  JobStatus,\n  PAGE_ROUTE,\n  ACTION_TYPE,\n  RECOVERD_VMS_LOADING_STATES,\n  CD_RECOVER_POINT_BROWSE_CURRENT_RP_NAME,\n  PROXY_ROLES,\n  SECONDARY_NAVIGATION_TYPE,\n  JOB_TYPES_HIDE_PROGRESS_BAR,\n  JOB_STATUS\n} from \"../../../utils/appConstants\";\nimport { getLocaleDate, formatBytes } from \"../../../utils/SpogDataGridUtil\";\n\nconst GridColumnCellTypes = DataGridConstants.GridColumnCellTypes;\nconst GridColumnHeaderTypes = DataGridConstants.GridColumnHeaderTypes;\nconst OverlayTypes = DataGridConstants.OverlayTypes;\nconst GridColumnCellWidth = DataGridConstants.GridColumnCellWidth;\nconst GridColumnStatusTypes = DataGridConstants.GridColumnStatusTypes;\n\n/**\n * Common helper to build & render data-grid definitions\n */\nconst DataGridHelper = {\n\n\n  /**\n   * Returns columnData with displayIdentifier key for i18n support\n   * @param columnConfigurations\n   * @param {[{accessor: string, displayIdentifier: string, renderHeader: {}, renderRecord: {}, settings: {}]} columnSpecifications\n   * @returns {*} columnConfigurations\n   */\n  getColumnData(columnConfigurations, columnSpecifications) {\n    columnConfigurations &&\n      columnConfigurations.forEach(column => {\n        column[\"displayIdentifier\"] = this.getColumnDefinition(\n          columnSpecifications,\n          column.identifier\n        )\n          ? this.getColumnDefinition(columnSpecifications, column.identifier)\n              .displayIdentifier\n          : column.identifier;\n      });\n    return columnConfigurations;\n  },\n\n  /**\n   * Returns the column definition for requested identifier.\n   * @param {*} columnData\n   * @param {*} columnIdentifier\n   */\n  getColumnDefinition(columnData, columnIdentifier) {\n    return columnData.find(columnDefinition => {\n      return columnDefinition.accessor === columnIdentifier;\n    });\n  },\n\n  getCCDataGridColumnDefinitions(columnConfigurations, columnData) {\n    let columnDefinitions = [];\n    columnConfigurations\n      .filter(column => column.show)\n      .forEach(column => {\n        let columnObj = this.getColumnDefinition(columnData, column.identifier);\n        if (columnObj) {\n          if (column.width) {\n            columnObj.settings.width = parseInt(column.width);\n          }\n          if (\n            column.sort !== null &&\n            column.sort !== undefined &&\n            columnObj.settings\n          ) {\n            columnObj.settings.sortable = column.sort;\n          }\n          let t = this.buildColumnRenderSchema(\n            column,\n            this.getColumnDefinition(columnData, column.identifier),\n            {\n              sortHandler: this.sortHandler\n            }\n          );\n          columnDefinitions.push(t);\n        }\n      });\n    return columnDefinitions;\n  },\n\n  /**\n   * Get column definitions to be rendered by {@link SpogDataGrid}\n   * @param {*} columnConfigurations\n   * @param {[{accessor: string, displayIdentifier: string, renderHeader: {}, renderRecord: {}, settings: {}]} columnSpecifications\n   * @param {sortHandler:()=>{}, actionsHandler:()=>{}} callback\n   */\n  getColumnDefinitions(columnConfigurations, columnSpecifications, callback) {\n    let columnDefinitions = [];\n    columnConfigurations &&\n      columnConfigurations\n        .filter(column => column.show)\n        .forEach(column => {\n          let columnDef = _.cloneDeep(\n            this.getColumnDefinition(columnSpecifications, column.identifier)\n          );\n          if (columnDef) {\n            if (column.width && columnDef.settings) {\n              columnDef.settings.width = parseInt(column.width);\n            }\n            if (columnDef.settings) {\n              columnDef.settings.sortable = column.sort;\n              columnDef.settings.disableSortBy = column.sort === false;\n            }\n            columnDefinitions.push(\n              this.buildColumnRenderSchema(column, columnDef, callback)\n            );\n          }\n        });\n    return columnDefinitions;\n  },\n\n  /**\n   * Builds the column rendering schema for requested definition\n   * @param {*} columnData\n   * @param {*} columnDefinition\n   * @param {*} columnDefinition\n   * @param {sortHandler:()=>{}, actionsHandler:()=>{}} callback\n   *\n   */\n  buildColumnRenderSchema(columnData, columnDefinition, callback) {\n    const columnHeader = renderHeaderForType(\n      columnDefinition.renderHeader.type,\n      {\n        value: columnData.identifier,\n        displayIdentifier: columnDefinition.displayIdentifier,\n        defaultDisplayMessage: columnDefinition.defaultDisplayMessage,\n        addtionalOptions: columnDefinition.renderHeader.additionOptions\n          ? columnDefinition.renderHeader.additionOptions\n          : [],\n        sortCallback: columnDefinition.renderHeader.customSort\n          ? callback[\"sortHandler\"]\n          : undefined\n      }\n    );\n    const columnCell = renderCellForType(columnDefinition.renderRecord.type, {\n      sortCallback: columnDefinition.renderRecord.actionDropdown\n        ? callback\n          ? callback[\"actionsHandler\"]\n          : undefined\n        : undefined,\n      editInputCallback: columnDefinition.renderRecord.editInput\n        ? callback[\"editInputHandler\"]\n        : undefined,\n      editDropdownCallback: columnDefinition.renderRecord.editDropdown\n        ? callback[\"editDropdownHandler\"]\n        : undefined,\n      multiSelectCallback: columnDefinition.renderRecord.multiSelect\n        ? callback[\"multiSelectHandler\"]\n        : undefined,\n      radioButtonCallback: columnDefinition.renderRecord.radioSelected\n        ? callback[\"radioButtonSelectHandler\"]\n        : undefined,\n      buttonActionCallback: columnDefinition.renderRecord.buttonAction\n        ? callback[\"buttonActionsHandler\"]\n        : undefined\n    });\n\n    const columnCellWidth = setCellWidthForType(\n      columnDefinition.renderRecord.type\n    );\n    const columnHeaderClass = setClassForHeaderType(\n      columnDefinition.renderHeader.type\n    );\n    const columnSortClass = setClassForHeaderType(\n      columnData.sort ||\n        (columnDefinition.settings && columnDefinition.settings.sortable)\n        ? \"CHECKSORTTRUE\"\n        : \"SORTFALSE\"\n    );\n\n    if (columnHeader && columnCell) {\n      return {\n        id: columnData.identifier,\n        accessor: columnDefinition.accessor,\n        Header: columnHeader,\n        sortMethod:\n          columnDefinition.settings && columnDefinition.settings.sortMethod\n            ? columnDefinition.settings.sortMethod\n            : () => columnDefinition.accessor,\n        Cell: columnCell,\n        ...columnCellWidth,\n        ...columnHeaderClass,\n        ...columnDefinition.settings,\n        ...columnSortClass\n      };\n    } else {\n      return null;\n    }\n  },\n\n\n};\n\n/**\n * Returns a {@link Component} or a function to be rendered/invoked\n * for requested cell type.\n * @param {*} type\n * @param {*} data\n */\nconst renderCellForType = (type, data) => {\n  switch (type) {\n    case GridColumnCellTypes.CHECKBOX_CELL:\n      return renderCellForCheckbox(data);\n    // case GridColumnCellTypes.ICON_CELL:\n    //   return renderCellForIcon(data);\n    case GridColumnCellTypes.ICON_CELL_MUI:\n      return renderCellForIconMUI(data);\n    case GridColumnCellTypes.LINK_CELL:\n      return renderCellForLink(data);\n    case GridColumnCellTypes.LINK_CELL_MUI:\n      return renderCellForLinkMUI(data);\n    case GridColumnCellTypes.LINK_CELL_WITH_ICON:\n      return renderCellForLinkWithIcon(data);\n    case GridColumnCellTypes.EXTERNAL_LINK_CELL:\n      return renderCellForExternalLink(data);\n    // case GridColumnCellTypes.OVERLAY_CELL:\n    //   return renderCellForOverlay(data);\n    case GridColumnCellTypes.SHORT_TEXT_CELL:\n      return renderCellForShortText(data);\n    case GridColumnCellTypes.SHORT_TEXT_CELL_MUI:\n      return renderCellForShortTextMUI(data);\n    case GridColumnCellTypes.NUMERICAL_TEXT_CELL:\n      return renderCellForNumericalText(data);\n    case GridColumnCellTypes.LONG_TEXT_CELL:\n      return renderCellForLongText(data);\n    case GridColumnCellTypes.LONG_TEXT_CELL_MUI:\n      return renderCellForLongTextMUI(data);\n    case GridColumnCellTypes.HOVER_CELL:\n      return renderCellForHoverText(data);\n    case GridColumnCellTypes.ACTION_DROPDOWN_CELL:\n      return renderCellForActionDropdown(data);\n    case GridColumnCellTypes.ICON_TEXT_CELL:\n      return renderCellForIconText(data);\n    case GridColumnCellTypes.MULTILINE_TEXT_CELL:\n      return renderCellForMultilineText(data);\n    case GridColumnCellTypes.TWOLINE_TEXT_CELL:\n      return renderCellForTwolineText(data);\n    case GridColumnCellTypes.TWOLINE_TEXT_CELL_MUI:\n      return renderCellForTwolineTextMUI(data);\n    // case GridColumnCellTypes.PROGRESS_TEXT_CELL:\n    //   return renderCellForProgressText(data);\n    case GridColumnCellTypes.DATE_TIME_CELL:\n      return renderCellForDateTime(data);\n    // case GridColumnCellTypes.MULTI_TYPE:\n    //   return renderCellForMutiType(data);\n    case GridColumnCellTypes.IMAGE_CELL:\n      return renderCellForImage(data);\n    case GridColumnCellTypes.EDIT_DROPDOWN_CELL:\n      return renderCellForEditDropdown(data);\n    case GridColumnCellTypes.MULTI_SELECT_DROPDOWN_CELL:\n      return renderCellForMultiSelectDropdown(data);\n    case GridColumnCellTypes.ID_VALUE_CELL:\n      return renderCellForIdValue(data);\n    case GridColumnCellTypes.SINGLE_SELECT_DROPDOWN_CELL:\n      return renderCellForSingleSelectDropdown(data);\n    // case GridColumnCellTypes.SINGLE_SELECT_SCROLL_DROPDOWN_CELL:\n    //   return renderCellForSingleScrollSelectDropdown(data);\n    case GridColumnCellTypes.INPUT_CELL:\n      return renderCellForInput(data);\n    case GridColumnCellTypes.RADIO_BUTTON_CELL:\n      return renderCellForRadioButton(data);\n    case GridColumnCellTypes.EMPTY_TEXT_CELL:\n      return renderCellForEmptyText(data);\n    // case GridColumnCellTypes.LATEST_JOB_LINK_CELL:\n    //   return renderCellForLatestJob(data);\n    // case GridColumnCellTypes.LATEST_JOB_TEXT_CELL:\n    //   return renderCellForLatestJob(data, true);\n    // case GridColumnCellTypes.RENDER_DESTINATION_OVERLAY_CELL:\n    //   return renderCellForDestinationOverlay(data);\n    // case GridColumnCellTypes.RENDER_POLICY_OVERLAY_CELL:\n    //   return renderCellForPolicyOverlay(data);\n    // case GridColumnCellTypes.RENDER_POLICY_OVERLAY_CELL_WITHOUT_LINK:\n    //   return renderCellForImpersonatePolicyOverlay(data);\n    // case GridColumnCellTypes.RENDER_ROLE_OVERLAY_CELL:\n    //   return renderCellForRoleOverlay(data);\n    case GridColumnCellTypes.WRAPPED_CELL:\n      return renderCellForWrappedText(data);\n    case GridColumnCellTypes.WRAPPED_CELL_WITH_HYPERLINK:\n      return renderCellForWrappedTextWithHyperlink(data);\n    case GridColumnCellTypes.STATE_LOADER_CELL:\n      return renderCellForStateLoader(data);\n    case GridColumnCellTypes.COMPONENT_CELL:\n      return renderCellForComponent(data);\n    case GridColumnCellTypes.ICON_LINK_CELL:\n      return renderCellForIconLink(data);\n    case GridColumnCellTypes.CELL_ICON:\n      return renderIconCell(data);\n    case GridColumnCellTypes.FORMATTED_LOCALIZED_TEXT_CELL:\n      return renderFormattedLocalizedTextCell(data);\n    case GridColumnCellTypes.BYTE_CELL:\n      return renderByteCell(data);\n    case GridColumnCellTypes.BYTE_CELL_MUI:\n      return renderByteCellMUI(data);\n    case GridColumnCellTypes.JOB_TYPE_CELL:\n      return renderCellForJobType(data);\n    case GridColumnCellTypes.BUTTON_ACTION:\n      return renderCellForActionButton(data);\n    case GridColumnCellTypes.DURATION:\n      return renderCellForDuration(data);\n    default:\n      return null;\n  }\n};\n\n/**\n * Return a {@link Component} to be rendered for requested header type.\n * @param {*} type\n * @param {*} data\n */\nconst renderHeaderForType = (type, data) => {\n  switch (type) {\n    case GridColumnHeaderTypes.HEADER_TEXT:\n      return renderHeaderForText(data);\n    case GridColumnHeaderTypes.HEADER_SELECT:\n      return renderHeaderForSelect(data);\n    case GridColumnHeaderTypes.HEADER_TEXT_SELECT:\n      return renderHeaderForTextSelect(data);\n    case GridColumnHeaderTypes.HEADER_TEXT_MUI:\n      return renderHeaderForTextMUI(data);\n    default:\n      return null;\n  }\n};\n\n/**\n * Returns styles to be applied for requested cell type.\n * @param {*} type\n */\nconst setCellWidthForType = type => {\n  switch (type) {\n    case GridColumnCellTypes.CHECKBOX_CELL:\n      return setCellWidthForCheckbox(type);\n    case GridColumnCellTypes.ICON_CELL:\n      return setCellWidthForIcon(type);\n    case GridColumnCellTypes.LINK_CELL:\n    case GridColumnCellTypes.EXTERNAL_LINK_CELL:\n      return setCellWidthForLink(type);\n    // case GridColumnCellTypes.OVERLAY_CELL:\n    //   return setCellWidthForOverlay(type);\n    // case GridColumnCellTypes.SHORT_TEXT_CELL:\n    //   return setCellWidthForShortText(type);\n    // case GridColumnCellTypes.NUMERICAL_TEXT_CELL:\n    //   return setCellWidthForNumericalText(type);\n    // case GridColumnCellTypes.LONG_TEXT_CELL:\n    //   return setCellWidthForLongText(type);\n    case GridColumnCellTypes.ACTION_DROPDOWN_CELL:\n      return setCellWidthForActionDropdown(type);\n    // case GridColumnCellTypes.ICON_TEXT_CELL:\n    //   return setCellWidthForIconText(type);\n    // case GridColumnCellTypes.MULTILINE_TEXT_CELL:\n    //   return setCellWidthForMultiLineText(type);\n    // case GridColumnCellTypes.IMAGE_CELL:\n    //   return setCellWidthForImage();\n    case GridColumnCellTypes.PROGRESS_TEXT_CELL:\n      return setCellWidthForProgressText(type);\n    case GridColumnCellTypes.EDIT_DROPDOWN_CELL:\n      return setCellWidthForEditDropdown(type);\n    case GridColumnCellTypes.MULTI_SELECT_DROPDOWN_CELL:\n      return setCellWidthForMultiSelectDropdown(type);\n    case GridColumnCellTypes.ID_VALUE_CELL:\n      return setCellWidthForIdValue(type);\n    case GridColumnCellTypes.DATE_TIME_CELL:\n      return setCellWidthForDateTime(type);\n    case GridColumnCellTypes.SINGLE_SELECT_DROPDOWN_CELL:\n      return setCellWidthForSingleSelectDropdown(type);\n    case GridColumnCellTypes.INPUT_CELL:\n      return setCellForInput(type);\n    case GridColumnCellTypes.RADIO_BUTTON_CELL:\n      return setCellForRadioButton(type);\n    case GridColumnCellTypes.EMPTY_TEXT_CELL:\n      return setCellWidthForEmptyText(type);\n    case GridColumnCellTypes.BUTTON_ACTION:\n      return setCellWidthForActionButton(type);\n    default:\n      return null;\n  }\n};\n\n/**\n * Return a {@link Component} to be rendered for requested header type.\n * @param {*} type\n * @param {*} data\n */\nconst setClassForHeaderType = type => {\n  switch (type) {\n    case GridColumnHeaderTypes.HEADER_SELECT:\n      return setClassForSelectHeader();\n    case GridColumnHeaderTypes.HEADER_TEXT_SELECT:\n      return setClassForTextSelectHeader();\n    case \"CHECKSORTTRUE\":\n      return setSortTrueFalseValue();\n    default:\n      return null;\n  }\n};\n\n/**\n * Returns width & minWidth for checkbox cell.\n */\nconst setCellWidthForCheckbox = () => {\n  return {\n    width: GridColumnCellWidth.CHECKBOX_CELL,\n    minWidth: GridColumnCellWidth.CHECKBOX_CELL\n  };\n};\n\n/**\n * Returns width & minWidth for Icon cell.\n */\nconst setCellWidthForIcon = () => {\n  return {\n    width: GridColumnCellWidth.ICON_CELL,\n    minWidth: GridColumnCellWidth.ICON_CELL\n  };\n};\n\n/**\n * Returns width & minWidth for Link cell.\n */\nconst setCellWidthForLink = () => {\n  return {\n    //width: GridColumnCellWidth.LINK_CELL,\n    minWidth: GridColumnCellWidth.LINK_CELL,\n    className: \"link-cell\"\n  };\n};\n\n/**\n * Returns width, minWidth and set class\n * to header and cell for overlay.\n */\n// const setCellWidthForOverlay = () => {\n//   return {\n//     width: GridColumnCellWidth.OVERLAY_CELL,\n//     minWidth: GridColumnCellWidth.OVERLAY_CELL,\n//     className: \"link-cell\",\n//     maxWidth: GridColumnCellWidth.OVERLAY_CELL_MAX\n//   };\n// };\n\n/**\n * Returns width & minWidth for short text cell.\n */\n// const setCellWidthForShortText = () => {\n//   return {\n//     width: GridColumnCellWidth.SHORT_TEXT_CELL,\n//     minWidth: GridColumnCellWidth.SHORT_TEXT_CELL\n//   };\n// };\n\n/**\n * Returns width & minWidth for empty text cell.\n */\nconst setCellWidthForEmptyText = () => {\n  return {\n    width: GridColumnCellWidth.EMPTY_TEXT_CELL,\n    minWidth: GridColumnCellWidth.EMPTY_TEXT_CELL\n  };\n};\n\n/**\n * Returns width & minWidth for short text cell.\n */\n// const setCellWidthForNumericalText = () => {\n//   return {\n//     width: GridColumnCellWidth.NUMERICAL_TEXT_CELL,\n//     minWidth: GridColumnCellWidth.NUMERICAL_TEXT_CELL\n//   };\n// };\n\n// /**\n//  *  Returns width & minWidth for long text cell.\n//  */\n// const setCellWidthForLongText = () => {\n//   return {\n//     width: GridColumnCellWidth.LONG_TEXT_CELL,\n//     minWidth: GridColumnCellWidth.LONG_TEXT_CELL\n//   };\n// };\n\n// /**\n//  *  Returns width, minWidth for action dropdown cell.\n//  */\nconst setCellWidthForActionDropdown = () => {\n  return {\n    width: GridColumnCellWidth.ACTION_DROPDOWN_CELL,\n    minWidth: GridColumnCellWidth.ACTION_DROPDOWN_CELL\n  };\n};\n\n// /**\n//  *  Returns width, minWidth & class for icon text cell.\n//  */\n// const setCellWidthForIconText = () => {\n//   return {\n//     width: GridColumnCellWidth.ICON_TEXT_CELL,\n//     minWidth: GridColumnCellWidth.ICON_TEXT_CELL,\n//     className: \"icon-text-cell\"\n//   };\n// };\n\n// /**\n//  *  Returns width, minWidth and class for multi line text cell.\n//  */\n// const setCellWidthForMultiLineText = () => {\n//   return {\n//     width: GridColumnCellWidth.MULTILINE_TEXT_CELL,\n//     minWidth: GridColumnCellWidth.MULTILINE_TEXT_CELL,\n//     className: \"multi-line-text\"\n//   };\n// };\n\n/**\n *  Returns width & minWidth for progress bar cell.\n */\nconst setCellWidthForProgressText = () => {\n  return {\n    width: GridColumnCellWidth.PROGRESS_TEXT_CELL,\n    minWidth: GridColumnCellWidth.PROGRESS_TEXT_CELL\n  };\n};\n\n/**\n *  Returns width & minWidth for progress bar cell.\n */\nconst setCellWidthForEditDropdown = () => {\n  return {\n    width: GridColumnCellWidth.EDIT_DROPDOWN_CELL,\n    minWidth: GridColumnCellWidth.EDIT_DROPDOWN_CELL,\n    headerClassName: \"no-ellipsis\",\n    className: \"no-ellipsis\"\n  };\n};\n\n/**\n *  Returns width & minWidth for image cell.\n */\n// const setCellWidthForImage = () => {\n//   return {\n//     width: GridColumnCellWidth.IMAGE_CELL,\n//     minWidth: GridColumnCellWidth.IMAGE_CELL\n//   };\n// };\n\n/**\n *  Returns width & minWidth for multi select dropdown\n */\nconst setCellWidthForMultiSelectDropdown = () => {\n  return {\n    width: GridColumnCellWidth.MULTI_SELECT_DROPDOWN_CELL,\n    minWidth: GridColumnCellWidth.MULTI_SELECT_DROPDOWN_CELL,\n    headerClassName: \"no-ellipsis\",\n    className: \"no-ellipsis\"\n  };\n};\n\n/**\n *  Returns width & minWidth for single select dropdown\n */\nconst setCellWidthForSingleSelectDropdown = () => {\n  return {\n    width: GridColumnCellWidth.MULTI_SELECT_DROPDOWN_CELL,\n    minWidth: GridColumnCellWidth.MULTI_SELECT_DROPDOWN_CELL,\n    headerClassName: \"no-ellipsis\",\n    className: \"no-ellipsis\"\n  };\n};\n\n/**\n *  Returns width & minWidth for input\n */\nconst setCellForInput = () => {\n  return {\n    width: GridColumnCellWidth.INPUT_CELL,\n    minWidth: GridColumnCellWidth.INPUT_CELL\n  };\n};\n\n/**\n *  Returns width & minWidth for radio button\n */\nconst setCellForRadioButton = () => {\n  return {\n    width: GridColumnCellWidth.RADIO_BUTTON_CELL,\n    minWidth: GridColumnCellWidth.RADIO_BUTTON_CELL\n  };\n};\n\n/**\n *  Returns width & minWidth for progress bar cell.\n */\nconst setCellWidthForIdValue = () => {\n  return {\n    width: GridColumnCellWidth.ID_VALUE_CELL,\n    minWidth: GridColumnCellWidth.ID_VALUE_CELL\n  };\n};\n\n/**\n * Returns width & minWidth for date time cell.\n */\nconst setCellWidthForDateTime = () => {\n  return {\n    width: GridColumnCellWidth.DATE_TIME_CELL,\n    minWidth: GridColumnCellWidth.DATE_TIME_CELL\n  };\n};\n\n/**\n * Set class to header and cell for select type.\n */\nconst setClassForSelectHeader = () => {\n  return {\n    headerClassName: \"no-ellipsis\",\n    className: \"no-ellipsis\",\n    resizable: false\n  };\n};\n\n/**\n * Set class to header and cell for text select type.\n */\nconst setClassForTextSelectHeader = () => {\n  return {\n    headerClassName: \"ellipsis\",\n    className: \"ellipsis\",\n    resizable: true\n  };\n};\n\n/**\n * Set class to header and cell for text select type.\n */\nconst setSortTrueFalseValue = () => {\n  return {\n    headerClassName: \"active-sort\",\n    className: \"active-sort\",\n    resizable: true\n  };\n};\n\n/**\n * Returns cell rendering function for checkbox.\n */\nconst renderCellForCheckbox = () => {\n  return cell => (\n    <div>\n      <input id={cell.original.id} type=\"checkbox\" />\n      <label htmlFor={cell.original.id} />\n    </div>\n  );\n};\n\n/**\n * Return cell rendering function for date/time\n */\nconst renderCellForDateTime = () => {\n  return cell => {\n    if (cell.value && cell.value.dateString) {\n      let ts = cell.value.dateString;\n      if (cell.value.dateString === CD_RECOVER_POINT_BROWSE_CURRENT_RP_NAME) {\n        return (\n          <FormattedMessage id={CD_RECOVER_POINT_BROWSE_CURRENT_RP_NAME} />\n        );\n      } else {\n        return (\n          <div>\n            <span>\n              {getLocaleDate(ts, \"L\", false)} {getLocaleDate(ts, \"LT\", false)}\n            </span>\n            {cell.value && cell.value.timeDiff && (\n              <div className=\"date-diff\">{cell.value.timeDiff}</div>\n            )}\n          </div>\n        );\n      }\n    } else return \"-\";\n  };\n};\n\n/**\n * Returns cell rendering function for {@link Icon}.\n */\n\nconst renderCellForIconMUI = () => {\n  return cell => {\n    if (cell.value === \"loading-status\") {\n      return loadingBar();\n    } else {\n      let overlayData = cell.value\n        ? cell.value.text\n          ? cell.value.text\n          : typeof cell.value !== \"object\"\n          ? cell.value\n          : null\n        : null;\n      let iconClass = cell.value\n        ? cell.value.iconClass\n          ? cell.value.iconClass\n          : overlayData\n        : null;\n      if ((overlayData === \"-\" && iconClass === \"-\") || iconClass === \"-\")\n        return \"-\";\n      if (iconClass === \"rps_success\") iconClass = \"success\";\n      if (_.get(cell, \"value.hideOverlay\")) {\n        return iconClass ? (\n          <Icon icon={iconClass} style={{ height: \"30px\", width: \"30px\" }} />\n        ) : (\n          \"-\"\n        );\n      }\n      if (iconClass == \"loading-status\" || iconClass === \"deploying\") {\n        return (\n          <span>\n            <div className=\"state-loading\">\n              {\" \"}\n              &nbsp;\n              <div className=\"state-loading-bar\" />\n              <div className=\"state-loading-bar\" />\n              <div className=\"state-loading-bar\" />\n            </div>\n          </span>\n        );\n      } else {\n        return overlayData && overlayData !== \"\" ? (\n            <></>\n        //   <Overlay\n        //     type={OverlayTypes.TOOLTIP}\n        //     placement={cell.value && cell.value.placement}\n        //     className={cell.column.id === \"ivm_status\" ? \"ivm-tooltip\" : \"\"}\n        //     overlayData={\n        //       overlayData && cell.column.id !== \"ivm_status\" ? (\n        //         <FormattedMessage\n        //           id={overlayData}\n        //           defaultMessage={overlayData}\n        //           values={cell.value && cell.value.values}\n        //         />\n        //       ) : cell.column.id === \"ivm_status\" ? (\n        //         overlayData\n        //       ) : (\n        //         \"\"\n        //       )\n        //     }\n        //     data={\n        //       iconClass ? (\n        //         <Icon\n        //           icon={iconClass}\n        //           style={{ height: \"30px\", width: \"30px\" }}\n        //         />\n        //       ) : (\n        //         \"-\"\n        //       )\n        //     }\n        //   />\n        ) : (\n          <Icon icon={iconClass} style={{ height: \"30px\", width: \"30px\" }} />\n        );\n      }\n    }\n  };\n};\n\n/**\n * Returns cell rendering function for link.\n */\nconst renderCellForLink = () => {\n  return cell => {\n    let label = \"-\";\n    if (cell.value) {\n      if (cell.value.label) {\n        label = cell.value.label;\n      } else if (typeof cell.value === \"string\") {\n        label = cell.value;\n      } else if (typeof cell.column.accessor === \"function\") {\n        label = cell.column.accessor(cell.original);\n      }\n    }\n    return cell.value &&\n      cell.value.label !== \"\" &&\n      cell.value.label !== null ? (\n      <Link\n        //id={`${cell.original.id}-${cell.column.id}`}\n        to={cell.value.href || \"#\"}\n        href={cell.value.href || \"#\"}\n        target={cell.value.target || \"_self\"}\n        className={\n          cell.value.isDisabledPerm || cell.value.key === \"isDisabledPerm\"\n            ? \"link-cell link-disabled-perm wordBreak\"\n            : cell.value.isDisabled\n            ? \"link-cell link-disabled wordBreak\"\n            : \"link-cell wordBreak\"\n        }\n      >\n        {cell.value && cell.value.iconClass ? (\n          <i className={cell.value.iconClass} />\n        ) : (\n          <span>{label}</span>\n        )}\n      </Link>\n    ) : (\n      \"-\"\n    );\n  };\n};\n\nconst renderCellForLinkMUI = () => {\n  return cell => {\n    let label = \"-\";\n    if (cell.value) {\n      if (cell.value.label) {\n        label = cell.value.label;\n      } else if (typeof cell.value === \"string\") {\n        label = cell.value;\n      } else if (typeof cell.column.accessor === \"function\") {\n        label = cell.column.accessor(cell.original);\n      }\n    }\n    return cell.value &&\n      cell.value.label !== \"\" &&\n      cell.value.label !== null ? (\n      <Link\n        id={`${cell.original ? cell.original.id : cell.row.original.id}-${\n          cell.column.id\n        }`}\n        to={cell.value.href || \"#\"}\n        href={cell.value.href || \"#\"}\n        target={cell.value.target || \"_self\"}\n        className={\n          cell.value.isDisabledPerm\n            ? \"link-cell link-disabled-perm wordBreak\"\n            : cell.value.isDisabled\n            ? \"link-cell link-disabled wordBreak\"\n            : \"link-cell wordBreak\"\n        }\n        style={{\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          display: \"block\"\n        }}\n      >\n        {cell.value && cell.value.iconClass ? (\n          <i className={cell.value.iconClass} style={{ color: \"#444\" }} />\n        ) : (\n          <span>{label}</span>\n        )}\n      </Link>\n    ) : (\n      \"-\"\n    );\n  };\n};\nconst renderCellForLinkWithIcon = () => {\n  return cell => {\n    let label = \"-\";\n    if (cell.value) {\n      if (cell.value.label) {\n        label = cell.value.label;\n      } else if (typeof cell.value === \"string\") {\n        label = cell.value;\n      } else if (typeof cell.column.accessor === \"function\") {\n        label = cell.column.accessor(cell.original);\n      }\n    }\n    return cell.value &&\n      cell.value.label !== \"\" &&\n      cell.value.label !== null ? (\n      <span>\n        {cell.value.icon ? (\n          <span\n            className=\"link-icon-text\"\n            style={{ width: \"14pt\", height: \"16pt\" }}\n          >\n            <></>\n            {/* <Overlay\n              type={OverlayTypes.TOOLTIP}\n              placement={\"bottom\"}\n              overlayData={\n                <FormattedMessage\n                  id={`protect.source.add.hypervisor.${cell.value.entity_type}`}\n                  defaultMessage={cell.value.entity_type}\n                />\n              }\n              data={<cell.value.icon />}\n            /> */}\n          </span>\n        ) : null}\n        <Link\n          id={`${cell.original.id}-${cell.column.id}`}\n          to={cell.value.href || \"#\"}\n          href={cell.value.href || \"#\"}\n          target={cell.value.target || \"_self\"}\n          className={\n            cell.value.isDisabledPerm\n              ? \"link-cell link-disabled-perm wordBreak\"\n              : cell.value.isDisabled\n              ? \"link-cell link-disabled wordBreak\"\n              : \"link-cell wordBreak\"\n          }\n        >\n          {cell.value && cell.value.iconClass ? (\n            <i className={cell.value.iconClass} />\n          ) : (\n            <span>{label}</span>\n          )}\n        </Link>\n      </span>\n    ) : (\n      \"-\"\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for link.\n */\nconst renderCellForExternalLink = () => {\n  return cell => {\n    let label = \"-\";\n\n    if (cell.value) {\n      if (cell.value.label) {\n        label = cell.value.label;\n      } else if (typeof cell.value === \"string\") {\n        label = cell.value;\n      } else if (typeof cell.column.accessor === \"function\") {\n        label = cell.column.accessor(cell.original);\n      }\n    }\n    return cell.value ? (\n      <a\n        id={`${cell.original.id}-${cell.column.id}`}\n        to={cell.value.href || \"javascript:void(0);\"}\n        href={cell.value.href || \"javascript:void(0);\"}\n        target={cell.value.target || \"_self\"}\n        className={cell.value.isDisabled ? \"link-disabled\" : \"\"}\n      >\n        {label}\n      </a>\n    ) : (\n      \"-\"\n    );\n  };\n};\n\n/**\n * Returns job status color based on status of job\n */\nconst handleJobStatusColor = status => {\n  switch (status) {\n    case JOB_STATUS.LICENSE_FAILED:\n    case JOB_STATUS.CANCELED:\n    case JOB_STATUS.CRASH:\n    case JOB_STATUS.FAILED:\n    case JOB_STATUS.MISSED:\n    case JOB_STATUS.STOP:\n      return {\n        color: \"red\"\n      };\n    case JOB_STATUS.SKIPPED:\n    case JOB_STATUS.INCOMPLETE:\n    case JOB_STATUS.WARNING:\n    case JOB_STATUS.WAITING:\n      return {\n        color: \"#eaa433\"\n      };\n    default:\n      return {\n        color: \"green\"\n      };\n  }\n};\n\nconst linkCellForDestination = (value, cell) => {\n  let linkToPath =\n    value.destinationType === \"datastore\"\n      ? `${PAGE_ROUTE.DATA_STORE}/${value.destinationId}/information`\n      : `${PAGE_ROUTE.DESTINATIONS}/${SECONDARY_NAVIGATION_TYPE.ARCSERVE_CLOUD}/${value.destinationId}/edit/information`;\n\n  return (\n    <div className=\"latest-job-popver-text\" id={cell.id}>\n      {value.isDisabledPerm === true ? (\n        <span className=\"disabled\">{value.destinationName}</span>\n      ) : (\n        <Link\n          to={{\n            pathname: linkToPath,\n            state: {\n              selectedResource: {\n                destination_id: value.destinationId,\n                destination_name: value.destinationName\n              }\n            }\n          }}\n          href={linkToPath}\n          onClick={() => {\n            if (value.organizationType === \"msp\") {\n              let customerData = {\n                customerOrgId:\n                  cell.obj.orgName && cell.obj.orgName.organization_id,\n                customerOrgName:\n                  cell.obj.orgName && cell.obj.orgName.organization_name,\n                customerOrgType:\n                  cell.obj.orgName && cell.obj.orgName.organization_type\n                    ? cell.obj.orgName && cell.obj.orgName.organization_type\n                    : \"\"\n              };\n            //   store.dispatch(impersonateCustomer(customerData));\n            }\n          }}\n        >\n          {value.destinationName}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nconst linkCellForPolicy = (value, index, readyOnlyView = false) => {\n  let linkToPath = `${PAGE_ROUTE.POLICIES}/${value.policyId}/${ACTION_TYPE.EDIT}/basics`;\n\n  // if (\n  //   value.hypervisorObj &&\n  //   value.hypervisorObj.hypervisor_id &&\n  //   value.hypervisorObj.hypervisor_id !== null\n  // ) {\n  //   linkToPath = `${PAGE_ROUTE.HYPERVISORS}/${\n  //     value.hypervisorObj.hypervisor_id\n  //   }/${ACTION_TYPE.EDIT}/information`;\n  // }\n\n  return (\n    <div className=\"latest-job-popver-text\" id={index}>\n      {readyOnlyView ? (\n        <span className=\"disabled\">{value.policyName}</span>\n      ) : (\n        <Link\n          to={{\n            pathname: linkToPath,\n            state: {\n              selectedResource: {\n                policy_id: value.policyId,\n                policy_name: value.policyName,\n                hypervisor_name:\n                  value.hypervisorObj && value.hypervisorObj.hypervisor_name\n                    ? value.hypervisorObj.hypervisor_name\n                    : \"\"\n              }\n            }\n          }}\n          href={linkToPath}\n        >\n          {value.policyName}\n        </Link>\n      )}\n    </div>\n  );\n};\nconst linkCellForImpersonatePolicy = (\n  value,\n  index,\n  org_name,\n  org_id,\n  org_type\n) => {\n  // let encodedPolicyName = encodeURIComponent(\n  //   value.policyName.replace(/[!'()*-._~%/\\//]/g, \"\")\n  // );\n  let linkToPath = `${PAGE_ROUTE.CSR_POLICIES}/all/${value.policyName}/${org_name}/${org_id}/${org_type}`;\n  return (\n    <div className=\"latest-job-popver-text\" id={index}>\n      <span\n        style={{ color: \"#0c56ad\", cursor: \"pointer\" }}\n        onClick={e => {\n          e.preventDefault();\n          window.open(linkToPath, \"_blank\");\n        }}\n      >\n        {\" \"}\n        {value.policyName}\n      </span>\n    </div>\n  );\n};\n\n/**\n * Returns popover for policy cell\n * @param {array of object} data\n * @param {boolean} readyOnlyView\n */\nconst renderPolicyPopover = (data, readyOnlyView) => {\n  return (\n    // <Tooltip\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"policy-row-popover\"\n    //   title=\"\"\n    // >\n    //   {data &&\n    //     data.map((value, index) => {\n    //       return linkCellForPolicy(value, index, readyOnlyView);\n    //     })}\n    // </Tooltip>\n    <></>\n  );\n};\nconst renderDestinationPopover = (data, cell) => {\n  return (\n    // <Tooltip\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"policy-row-popover\"\n    //   title=\"\"\n    // >\n    //   {data &&\n    //     data.map(value => {\n    //       return linkCellForDestination(value, cell);\n    //     })}\n    // </Tooltip>\n    <></>\n  );\n};\n\n/**\n * Returns popover for policy cell\n * @param {array of object} data\n */\nconst renderImpersontePolicyPopover = (data, org_name, org_id, org_type) => {\n  return (\n    // <Tooltip\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"policy-row-popover\"\n    //   title=\"\"\n    // >\n    //   {data &&\n    //     data.map((value, index) => {\n    //       return linkCellForImpersonatePolicy(\n    //         value,\n    //         index,\n    //         org_name,\n    //         org_id,\n    //         org_type\n    //       );\n    //     })}\n    // </Tooltip>\n    <></>\n  );\n};\n\n/**\n * Returns popover for role cell\n * @param {array of object} data\n */\nconst renderRolePopover = data => {\n  let proxy_data = \"\";\n  return (\n    // <Tooltip\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"role-row-popover\"\n    //   title=\"\"\n    // >\n    //   {data &&\n    //     data.map((value, index) => {\n    //       Object.keys(PROXY_ROLES).map(item => {\n    //         if (value.roleName.includes(PROXY_ROLES[item])) {\n    //           proxy_data = PROXY_ROLES[item];\n    //         } else {\n    //           proxy_data = value.roleName;\n    //         }\n    //       });\n    //       return (\n    //         <div className=\"latest-job-popver-text\" id={index}>\n    //           <FormattedMessage\n    //             id={proxy_data ? proxy_data : value.roleName}\n    //             defaultMessage={proxy_data}\n    //           />\n    //         </div>\n    //       );\n    //     })}\n    // </Tooltip>\n    <></>\n  );\n};\n\n/**\n * Returns policy cell rendering function for {@link Overlay}.\n */\n\n\n/**\n * Returns policy cell rendering function for {@link Overlay}.\n */\n\n/**\n * Returns role cell rendering function for {@link Overlay}.\n */\n\n/**\n * Returns cell rendering function for {@link Overlay}.\n */\n\nconst isCritical = value => {\n  return value === \"failed\";\n};\nconst linkCell = (value, index) => {\n  //change here\n  return (\n    <div className=\"latest-job-popver-text\" id={index}>\n      <Link\n        to={{\n          pathname: `${PAGE_ROUTE.JOBS}/all/${value.jobId}/${ACTION_TYPE.LOG}`,\n          state: {\n            selectedResource: {\n              job_id: value.jobId,\n              job_name: value.jobName\n            }\n          }\n        }}\n        href={`${PAGE_ROUTE.JOBS}/all/${value.jobId}/${ACTION_TYPE.LOG}`}\n      >\n        <FormattedMessage id={value.jobName} defaultMessage={value.jobName} />\n      </Link>\n      <div>\n        <span //TODO try using variables for colors\n          style={{ color: isCritical(value.status) ? \"#f76c83\" : \"#4bbfa5\" }}\n        >\n          <FormattedMessage\n            id={value.jobStatus}\n            defaultMessage={value.jobStatus}\n          />\n        </span>\n        {value.jobTime}\n      </div>\n    </div>\n  );\n};\n\nconst linkCellImpersonate = (value, index, org_name, org_id, org_type) => {\n  let linkToPath = `${PAGE_ROUTE.CSR_JOBS}/all/${value.jobId}/${ACTION_TYPE.LOG}/${value.jobName}/${org_name}/${org_id}/${org_type}`;\n  //change here\n  return (\n    <div className=\"latest-job-popver-text\" id={index}>\n      <span\n        style={{ color: \"#0c56ad\", cursor: \"pointer\" }}\n        onClick={e => {\n          e.preventDefault();\n          window.open(linkToPath, \"_blank\");\n        }}\n      >\n        {\" \"}\n        <FormattedMessage id={value.jobName} defaultMessage={value.jobName} />\n      </span>\n      <div>\n        <span //TODO try using variables for colors\n          style={{ color: isCritical(value.status) ? \"#f76c83\" : \"#4bbfa5\" }}\n        >\n          <FormattedMessage\n            id={value.jobStatus}\n            defaultMessage={value.jobStatus}\n          />\n        </span>\n        {value.jobTime}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Returns popover for latest job cell\n * @param {array of object} data\n */\nconst renderLatestJobPopover = data => {\n  return (\n    <></>\n    // <Popover\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"latest-job-popover\"\n    //   title=\"\"\n    // >\n    //   {data.map((value, index) => {\n    //     return linkCell(value, index);\n    //   })}\n    // </Popover>\n  );\n};\n\n/**\n * Returns popover for latest job cell\n * @param {array of object} data\n */\nconst renderLatestJobPopoverImpersonate = (\n  data,\n  org_name,\n  org_id,\n  org_type\n) => {\n  return (\n    // <Popover\n    //   id=\"cell-popover-progressbar\"\n    //   className=\"latest-job-popover\"\n    //   title=\"\"\n    // >\n    //   {data.map((value, index) => {\n    //     return linkCellImpersonate(value, index, org_name, org_id, org_type);\n    //   })}\n    // </Popover>\n    <></>\n  );\n};\n\n/**\n * Returns cell rendering function for {@link Overlay}.\n */\n\n/**\n * Returns cell rendering function to display short text.\n */\nconst renderCellForShortText = () => {\n  return cell =>\n    cell.value ? (\n      cell.value == \"loading-status\" ? (\n        loadingBar()\n      ) : (\n        <span>\n          <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n        </span>\n      )\n    ) : (\n      \"-\"\n    );\n};\nconst renderCellForShortTextMUI = () => {\n  return cell =>\n    cell.value ? (\n      cell.value == \"loading-status\" ? (\n        loadingBar()\n      ) : (\n        <div\n          id={`${cell.original ? cell.original.id : cell.row.original.id}-${\n            cell.column.id\n          }`}\n          style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n        >\n          <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n        </div>\n      )\n    ) : (\n      \"-\"\n    );\n};\n/**\n * Returns cell rendering function to display short text.\n */\nconst renderCellForJobType = () => {\n  return cell =>\n    cell.value ? (\n      cell.value == \"loading-status\" ? (\n        loadingBar()\n      ) : (\n        <span id={`${cell.original.id}-${cell.column.id}`}>\n          <FormattedMessage\n            id={`job_type.${cell.value}`}\n            defaultMessage={cell.value}\n          />\n        </span>\n      )\n    ) : (\n      \"-\"\n    );\n};\n/**\n * Returns cell rendering function to display formatted byte text.\n */\nconst renderByteCell = () => {\n  return cell =>\n    cell.value ? (\n      <span id={`${cell.original.id}-${cell.column.id}`}>\n        {formatBytes(cell.value)}\n      </span>\n    ) : (\n      \"-\"\n    );\n};\nconst renderByteCellMUI = () => {\n  return cell =>\n    cell.value ? (\n      <span\n        id={`${cell.original ? cell.original.id : cell.row.original.id}-${\n          cell.column.id\n        }`}\n      >\n        {formatBytes(cell.value)}\n      </span>\n    ) : (\n      \"-\"\n    );\n};\n\n/**\n * Returns cell rendering function to display short text.\n */\nconst renderCellForComponent = () => {\n  return cell => (cell.value ? <div>{cell.value}</div> : <div />);\n};\n\n/**\n * Returns cell rendering function to display state loader text.\n */\nconst renderCellForStateLoader = () => {\n  return cell =>\n    cell.value ? (\n      <span id={`${cell.original.id}-${cell.column.id}`}>\n        <div\n          className={\n            RECOVERD_VMS_LOADING_STATES.includes(cell.value)\n              ? \"state-loading\"\n              : \"\"\n          }\n        >\n          <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n          &nbsp;\n          <div\n            className={\n              RECOVERD_VMS_LOADING_STATES.includes(cell.value)\n                ? \"state-loading-bar\"\n                : \"\"\n            }\n          />\n          <div\n            className={\n              RECOVERD_VMS_LOADING_STATES.includes(cell.value)\n                ? \"state-loading-bar\"\n                : \"\"\n            }\n          />\n          <div\n            className={\n              RECOVERD_VMS_LOADING_STATES.includes(cell.value)\n                ? \"state-loading-bar\"\n                : \"\"\n            }\n          />\n          <div\n            className={\n              RECOVERD_VMS_LOADING_STATES.includes(cell.value)\n                ? \"state-loading-bar\"\n                : \"\"\n            }\n          />\n        </div>\n      </span>\n    ) : (\n      \"-\"\n    );\n};\n\n/**\n * Returns cell rendering function to display short or empty text.\n */\nconst renderCellForEmptyText = () => {\n  return cell =>\n    cell.value ? (\n      <span id={`${cell.original.id}-${cell.column.id}`}>\n        <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n      </span>\n    ) : (\n      \" \"\n    );\n};\n\n/**\n * Returns cell rendering function to display numbers.\n */\nconst renderCellForNumericalText = () => {\n  return cell => {\n    return isNumber(cell.value) ? (\n      <span id={`${cell.original.id}-${cell.column.id}`}>{cell.value}</span>\n    ) : (\n      \"-\"\n    );\n  };\n};\n\n/**\n * Returns cell rendering function to display long text.\n */\nconst renderCellForLongText = () => {\n  return cell => {\n    return cell.value ? (\n      <span id={`${cell.original.id}-${cell.column.id}`}>\n        <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n      </span>\n    ) : (\n      \"-\"\n    );\n  };\n};\nconst renderCellForLongTextMUI = () => {\n  return cell => {\n    return cell.value ? (\n      <div\n        id={`${cell.original ? cell.original.id : cell.row.original.id}-${\n          cell.column.id\n        }`}\n        style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n      >\n        <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n      </div>\n    ) : (\n      \"-\"\n    );\n  };\n};\n/**\n * Returns cell rendering function to display wrapped text.\n */\nconst renderCellForWrappedText = () => {\n  return cell =>\n    cell.value ? (\n      <span\n        style={{\n          wordWrap: \"break-word\",\n          whiteSpace: \"normal\",\n          wordBreak: \"keep-all\"\n        }}\n        id={`${cell.original.id}-${cell.column.id}`}\n      >\n        <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n      </span>\n    ) : (\n      \"-\"\n    );\n};\n\n/**\n * Returns cell rendering function to display wrapped text with hyperlink.\n */\nconst renderCellForWrappedTextWithHyperlink = () => {\n  return cell => {\n    let anchorLink = \"#\",\n      link = \"\",\n      right = \"\",\n      left = \"\",\n      anchorText = \"\",\n      href = \"#\",\n      aLink = \"#\";\n    let anchorTextArr = [];\n    let hrefs = [];\n    let anchorLinkArr = [];\n    if (cell.value) {\n      try {\n        let start = cell.value.search(/<a/g);\n        let end = cell.value.search(/a>/g);\n        if (start >= 0 && end < cell.value.length && start < end + 1) {\n          left = cell.value.substring(0, start);\n          right = cell.value.substring(end + 2, cell.value.length);\n          link = cell.value.substring(start, end + 2);\n        }\n        if (start == -1 || end == -1 || !link) {\n          left = \"\";\n          right = \"\";\n          link = cell.value;\n        } else {\n          anchorTextArr = link.match(/<a [^>]+>([^<]+)<\\/a>/);\n          anchorText =\n            anchorTextArr && anchorTextArr[1] ? anchorTextArr[1] : \"\";\n          hrefs = link.match(/href='([^']*)/g);\n          href = hrefs && hrefs.length ? hrefs[hrefs.length - 1] : \"href='#\";\n          anchorLinkArr = href.split(\"href=\");\n          aLink =\n            anchorLinkArr && anchorLinkArr.length > 1 ? anchorLinkArr[1] : \"#\";\n          anchorLink = aLink.substr(1);\n          link = \"\";\n        }\n        return (\n          <span\n            style={{\n              wordWrap: \"break-word\",\n              whiteSpace: \"normal\",\n              wordBreak: \"keep-all\"\n            }}\n            id={`${cell.original.id}-${cell.column.id}`}\n          >\n            <span>{left}</span>\n            {link ? (\n              link\n            ) : (\n              <span\n                onClick={e => {\n                  e.preventDefault();\n                  window.open(anchorLink, \"_blank\");\n                }}\n              >\n                <a href=\"#\">{anchorText}</a>\n              </span>\n            )}\n            <span>{right}</span>\n          </span>\n        );\n      } catch (e) {\n        console.log(e);\n        return (\n          <span\n            style={{\n              wordWrap: \"break-word\",\n              whiteSpace: \"normal\",\n              wordBreak: \"keep-all\"\n            }}\n            id={`${cell.original.id}-${cell.column.id}`}\n          >\n            <FormattedMessage id={cell.value} defaultMessage={cell.value} />\n          </span>\n        );\n      }\n    } else {\n      return \"-\";\n    }\n  };\n};\n\n/**\n * Returns cell rendering function for {@link ActionDropdown}.\n * @param {*} data\n */\nconst renderCellForActionDropdown = data => {\n  return cell => (\n    <ActionDropdown\n      title=\"\"\n      options={cell.value}\n      onMenuItemClick={\n        data.sortCallback ? data.sortCallback.bind(null, cell) : \"\"\n      }\n      pullRight={false}\n    />\n  );\n};\n\n/**\n * Returns cell rendering function for single select dropdown\n * @param {*} data\n */\nconst renderCellForSingleSelectDropdown = data => {\n  return cell => {\n    let dropdownhandler = item => {\n      let dropdown = Object.assign({}, cell.value);\n      dropdown.selectedOption = item;\n      data.editDropdownCallback(cell, dropdown);\n    };\n\n    return (\n      <div className=\"edit-dropdown-wrapper\">\n        <ActionDropdown\n          disabled={cell.value.disabled ? cell.value.disabled : false}\n          title={cell.value.selectedOption}\n          options={cell.value.options}\n          onMenuItemClick={dropdownhandler}\n        />\n      </div>\n    );\n  };\n};\n\n// const renderCellForSingleScrollSelectDropdown = data => {\n//   return cell => {\n//     let dropdownhandler = item => {\n//       let dropdown = Object.assign({}, cell.value);\n//       dropdown.selectedOption = item;\n//       data.editDropdownCallback(cell, dropdown);\n//     };\n//     let options = cell.value.options.map(ele => {\n//       ele.label = ele.key;\n//       return ele;\n//     });\n\n//     return (\n//       <div className=\"tableScrollDropdown\">\n//         <Select\n//           options={options}\n//           placeholder=\"Select\"\n//           closeOnSelect\n//           disabled={cell.value.disabled ? cell.value.disabled : false}\n//           isSearchable={false}\n//           value={{\n//             label: cell.value.selectedOption,\n//             value: cell.value.selectedOption\n//           }}\n//           removeSelected={false}\n//           autosize={false}\n//           onChange={data => {\n//             dropdownhandler(data);\n//           }}\n//           scrollMenuIntoView={false}\n//           onSelectResetsInput={false}\n//           onCloseResetsInput\n//           onBlurResetsInput\n//           onMenuClose={() => {}}\n//         />\n//       </div>\n//     );\n//   };\n// };\n\n/**\n * Returns cell rendering function for {@link Input}.\n * @param {*} data\n */\nconst renderCellForInput = data => {\n  return cell => {\n    const [cellValue, setCellValue] = useState(cell.value);\n    let inputHandler = item => {\n      setCellValue(item.target.value);\n    };\n    let onBlur = item => {\n      data.editInputCallback(cell, item.target.value);\n    };\n    return (\n      <input\n        id={`${cell.original._id}_${cell.column.id}`}\n        type=\"text\"\n        className=\"small-size\"\n        value={cellValue}\n        onChange={inputHandler}\n        onBlur={onBlur}\n      />\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link RadioButton}.\n * @param {*} data\n */\nconst renderCellForRadioButton = data => {\n  return cell => {\n    let radioButtonHandler = item => {\n      data.radioButtonCallback(cell, item.target.value);\n    };\n\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          id={`radio_${cell.original.id}`}\n          name=\"targetRadioButton\"\n          value={cell.value}\n          onChange={radioButtonHandler}\n        />\n        <label htmlFor={`radio_${cell.original.id}`} />\n      </div>\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link EditDropdown}.\n * @param {*} data\n */\nconst renderCellForEditDropdown = data => {\n  return cell => {\n    let dropdownhandler = item => {\n      let dropdown = Object.assign({}, cell.value);\n      dropdown.selectedOption = item;\n      data.editDropdownCallback(cell, dropdown);\n    };\n    let inputHandler = item => {\n      let input = Object.assign({}, cell.value);\n      input.inputField = item.target.value;\n      data.editDropdownCallback(cell, input);\n    };\n\n    return (\n      <div className=\"edit-dropdown-wrapper\">\n        <input\n          id={`${cell.original.id}-${cell.column.id}`}\n          type=\"text\"\n          className=\"small-size\"\n          value={cell.value.inputField}\n          onChange={inputHandler}\n        />\n        <ActionDropdown\n          title={cell.value.selectedOption}\n          options={cell.value.options}\n          onMenuItemClick={dropdownhandler}\n        />\n      </div>\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link EditDropdown}.\n * @param {*} data\n */\nconst renderCellForMultiSelectDropdown = data => {\n  return cell => {\n    let dropdownhandler = (type, item) => {\n      let dropdown = Object.assign({}, cell.value);\n      dropdown.selectedOptions.splice(\n        0,\n        dropdown.selectedOptions.length,\n        ...item\n      );\n      data.multiSelectCallback(cell, dropdown);\n    };\n\n    return (\n      <div className=\"select-wrapper multi-select-dropdown-wrapper\">\n        <SelectDropdown\n          dropdownOptions={cell.value.options}\n          placeholder=\"Select\"\n          isMultiSelect\n          getSelectedOption={dropdownhandler}\n          optionType=\"type\"\n          selectedOption={cell.value.selectedOptions}\n        />\n      </div>\n    );\n  };\n};\n\nconst loadingBar = () => {\n  return (\n    <span>\n      <div className=\"state-loading\">\n        {\" \"}\n        &nbsp;\n        <div className=\"state-loading-bar\" />\n        <div className=\"state-loading-bar\" />\n        <div className=\"state-loading-bar\" />\n      </div>\n    </span>\n  );\n};\n\n/**\n * Returns cell rendering function for {@link IconText}.\n */\nconst renderCellForHoverText = () => {\n  return cell => {\n    let cellValue = cell.value;\n    let overlayData = cell.value\n      ? cell.value.text\n        ? cell.value.text\n        : typeof cell.value !== \"object\"\n        ? cell.value\n        : null\n      : null;\n    return cellValue == \"loading-status\" ? (\n      loadingBar()\n    ) : overlayData ? (\n        <></>\n    //   <Overlay\n    //     type={OverlayTypes.TOOLTIP}\n    //     placement={cell.value && cell.value.placement}\n    //     overlayData={\n    //       overlayData ? (\n    //         <FormattedMessage\n    //           id={overlayData}\n    //           defaultMessage={overlayData}\n    //           values={cell.value && cell.value.values}\n    //         />\n    //       ) : (\n    //         \"\"\n    //       )\n    //     }\n    //     data={\n    //       cell.value\n    //         ? cell.value.displayValue\n    //           ? cell.value.displayValue\n    //           : cell.value\n    //         : \"-\"\n    //     }\n    //   />\n    ) : (\n      \"-\"\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link IconText}.\n */\nconst renderCellForIconText = () => {\n  return cell => {\n    let text = cell.value\n      ? cell.value.text\n        ? cell.value.text\n        : typeof cell.value !== \"object\"\n        ? cell.value\n        : null\n      : null;\n    return cell.value ? (\n      <div>\n        <span id={`${cell.original.id}-${cell.column.id}`}>\n          <Icon\n            icon={\n              cell.value\n                ? cell.value.iconClass\n                  ? cell.value.iconClass\n                  : typeof cell.value !== \"object\"\n                  ? cell.value\n                  : null\n                : null\n            }\n          />\n        </span>\n        <span>\n          {text ? <FormattedMessage id={text} defaultMessage={text} /> : \"-\"}\n        </span>\n        {cell.value.failedCount && <span>({cell.value.failedCount})</span>}\n      </div>\n    ) : (\n      \"-\"\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link MutilineText}.\n * @param {*} data\n */\nconst renderCellForMultilineText = () => {\n  return cell =>\n    cell.value && (\n      <div>\n        <div id={`${cell.original.id}-${cell.column.id}`}>\n          {cell.value.name}\n        </div>\n        {cell.value.status ? (\n          <div>\n            {cell.value.status} on {cell.value.date}\n          </div>\n        ) : (\n          \" \"\n        )}\n      </div>\n    );\n};\n\n/**\n * Returns cell rendering function for {@link TwolineText}.\n * @param {*} data\n */\nconst renderCellForTwolineText = () => {\n  return cell => {\n    let overlayData = cell.value\n      ? cell.value.text\n        ? cell.value.text\n        : typeof cell.value !== \"object\"\n        ? cell.value\n        : null\n      : null;\n    let iconClass = cell.value\n      ? cell.value.iconClass\n        ? cell.value.iconClass\n        : overlayData\n      : null;\n    if (iconClass === \"rps_success\") iconClass = \"success\";\n    if (_.get(cell, \"value.hideOverlay\")) {\n      return iconClass ? <Icon icon={iconClass} /> : \"-\";\n    }\n    let icon;\n    if (iconClass == \"loading-status\") {\n      icon = (\n        <span>\n          <div className=\"state-loading\">\n            {\" \"}\n            &nbsp;\n            <div className=\"state-loading-bar\" />\n            <div className=\"state-loading-bar\" />\n            <div className=\"state-loading-bar\" />\n          </div>\n        </span>\n      );\n    } else {\n      icon = (\n        // <Overlay\n        //   type={OverlayTypes.TOOLTIP}\n        //   placement={cell.value && cell.value.placement}\n        //   overlayData={\n        //     overlayData ? (\n        //       <FormattedMessage\n        //         id={overlayData}\n        //         defaultMessage={overlayData}\n        //         values={cell.value && cell.value.values}\n        //       />\n        //     ) : (\n        //       \"\"\n        //     )\n        //   }\n        //   data={iconClass ? <Icon icon={iconClass} /> : \"\"}\n        // />\n        <></>\n      );\n    }\n    return (\n      cell.value && (\n        <div\n          style={{ display: \"flex\" }}\n          id={`${cell.original.id}-${cell.column.id}`}\n        >\n          <div>{icon}</div>\n          <div>\n            {cell.value.line1 ? <div>{cell.value.line1}</div> : \"\"}\n            {cell.value.line2 ? <div>{cell.value.line2}</div> : \"\"}\n          </div>\n        </div>\n      )\n    );\n  };\n};\nconst renderCellForTwolineTextMUI = () => {\n  return cell => {\n    let overlayData = cell.value\n      ? cell.value.text\n        ? cell.value.text\n        : typeof cell.value !== \"object\"\n        ? cell.value\n        : null\n      : null;\n    let iconClass = cell.value\n      ? cell.value.iconClass\n        ? cell.value.iconClass\n        : overlayData\n      : null;\n    if (iconClass === \"rps_success\") iconClass = \"success\";\n    if (_.get(cell, \"value.hideOverlay\")) {\n      return iconClass ? (\n        <Icon icon={iconClass} style={{ height: \"30px\", width: \"30px\" }} />\n      ) : (\n        \"-\"\n      );\n    }\n    let icon;\n    if (iconClass == \"loading-status\") {\n      icon = (\n        <span>\n          <div className=\"state-loading\">\n            {\" \"}\n            &nbsp;\n            <div className=\"state-loading-bar\" />\n            <div className=\"state-loading-bar\" />\n            <div className=\"state-loading-bar\" />\n          </div>\n        </span>\n      );\n    } else {\n      icon = (\n        // <Overlay\n        //   type={OverlayTypes.TOOLTIP}\n        //   placement={cell.value && cell.value.placement}\n        //   overlayData={\n        //     overlayData ? (\n        //       <FormattedMessage\n        //         id={overlayData}\n        //         defaultMessage={overlayData}\n        //         values={cell.value && cell.value.values}\n        //       />\n        //     ) : (\n        //       \"\"\n        //     )\n        //   }\n        //   data={\n        //     iconClass ? (\n        //       <Icon\n        //         icon={iconClass}\n        //         style={{ height: \"30px\", width: \"30px\" }}\n        //       />\n        //     ) : (\n        //       \"\"\n        //     )\n        //   }\n        // />\n        <></>\n      );\n    }\n    return (\n      cell.value && (\n        <div\n          style={{\n            display: \"flex\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n          }}\n          id={`${cell.original ? cell.original.id : cell.row.original.id}-${\n            cell.column.id\n          }`}\n        >\n          <div>{icon}</div>\n          <div>\n            {cell.value.line1 ? <div>{cell.value.line1}</div> : \"\"}\n            {cell.value.line2 ? <div>{cell.value.line2}</div> : \"\"}\n          </div>\n        </div>\n      )\n    );\n  };\n};\n\n/**\n *\n */\nconst renderCellForIdValue = () => {\n  return cell => (\n    <div id={`${cell.original.id}-${cell.column.id}`}>\n      {cell && cell.value ? cell.value.value : \"-\"}\n    </div>\n  );\n};\n\n/**\n * Returns cell rendering for {@link ProgressText}\n */;\n\n/**\n * Returns progress bar for multiType cell\n * @param {object} value\n */\nconst progressBarMultiTypeCell = (value, index) => {\n  return (\n    <div className=\"progress-bar-wrapper\" key={index}>\n      {/* <ProgressBarComponent now={value.percentage} /> */}\n      <div id={`${value.percentage}-Completed`}>\n        <FormattedMessage id={value.status} />\n        <FormattedMessage\n          id=\"%_completed\"\n          values={{ percent: value.percentage }}\n        />\n      </div>\n    </div>\n  );\n};\n\n/**\n * Returns date time for multiType cell\n * @param {object} value\n */\nconst dateTimeMultiTypeCell = (value, index) => {\n  return (\n    <div id={index}>\n      <div>{value.name}</div>\n      {value.status ? (\n        <div id={`${value.status}-${value.name}`}>\n          {value.status} on {value.date}\n        </div>\n      ) : (\n        \" \"\n      )}\n    </div>\n  );\n};\n\n/**\n * Returns icon with text for multiType cell\n * @param {object} value\n */\nconst iconTextMultiTypeCell = (value, index) => {\n  return (\n    <div className=\"d-flex align-items-center popover-icon-cell\" id={index}>\n      <span id={`${value.iconClass}-${index}-icon`}>\n        <Icon icon={value.iconClass} />\n      </span>\n      <span id={`${value.failedCount}-${value.status}`}>{value.status}</span>\n      {value.failedCount ? <span>({value.failedCount})</span> : \"\"}\n    </div>\n  );\n};\n\n/**\n * Returns popover for multiType cell\n * @param {array of object} data\n */\nconst renderPopover = data => {\n  return (\n    // <Popover id=\"cell-popover-progressbar\" title=\"\">\n    //   {data.map((value, index) => {\n    //     switch (value.text) {\n    //       case GridColumnStatusTypes.IN_PROGRESS:\n    //         return progressBarMultiTypeCell(value, index);\n    //       case GridColumnStatusTypes.SCHEDULED:\n    //         return dateTimeMultiTypeCell(value, index);\n    //       default:\n    //         return iconTextMultiTypeCell(value, index);\n    //     }\n    //   })}\n    // </Popover>\n    <></>\n  );\n};\n\n/**\n * Returns cell rendering for multiType cell\n */\n\n/**\n * Returns icon with text for multiType cell\n */\nconst renderCellForImage = () => {\n  return cell => (\n    <div\n      className=\"d-flex align-items-center\"\n      id={`${cell.original.id}-${cell.column.id}-img`}\n    >\n      {cell.value.initial && cell.value.initial === true ? (\n        <div>\n          {cell.value.imageUrl && cell.value.imageUrl.indexOf(null) === -1 ? (\n            <img\n              alt=\"img\"\n              style={{\n                height: \"26px\",\n                width: \"26px\",\n                borderRadius: \"50px\"\n              }}\n              src={cell.value.imageUrl}\n            />\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              <span className=\"initial-letter\">\n                {cell.value && cell.value.name.substr(0, 1)}\n              </span>\n            </div>\n          )}\n        </div>\n      ) : (\n        <img\n          alt=\"img\"\n          style={{\n            height: \"26px\",\n            width: \"26px\",\n            borderRadius: \"50px\"\n          }}\n          src={\n            cell.value.imageUrl && cell.value.imageUrl.indexOf(null) === -1\n              ? cell.value.imageUrl\n              : ProfileImgUrl\n          }\n        />\n      )}\n      <span\n        style={{ paddingLeft: \"16px\", cursor: \"pointer\", color: \"#0C56AD\" }}\n        id={`${cell.original.id}-${cell.column.id}-name`}\n      >\n        {cell.value.name}\n      </span>\n    </div>\n  );\n};\n\n/**\n * Returns grid header rendering function for text.\n * @param {*} data\n */\nconst renderHeaderForText = data => {\n  return (\n    <span>\n      <FormattedMessage\n        id={data.displayIdentifier}\n        defaultMessage={data.defaultDisplayMessage}\n      />\n    </span>\n  );\n};\n\nconst renderHeaderForTextMUI = data => {\n  return (\n    <div\n      style={{\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"inline\"\n      }}\n    >\n      <FormattedMessage\n        id={data.displayIdentifier}\n        defaultMessage={data.defaultDisplayMessage}\n      />\n    </div>\n  );\n};\n\n/**\n * Returns grid header rendering function for checkbox.\n */\nconst renderHeaderForSelect = () => {\n  return (\n    <div>\n      <input id=\"select-th\" type=\"checkbox\" />\n      <label htmlFor=\"select-th\" />\n    </div>\n  );\n};\n\n/**\n * Returns grid header rendering function for {@link HeaderDropdown}.\n * @param {*} data\n */\nconst renderHeaderForTextSelect = data => {\n  return (\n    <HeaderDropdown\n      onMenuItemClick={data.sortCallback}\n      name={data.value}\n      displayIdentifier={data.displayIdentifier}\n      defaultMessage={data.defaultDisplayMessage}\n      options={data.addtionalOptions}\n    />\n  );\n};\n\nconst renderIconCell = () => {\n  return cell => {\n    let overlayData = cell.value\n      ? cell.value.text\n        ? cell.value.text\n        : typeof cell.value !== \"object\"\n        ? cell.value\n        : null\n      : null;\n    let iconClass = cell.value\n      ? cell.value.iconClass\n        ? cell.value.iconClass\n        : overlayData\n      : null;\n    return (\n    //   <Overlay\n    //     type={OverlayTypes.TOOLTIP}\n    //     placement={cell.value && cell.value.placement}\n    //     overlayData={\n    //       overlayData ? (\n    //         <FormattedMessage\n    //           id={overlayData}\n    //           defaultMessage={overlayData}\n    //           values={cell.value && cell.value.values}\n    //         />\n    //       ) : (\n    //         \"\"\n    //       )\n    //     }\n    //     data={iconClass ? Icons[iconClass] : \"-\"}\n    //   />\n    <></>\n    );\n  };\n};\n\n/**\n * Returns cell rendering function for {@link FormattedMessage}.\n */\nconst renderFormattedLocalizedTextCell = () => {\n  return cell => {\n    return cell.value ? <span>{cell.value}</span> : \"-\";\n  };\n};\n\nconst renderCellForDuration = () => {\n  return cell => {\n    return cell.value ? <span>{cell.value.value}</span> : \"-\";\n  };\n};\n/**\n * Returns cell rendering function for {@link Download}.\n */\nconst renderCellForIconLink = () => {\n  return cell => {\n    if (cell.value && cell.value.show) {\n      let title = cell.value\n        ? cell.value.title\n          ? cell.value.title\n          : typeof cell.value !== \"object\"\n          ? cell.value\n          : \"\"\n        : \"\";\n      let iconClass = cell.value\n        ? cell.value.iconClass\n          ? cell.value.iconClass\n          : \"\"\n        : \"\";\n      return cell.value ? (\n        <div>\n          <div\n            id={`${cell.original.id}-${cell.column.id}`}\n            onClick={event => cell.value.onClickAction(event, cell.original.id)}\n          >\n            {/* <Overlay\n              type={OverlayTypes.TOOLTIP}\n              placement={cell.value && cell.value.placement}\n              overlayData={\n                cell.value.tooltip ? (\n                  <FormattedMessage\n                    id={cell.value.tooltip}\n                    defaultMessage={title}\n                  />\n                ) : (\n                  \"\"\n                )\n              }\n              data={iconClass ? <Icon icon={iconClass} /> : \"-\"}\n            /> */}\n          </div>\n        </div>\n      ) : (\n        \"-\"\n      );\n    } else return \"\";\n  };\n};\n\n/**\n * Returns cell rendering function for {@link ActionButton}.\n * @param {*} data\n */\nconst renderCellForActionButton = data => {\n  return cell => {\n    if (cell && cell.value) {\n      const { nameOnButton, preText, display, disabledButton } = cell.value;\n      return cell.value ? (\n        <div style={{ display: display ? \"\" : \"none\" }}>\n          {preText && (\n            <FormattedMessage id={`policy.source.grid.exclusion.${preText}`} />\n          )}\n          <button\n            className=\"btn btn-secondary\"\n            disabled={disabledButton}\n            style={\n              preText === \"no\" ? { marginLeft: \"14px\" } : { marginLeft: \"10px\" }\n            }\n            onClick={\n              data.buttonActionCallback\n                ? data.buttonActionCallback.bind(null, cell)\n                : \"\"\n            }\n          >\n            <FormattedMessage\n              id={`policy.source.grid.action.button.${nameOnButton}`}\n            />\n          </button>\n        </div>\n      ) : (\n        \"\"\n      );\n    } else {\n      return \"\";\n    }\n  };\n};\n\n/**\n *  Returns width, minWidth for action button cell.\n */\nconst setCellWidthForActionButton = () => {\n  return {\n    width: GridColumnCellWidth.BUTTON_ACTION,\n    minWidth: GridColumnCellWidth.BUTTON_ACTION\n  };\n};\n\nexport default injectIntl(DataGridHelper);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport { ID_PREFIX } from \"../../../../../configs/IdConfig\";\nimport FormattedMessage from \"../../../formatted-message\";\nimport {\n  updateGridCurrentPageNumber,\n  updateGridCurrentPageSize\n} from \"../../../../../state/actions/actions\";\n\nconst RowPerPageText = () => (\n  <FormattedMessage id=\"rowsPerPageText\" defaultMessage=\"Rows per page:\" />\n);\n\n/**\n * Component to render custom pagination footer.\n */\nconst GridFooter = props => {\n  const {\n    usePaginationWithApi,\n    totalSize,\n    onPageChange,\n    onPageSizeChange,\n    page,\n    testId,\n    pageSize\n  } = props;\n\n  const footerId = testId ? `${ID_PREFIX}${testId}` : \"\";\n  // React-Redux Hooks\n  const dispatch = useDispatch();\n  /**\n   * to handle page change\n   * page change action dispatch to datagrid component\n   */\n\n  useEffect(() => {\n    dispatch(updateGridCurrentPageNumber(page));\n  }, [page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handlePageSelect = (eventKey, newPage) => {\n    dispatch(updateGridCurrentPageNumber(Number(newPage)));\n    if (usePaginationWithApi) {\n      onPageChange(newPage);\n    }\n  };\n\n  /**\n   * to handle page size change\n   * dropdown menu item action dispatch to datagrid component\n   */\n  const handleDropdownMenuItemClick = e => {\n    dispatch(updateGridCurrentPageSize(Number(e.target.value)));\n    if (usePaginationWithApi) {\n      dispatch(updateGridCurrentPageNumber(1));\n      const gridPageSize = Number(e.target.value);\n      onPageSizeChange(gridPageSize);\n    }\n  };\n\n  const labelDisplayedRows = ({ from, to, count }) => (\n    <FormattedMessage\n      id=\"gridPaginationCountText\"\n      values={{\n        from,\n        to,\n        count\n      }}\n    />\n  );\n\n  const currentPage = page - 1;\n  return (\n    <TablePagination\n      rowsPerPageOptions={[\n        {\n          value: 25,\n          label: <span id={`${footerId}_per_page_menu_0`}>25</span>\n        },\n        {\n          value: 50,\n          label: <span id={`${footerId}_per_page_menu_1`}>50</span>\n        }\n      ]}\n      component=\"div\"\n      count={totalSize}\n      rowsPerPage={pageSize}\n      page={currentPage}\n      onPageChange={handlePageSelect}\n      onRowsPerPageChange={handleDropdownMenuItemClick}\n      labelRowsPerPage={<RowPerPageText />}\n      labelDisplayedRows={labelDisplayedRows}\n    />\n  );\n};\n\nGridFooter.defaultProps = {\n  usePaginationWithApi: false\n};\n\nGridFooter.propTypes = {\n  usePaginationWithApi: PropTypes.bool,\n  totalSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onPageSizeChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  testId: PropTypes.string.isRequired,\n  pageSize: PropTypes.number.isRequired\n};\n\nexport default React.memo(GridFooter);\n","import React, { useEffect, useState } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport { ID_PREFIX } from \"../../../../../configs/IdConfig\";\nimport ActionDropdown from \"../../../action-dropdown-mui\";\nimport { Grid } from \"@mui/material\";\n\nimport FormattedMessage from \"../../../formatted-message\";\nimport {\n  updateGridCurrentPageNumber,\n  updateGridCurrentPageSize\n} from \"../../../../../state/actions/actions\";\n\nconst RowPerPageText = () => (\n  <FormattedMessage id=\"rowsPerPageText\" defaultMessage=\"Rows per page:\" />\n);\n\n/**\n * Component to render custom pagination footer.\n */\nconst GridFooter = ({\n  usePaginationWithApi,\n  totalSize,\n  pageSizeOptions,\n  page,\n  intl,\n  testId,\n  onPageSizeChange,\n  onPageChange,\n  pageSize\n}) => {\n  const footerId = testId ? `${ID_PREFIX}${testId}` : \"\";\n  // React-Redux Hooks\n  const dispatch = useDispatch();\n  const [activePage, setActivePage] = useState(1);\n  const [startCount, setStartCount] = useState(0);\n  const [endCount, setEndCount] = useState(0);\n\n  useEffect(() => {\n    setActivePage(page);\n    dispatch(updateGridCurrentPageNumber(page));\n  }, [page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (activePage === 1) {\n      setStartCount(1);\n      pageSize >= totalSize ? setEndCount(totalSize) : setEndCount(pageSize);\n    } else {\n      setStartCount(pageSize * (activePage - 1));\n      activePage * pageSize >= totalSize\n        ? setEndCount(totalSize)\n        : setEndCount(activePage * pageSize);\n    }\n  }, [activePage, pageSize, totalSize]);\n\n  /**\n   * to handle page change\n   * page change action dispatch to datagrid component\n   */\n  const handlePageSelect = newPage => {\n    const decrementedPage = newPage - 1;\n    setActivePage(decrementedPage);\n    dispatch(updateGridCurrentPageNumber(Number(decrementedPage)));\n    if (usePaginationWithApi) {\n      onPageChange(decrementedPage);\n    }\n  };\n\n  /**\n   * to handle page size change\n   * dropdown menu item action dispatch to datagrid component\n   */\n  const handleDropdownMenuItemClick = e => {\n    setActivePage(1);\n    dispatch(updateGridCurrentPageSize(Number(e.value)));\n    if (usePaginationWithApi) {\n      dispatch(updateGridCurrentPageNumber(1));\n      const gridPageSize = Number(e.value);\n      onPageSizeChange(gridPageSize);\n    }\n  };\n\n  const labelDisplayedRows = (from, to, count) => (\n    <span id={`${footerId}_pagination`}>\n      <FormattedMessage\n        id=\"gridPaginationOnlyFromAndToText\"\n        values={{\n          from,\n          to\n        }}\n      />\n      <FormattedMessage id=\"gridPaginationOnlyOfText\" />\n      <FormattedMessage\n        id=\"gridPaginationOnlyCountText\"\n        values={{\n          count\n        }}\n      />\n    </span>\n  );\n\n  return (\n    <Grid\n    container\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n      style={{ padding: \"0.7rem\" }}\n    >\n       <div>{labelDisplayedRows(startCount, endCount, totalSize)}</div>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"d-flex align-items-center\" style={{ paddingRight: 10 }}>\n          <div style={{ paddingRight: 10 }}>\n            <RowPerPageText />\n          </div>\n          <ActionDropdown\n            testId={`${footerId}_per_page_menu`}\n            title={`${pageSize}`}\n            value={`${pageSize}`}\n            options={pageSizeOptions.map(item => ({\n              key: item,\n              value: item\n            }))}\n            onMenuItemClick={handleDropdownMenuItemClick}\n            hideOutline\n            customStyle={{ width: 40,marginTop:'3px' }}\n          />\n        </div>\n        <Pagination\n          count={Math.ceil(totalSize / pageSize) || 1}\n          defaultPage={activePage}\n          page={activePage}\n          showFirstButton\n          showLastButton\n          color=\"primary\"\n          size=\"small\"\n          onChange={(event, newPage) => handlePageSelect(newPage)}\n          renderItem={item => {\n            switch (item.type) {\n              case \"first\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_first`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToFirstPage\",\n                      defaultMessage: \"Go to first page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToFirstPage\",\n                      defaultMessage: \"Go to first page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"previous\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_previous`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToPreviousPage\",\n                      defaultMessage: \"Go to previous page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToPreviousPage\",\n                      defaultMessage: \"Go to previous page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"page\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_${item.page}`}\n                    aria-label={intl.formatMessage(\n                      {\n                        id: \"goToParticularPage\",\n                        defaultMessage: `Go to page ${item.page}`\n                      },\n                      { pageNumber: item.page }\n                    )}\n                    title={intl.formatMessage(\n                      {\n                        id: \"goToParticularPage\",\n                        defaultMessage: `Go to ${item.page} page`\n                      },\n                      { pageNumber: item.page }\n                    )}\n                    {...item}\n                  />\n                );\n              case \"next\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_next`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToNextPage\",\n                      defaultMessage: \"Go to next page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToNextPage\",\n                      defaultMessage: \"Go to next page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"last\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_last`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToLastPage\",\n                      defaultMessage: \"Go to last page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToLastPage\",\n                      defaultMessage: \"Go to last page\"\n                    })}\n                    {...item}\n                  />\n                );\n              default:\n                return <PaginationItem {...item} />;\n            }\n          }}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nGridFooter.defaultProps = {\n  usePaginationWithApi: false,\n  pageSizeOptions: [25, 50, 100]\n};\n\nGridFooter.propTypes = {\n  usePaginationWithApi: PropTypes.bool,\n  totalSize: PropTypes.number.isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\n  page: PropTypes.number.isRequired,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func.isRequired\n  }).isRequired,\n  testId: PropTypes.string.isRequired,\n  onPageSizeChange: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  pageSize: PropTypes.number.isRequired\n};\n\nexport default React.memo(injectIntl(GridFooter));\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport { ID_PREFIX } from \"../../../../../configs/IdConfig\";\nimport FormattedMessage from \"../../../formatted-message\";\n\nconst RowPerPageText = () => (\n  <FormattedMessage id=\"rowsPerPageText\" defaultMessage=\"Rows per page:\" />\n);\n\n/**\n * Component to render custom pagination footer.\n */\nconst GridFooter = ({\n  totalSize,\n  pageIndex,\n  gridPageSize,\n  setPageSize,\n  nextPage,\n  previousPage,\n  testId,\n  intl\n}) => {\n  const footerId = testId ? `${ID_PREFIX}${testId}` : \"\";\n\n  /**\n   * to handle page change\n   * page change action dispatch to datagrid component\n   */\n  const handlePageSelect = newPage => {\n    if (newPage < pageIndex) {\n      previousPage();\n    } else if (newPage > pageIndex) {\n      nextPage();\n    }\n  };\n\n  /**\n   * to handle page size change\n   * dropdown menu item action dispatch to datagrid component\n   */\n  const handleDropdownMenuItemClick = e => {\n    const currentPageSize = Number(e.target.value);\n    setPageSize(currentPageSize);\n  };\n\n  const labelDisplayedRows = ({ from, to, count }) => (\n    <span id={`${footerId}_pagination`}>\n      <FormattedMessage\n        id=\"gridPaginationOnlyFromAndToText\"\n        values={{\n          from,\n          to\n        }}\n      />\n      <FormattedMessage id=\"gridPaginationOnlyOfText\" />\n      <FormattedMessage\n        id=\"gridPaginationOnlyCountText\"\n        values={{\n          count\n        }}\n      />\n    </span>\n  );\n\n  const TablePaginationActions = () => (\n    <div className=\"MuiTablePagination-actions\">\n      <IconButton\n        id={`${footerId}_pagination_previous`}\n        onClick={() => handlePageSelect(pageIndex - 1)}\n        disabled={pageIndex === 0}\n        aria-label={intl.formatMessage({\n          id: \"goToPreviousPage\",\n          defaultMessage: \"Go to previous page\"\n        })}\n        title={intl.formatMessage({\n          id: \"goToPreviousPage\",\n          defaultMessage: \"Go to previous page\"\n        })}\n      >\n        <KeyboardArrowLeft />\n      </IconButton>\n\n      <IconButton\n        id={`${footerId}_pagination_next`}\n        onClick={() => handlePageSelect(pageIndex + 1)}\n        disabled={pageIndex >= Math.ceil(totalSize / gridPageSize) - 1}\n        aria-label={intl.formatMessage({\n          id: \"goToNextPage\",\n          defaultMessage: \"Go to next page\"\n        })}\n        title={intl.formatMessage({\n          id: \"goToNextPage\",\n          defaultMessage: \"Go to next page\"\n        })}\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n    </div>\n  );\n\n  return (\n    <TablePagination\n      rowsPerPageOptions={[\n        {\n          value: 25,\n          label: <span id={`${footerId}_per_page_menu_0`}>25</span>\n        },\n        {\n          value: 50,\n          label: <span id={`${footerId}_per_page_menu_1`}>50</span>\n        }\n      ]}\n      component=\"div\"\n      count={totalSize}\n      rowsPerPage={gridPageSize}\n      page={pageIndex}\n      onPageChange={() => {}}\n      onRowsPerPageChange={handleDropdownMenuItemClick}\n      labelRowsPerPage={<RowPerPageText />}\n      labelDisplayedRows={labelDisplayedRows}\n      ActionsComponent={TablePaginationActions}\n    />\n  );\n};\n\nGridFooter.propTypes = {\n  totalSize: PropTypes.number.isRequired,\n  pageIndex: PropTypes.number.isRequired,\n  gridPageSize: PropTypes.number.isRequired,\n  setPageSize: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  testId: PropTypes.string.isRequired,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default React.memo(injectIntl(GridFooter));\n","import React, { useState, useEffect } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport { ID_PREFIX } from \"../../../../../configs/IdConfig\";\nimport ActionDropdown from \"../../../action-dropdown-mui\";\nimport FormattedMessage from \"../../../formatted-message\";\n\nconst RowPerPageText = () => (\n  <FormattedMessage id=\"rowsPerPageText\" defaultMessage=\"Rows per page:\" />\n);\n\n/**\n * Component to render custom pagination footer.\n */\nconst GridFooter = ({\n  totalSize,\n  page,\n  setPageSize,\n  gridPageSize,\n  gotoPage,\n  testId,\n  intl,\n  pageSizeOptions\n}) => {\n  const footerId = testId ? `${ID_PREFIX}${testId}` : \"\";\n  const [activePage, setActivePage] = useState(1);\n  const [startCount, setStartCount] = useState(0);\n  const [endCount, setEndCount] = useState(0);\n\n  useEffect(() => {\n    setActivePage(page);\n  }, [page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setPageSize(gridPageSize);\n    if (activePage === 1) {\n      setStartCount(1);\n      gridPageSize >= totalSize\n        ? setEndCount(totalSize)\n        : setEndCount(gridPageSize);\n    } else {\n      setStartCount(gridPageSize * (activePage - 1));\n      activePage * gridPageSize >= totalSize\n        ? setEndCount(totalSize)\n        : setEndCount(activePage * gridPageSize);\n    }\n  }, [activePage, gridPageSize, totalSize]);\n\n  /**\n   * to handle page change\n   * page change action dispatch to datagrid component\n   */\n  const handlePageSelect = newPage => {\n    setActivePage(newPage);\n    gotoPage(newPage - 1);\n  };\n\n  /**\n   * to handle page size change\n   * dropdown menu item action dispatch to datagrid component\n   */\n  const handleDropdownMenuItemClick = e => {\n    setActivePage(1);\n    const currentPageSize = Number(e.value);\n    setPageSize(currentPageSize);\n    gotoPage(0);\n  };\n\n  const labelDisplayedRows = (from, to, count) => (\n    <span id={`${footerId}_pagination`}>\n      <FormattedMessage\n        id=\"gridPaginationOnlyFromAndToText\"\n        values={{\n          from,\n          to\n        }}\n      />\n      <FormattedMessage id=\"gridPaginationOnlyOfText\" />\n      <FormattedMessage\n        id=\"gridPaginationOnlyCountText\"\n        values={{\n          count\n        }}\n      />\n    </span>\n  );\n\n  return (\n    <div\n      className=\"d-flex justify-content-between align-items-center\"\n      style={{ padding: \"0.7rem\" }}\n    >\n      <div>{labelDisplayedRows(startCount, endCount, totalSize)}</div>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"d-flex align-items-center\" style={{ paddingRight: 10 }}>\n          <div style={{ paddingRight: 10 }}>\n            <RowPerPageText />\n          </div>\n          <ActionDropdown\n            testId={`${footerId}_per_page_menu`}\n            title={`${gridPageSize}`}\n            value={`${gridPageSize}`}\n            options={pageSizeOptions.map(item => ({\n              key: item,\n              value: item\n            }))}\n            onMenuItemClick={handleDropdownMenuItemClick}\n            hideOutline\n            customStyle={{ width: 40 }}\n          />\n        </div>\n        <Pagination\n          count={Math.ceil(totalSize / gridPageSize) || 1}\n          defaultPage={activePage}\n          page={activePage}\n          showFirstButton\n          showLastButton\n          color=\"primary\"\n          size=\"small\"\n          onChange={(event, newPage) => handlePageSelect(newPage)}\n          renderItem={item => {\n            switch (item.type) {\n              case \"first\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_first`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToFirstPage\",\n                      defaultMessage: \"Go to first page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToFirstPage\",\n                      defaultMessage: \"Go to first page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"previous\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_previous`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToPreviousPage\",\n                      defaultMessage: \"Go to previous page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToPreviousPage\",\n                      defaultMessage: \"Go to previous page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"page\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_${item.page}`}\n                    aria-label={intl.formatMessage(\n                      {\n                        id: \"goToParticularPage\",\n                        defaultMessage: `Go to page ${item.page}`\n                      },\n                      { pageNumber: item.page }\n                    )}\n                    title={intl.formatMessage(\n                      {\n                        id: \"goToParticularPage\",\n                        defaultMessage: `Go to ${item.page} page`\n                      },\n                      { pageNumber: item.page }\n                    )}\n                    {...item}\n                  />\n                );\n              case \"next\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_next`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToNextPage\",\n                      defaultMessage: \"Go to next page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToNextPage\",\n                      defaultMessage: \"Go to next page\"\n                    })}\n                    {...item}\n                  />\n                );\n              case \"last\":\n                return (\n                  <PaginationItem\n                    id={`${footerId}_pagination_last`}\n                    aria-label={intl.formatMessage({\n                      id: \"goToLastPage\",\n                      defaultMessage: \"Go to last page\"\n                    })}\n                    title={intl.formatMessage({\n                      id: \"goToLastPage\",\n                      defaultMessage: \"Go to last page\"\n                    })}\n                    {...item}\n                  />\n                );\n              default:\n                return <PaginationItem {...item} />;\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nGridFooter.defaultProps = {\n  pageSizeOptions: [25, 50, 100]\n};\n\nGridFooter.propTypes = {\n  totalSize: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  setPageSize: PropTypes.func.isRequired,\n  gridPageSize: PropTypes.number.isRequired,\n  gotoPage: PropTypes.func.isRequired,\n  testId: PropTypes.string.isRequired,\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func.isRequired\n  }).isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number)\n};\n\nexport default React.memo(injectIntl(GridFooter));\n","/* eslint-disable no-nested-ternary */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GridFooterWithApiAndWithoutPageNumber from \"./PaginationFooter/GridFooterWithApi/WithoutPageNumber\";\nimport GridFooterWithApiAndWithPageNumber from \"./PaginationFooter/GridFooterWithApi/WithPageNumber\";\nimport GridFooterWithoutApiAndWithoutPageNumber from \"./PaginationFooter/GridFooterWithoutApi/WithoutPageNumber\";\nimport GridFooterWithoutApiAndWithPageNumber from \"./PaginationFooter/GridFooterWithoutApi/WithPageNumber\";\n\n/**\n * Component to render custom pagination footer.\n */\nconst GridFooter = props => {\n  const { usePaginationWithApi, usePaginationWithPageNumber } = props;\n  return (\n    <div>\n      {usePaginationWithApi ? (\n        usePaginationWithPageNumber ? (\n          <GridFooterWithApiAndWithPageNumber {...props} />\n        ) : (\n          <GridFooterWithApiAndWithoutPageNumber {...props} />\n        )\n      ) : usePaginationWithPageNumber ? (\n        <GridFooterWithoutApiAndWithPageNumber {...props} />\n      ) : (\n        <GridFooterWithoutApiAndWithoutPageNumber {...props} />\n      )}\n    </div>\n  );\n};\n\nGridFooter.defaultProps = {\n  usePaginationWithApi: false,\n  usePaginationWithPageNumber: false\n};\n\nGridFooter.propTypes = {\n  usePaginationWithApi: PropTypes.bool,\n  usePaginationWithPageNumber: PropTypes.bool\n};\n\nexport default React.memo(GridFooter);\n","import React from \"react\";\nimport FormattedMessage from \"../formatted-message\";\nexport const GridLoader = () => {\n  return (\n    <tr className=\"loading\">\n      <td className=\"loading-bar\" />\n      <td className=\"loading-bar\" />\n      <td className=\"loading-bar\" />\n      <td className=\"loading-bar\" />\n    </tr>\n  );\n};\n\nexport const GridNoDataText = props => {\n  return (\n    <tr className=\"grid-nodata-text\">\n      <td>\n        <FormattedMessage\n          id={props.noDataText}\n          defaultMessage={props.noDataText}\n        />\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEmpty from \"lodash/isEmpty\";\nimport {\n  useTable,\n  useResizeColumns,\n  useFlexLayout,\n  usePagination,\n  useSortBy,\n  useRowSelect\n} from \"react-table\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport MaUTable from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport { injectIntl } from \"react-intl\";\nimport GridFooter from \"./GridFooter\";\nimport { GridLoader, GridNoDataText } from \"../datagrid/utils\";\nimport { ID_PREFIX } from \"../../../configs/IdConfig\";\n\n/**\n * Re-usable data grid with customizable columns, records view\n * and a pagination footer.\n */\n\nfunction DataGrid(props) {\n  // const [resetSelectedRows, setResetSelectedRows] = useState(false);\n  const resetSelectedRows = false;\n  const [prevSortedColumn, setPrevSortedColumn] = useState(null);\n  const gridcolumn = React.useMemo(() => [...props.columns], [props.columns]);\n  const gridData = React.useMemo(() => [...props.data], [props.data]);\n  let testId = props && props.testId ? `${ID_PREFIX}${props.testId}` : \"\";\n  let SubComponent = props && props.SubComponent;\n\n  // Console added for checking refrence equality of props in local\n  // console.log(\"pross\", props);\n  // const [data0, setData0] = useState([]);\n  // const gridData = React.useMemo(() => {\n\n  //   setData0(props);\n  //   return [...props.data];\n  // }, [props.data]);\n\n  // useEffect(() => {\n  //   console.log(\"availableBulkActions->>data changed\");\n  // }, [props.availableBulkActions]);\n\n  // useEffect(() => {\n  //   console.log(\"SubComponent->>data changed\");\n  // }, [props.SubComponent]);\n\n  // useEffect(() => {\n  //   console.log(\"allSelected->>data changed\");\n  // }, [props.allSelected]);\n\n  // useEffect(() => {\n  //   console.log(\"canNext->>data changed\");\n  // }, [props.canNext]);\n  // useEffect(() => {\n  //   console.log(\"canPrevious->>data changed\");\n  // }, [props.canPrevious]);\n\n  // useEffect(() => {\n  //   console.log(\"checkedEntities->>data changed\");\n  // }, [props.checkedEntities]);\n  // useEffect(() => {\n  //   console.log(\"checkedItems->>data changed\");\n  // }, [props.checkedItems]);\n\n  // useEffect(() => {\n  //   console.log(\"columns->>data changed\");\n  // }, [props.columns]);\n  // useEffect(() => {\n  //   console.log(\"data->>data changed\");\n  // }, [props.data]);\n\n  // useEffect(() => {\n  //   console.log(\"defaultPageSize->>data changed\");\n  // }, [props.defaultPageSize]);\n  // useEffect(() => {\n  //   console.log(\"dispatch->>data changed\");\n  // }, [props.dispatch]);\n\n  // useEffect(() => {\n  //   console.log(\"freezeWhenExpanded->>data changed\");\n  // }, [props.freezeWhenExpanded]);\n  // useEffect(() => {\n  //   console.log(\"getData->>data changed\");\n  // }, [props.getData]);\n\n  // useEffect(() => {\n  //   console.log(\"hideCheckbox  >>data changed\");\n  // }, [props.hideCheckbox]);\n  // useEffect(() => {\n  //   console.log(\"isSingleSelect  ->>data changed\");\n  // }, [props.isSingleSelect]);\n\n  // useEffect(() => {\n  //   console.log(\"keyAsTestId  >>data changed\");\n  // }, [props.keyAsTestId]);\n  // useEffect(() => {\n  //   console.log(\"manual  ->>data changed\");\n  // }, [props.manual]);\n\n  // useEffect(() => {\n  //   console.log(\"noDataText  >>data changed\");\n  // }, [props.noDataText]);\n  // useEffect(() => {\n  //   console.log(\"noRowsFound  ->>data changed\");\n  // }, [props.noRowsFoundl]);\n\n  // useEffect(() => {\n  //   console.log(\"onPageChange  >>data changed\");\n  // }, [props.onPageChange]);\n  // useEffect(() => {\n  //   console.log(\"onPageSizeChange  ->>data changed\");\n  // }, [props.onPageSizeChange]);\n\n  // useEffect(() => {\n  //   console.log(\"onResizedChange  >>data changed\");\n  // }, [props.onResizedChange]);\n  // useEffect(() => {\n  //   console.log(\"onRowCellClick  ->>data changed\");\n  // }, [props.onRowCellClick]);\n\n  // useEffect(() => {\n  //   console.log(\"onSortedChange  >>data changed\");\n  // }, [props.onSortedChange]);\n  // useEffect(() => {\n  //   console.log(\"page  ->>data changed\");\n  // }, [props.page]);\n\n  // useEffect(() => {\n  //   console.log(\"pageSize  >>data changed\");\n  // }, [props.pageSize]);\n  // useEffect(() => {\n  //   console.log(\"pagse  ->>data changed\");\n  // }, [props.pages]);\n\n  // useEffect(() => {\n  //   console.log(\"showPagination  >>data changed\");\n  // }, [props.showPagination]);\n  // useEffect(() => {\n  //   console.log(\"sorted  ->>data changed\");\n  // }, [props.sorted]);\n\n  // useEffect(() => {\n  //   console.log(\"subComponentDetails  >>data changed\");\n  // }, [props.subComponentDetails]);\n  // useEffect(() => {\n  //   console.log(\"testId  ->>data changed\");\n  // }, [props.testId]);\n  // useEffect(() => {\n  //   console.log(\"totalSize  >>data changed\");\n  // }, [props.totalSize]);\n  // useEffect(() => {\n  //   console.log(\"usePaginationWithApi  ->>data changed\");\n  // }, [props.usePaginationWithApi]);\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    page,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, sortBy, columnResizing }\n  } = useTable(\n    {\n      columns: gridcolumn,\n      data: gridData,\n      id: testId,\n      keyAsTestId: props.keyAsTestId,\n      autoResetResize: false,\n      autoResetSortBy: false,\n      autoResetSelectedRows: resetSelectedRows,\n      manualSortBy: props && props.usePaginationWithApi,\n      initialState: { pageIndex: 0, pageSize: 25 }\n    },\n    useSortBy,\n    useFlexLayout,\n    useResizeColumns,\n    usePagination,\n    useRowSelect,\n    hooks => {\n      hooks.visibleColumns.push(columns => [\n        // Let's make a column for selection\n        props.SubComponent\n          ? {\n              id: \"expand\",\n              width: \"35px\",\n              maxWidth: \"35px\",\n              minWidth: \"35px\",\n              Header: () =>\n                props.SubComponent && (\n                  <div\n                    style={{\n                      width: 35\n                    }}\n                  />\n                )\n            }\n          : {},\n        ...columns\n      ]);\n    }\n  );\n\n  useEffect(() => {\n    if (prevSortedColumn && !sortBy.length) {\n      props.onSortedChange && props.onSortedChange(\"\");\n    } else {\n      props.onSortedChange && sortBy.length && props.onSortedChange(sortBy);\n    }\n    sortBy.length && setPrevSortedColumn({ ...sortBy[0] });\n  }, [sortBy]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (\n      columnResizing &&\n      columnResizing.columnWidths &&\n      !isEmpty(columnResizing.columnWidths)\n    ) {\n      let newResized = [];\n      let colWidths = columnResizing.columnWidths;\n      let keys = Object.keys(columnResizing.columnWidths);\n      for (let i = 0; i < keys.length; i++) {\n        newResized.push({ id: keys[i], value: colWidths[keys[i]] });\n      }\n      if (!columnResizing.isResizingColumn) {\n        props.onResizedChange({ newResized });\n      }\n    }\n  }, [columnResizing]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  let gridRows = props.usePaginationWithApi ? [...rows] : [...page];\n  const [open, setOpen] = useState({});\n  // Render the UI for your table\n  return (\n    <Paper\n      elevation={0}\n      className={`spog-datagrid-paper ${\n        !props.showPagination ? \"no-pagination\" : \"\"\n      }`}\n    >\n      <TableContainer className=\"spog-datagrid-container\">\n        <MaUTable stickyHeader {...getTableProps()} size=\"small\" id={testId}>\n          <TableHead id={`${testId}_th`} style={{ zIndex: 2 }}>\n            {headerGroups.map(headerGroup => (\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => {\n                  //eslint-disable-next-line eqeqeq\n                  if (column.id == undefined) {\n                    //eslint-disable-next-line array-callback-return\n                    return;\n                  }\n                  if (props.hideCheckbox && column.id === \"selection\") {\n                    //eslint-disable-next-line array-callback-return\n                    return;\n                  }\n                  column.canSort = column.sortable;\n                  let sortArrow =\n                    column.disableSortBy ||\n                    column.id === \"selection\" ||\n                    column.id === \"icon\" ||\n                    column.id === \"available_actions\" ||\n                    column.id === \"_rowId\" ||\n                    column.id === \"expand\" ||\n                    column.id === \"showErrorIcon\" ? null : (\n                      <>\n                        {column.sortable && (\n                          <TableSortLabel\n                            active={true}\n                            direction={\"desc\"}\n                            className=\"mui-table-sort-default\"\n                          ></TableSortLabel>\n                        )}\n                      </>\n                    );\n\n                  return (\n                    <TableCell\n                      {...column.getHeaderProps()}\n                      id={`${testId}_th_${column.id}`}\n                    >\n                      <div\n                        {...column.getSortByToggleProps()}\n                        style={{ display: \"flex\" }}\n                      >\n                        {column.render(\"Header\")}\n                        <span>\n                          {column.sortable && column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <TableSortLabel\n                                active={true}\n                                direction={\"desc\"}\n                              ></TableSortLabel>\n                            ) : (\n                              <TableSortLabel\n                                active={true}\n                                direction={\"asc\"}\n                              ></TableSortLabel>\n                            )\n                          ) : (\n                            sortArrow\n                          )}\n                        </span>\n                      </div>\n                      <div\n                        {...column.getResizerProps()}\n                        className={`resizer ${\n                          column.isResizing ? \"isResizing\" : \"\"\n                        }`}\n                      />\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHead>\n          <TableBody id={`${testId}_tbody`}>\n            {gridRows.length > 0 ? (\n              gridRows.map((row, i) => {\n                prepareRow(row);\n                return (\n                  <React.Fragment>\n                    <TableRow\n                      {...row.getRowProps()}\n                      className={`${row.original.is_deleted ? \"ghost\" : \"\"} ${\n                        row && row.isSelected ? \"dg_row_selected\" : \"\"\n                      } dg_row`}\n                    >\n                      {props.SubComponent != null && (\n                        <TableCell>\n                          <IconButton\n                            aria-label=\"expand row\"\n                            size=\"small\"\n                            onClick={() => setOpen({ [i]: !open[i] })}\n                          >\n                            {open[i] ? (\n                              <KeyboardArrowUpIcon />\n                            ) : (\n                              <KeyboardArrowDownIcon />\n                            )}\n                          </IconButton>\n                        </TableCell>\n                      )}\n\n                      {//eslint-disable-next-line array-callback-return\n                      row.cells.map(cell => {\n                        if (\n                          cell.column.id === \"expand\" ||\n                          //eslint-disable-next-line eqeqeq\n                          cell.column.id == undefined\n                        ) {\n                          //eslint-disable-next-line array-callback-return\n                          return;\n                        }\n                        if (\n                          props.hideCheckbox &&\n                          cell.column.id === \"selection\"\n                        ) {\n                          //eslint-disable-next-line array-callback-return\n                          return;\n                        }\n                        return (\n                          <TableCell\n                            {...cell.getCellProps({\n                              onClick: () => {\n                                props.onRowCellClick &&\n                                  props.onRowCellClick(\n                                    { id: cell.column.id },\n                                    cell.row.original\n                                  );\n                              }\n                            })}\n                          >\n                            {cell.render(\"Cell\")}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                    {props.SubComponent != null && (\n                      <Collapse in={open[i]} timeout=\"auto\" unmountOnExit>\n                        <TableRow>\n                          <TableCell style={{ padding: \"0\" }}>\n                            <div style={{ width: \"100%\" }}>\n                              <SubComponent\n                                data={row.original}\n                                getData={props.getData}\n                                subComponentDetails={props.subComponentDetails}\n                              />\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      </Collapse>\n                    )}\n                  </React.Fragment>\n                );\n              })\n            ) : (\n              <div id={`${testId}_tLoader`}>\n                {props.noDataText ? (\n                  <GridLoader />\n                ) : (\n                  <GridNoDataText noDataText={\"No rows found\"} />\n                )}\n              </div>\n            )}\n          </TableBody>\n        </MaUTable>\n      </TableContainer>\n      {props.showPagination ? (\n        <GridFooter\n          {...props}\n          pageIndex={pageIndex}\n          gridPageSize={pageSize}\n          setPageSize={setPageSize}\n          gotoPage={gotoPage}\n          nextPage={nextPage}\n          previousPage={previousPage}\n        />\n      ) : null}\n    </Paper>\n  );\n}\n\nDataGrid.defaultProps = {\n  keyAsTestId: true,\n  noDataText: false,\n  noRowsFound: false,\n  defaultPageSize: 25,\n  showPagination: true,\n  usePaginationWithApi: true,\n  hideCheckbox: false,\n  allSelected: false,\n  SubComponent: () => {},\n  subComponentDetails: [],\n  getData: () => {},\n  onRowCellClick: () => {},\n  onResizedChange: () => {},\n  totalSize: 0,\n  page: 1,\n  pages: 0,\n  pageSize: 25,\n  canNext: false,\n  canPrevious: false,\n  isSingleSelect: false\n};\n\nDataGrid.propTypes = {\n  keyAsTestId: PropTypes.bool,\n  noDataText: PropTypes.bool,\n  columns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  defaultPageSize: PropTypes.number,\n  showPagination: PropTypes.bool,\n  onRowCellClick: PropTypes.func,\n  onSortedChange: PropTypes.func,\n  onResizedChange: PropTypes.func,\n  page: PropTypes.number.isRequired,\n  pages: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  canPrevious: PropTypes.bool,\n  canNext: PropTypes.bool,\n  totalSize: PropTypes.number.isRequired,\n  usePaginationWithApi: PropTypes.bool,\n  hideCheckbox: PropTypes.bool,\n  SubComponent: PropTypes.func,\n  subComponentDetails: PropTypes.arrayOf(PropTypes.shape({})),\n  getData: PropTypes.func,\n  isSingleSelect: PropTypes.bool\n};\nexport default React.memo(DataGrid);\n","import DataGrid from \"./CCReactTableMUI\";\n\nexport default DataGrid;\n","import React, { Component, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { injectIntl } from \"react-intl\";\nimport  DataGridHelper from \"../../datagrid/DataGridHelper\";\nimport DataGrid from \"../../CCReactTable-MUI\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport IconMUI from \"../../icon/IconMui\";\n// import DataGrid from \"../../data-grid-mui/DataGrid\"\nimport get from \"lodash/get\";\nimport {\n  withCCDataGrid,\n  withLoading,\n  withEntities,\n  withPagination,\n  withSorted,\n  withChecked,\n  withCheckedTbody\n} from \"../../CCDataGrid-MUI/HOCs\";\nimport ActionDropdownMUI from \"../../action-dropdown-button-mui/index\";\n\nconst ReactTableAdapter = WrappedComponent => {\n  const Ret = props => {\n    const {\n      ccDataGrid,\n      isLoading,\n      sorted,\n      page,\n      pages,\n      pageSize,\n      total,\n      // columns,\n      // search,\n      checked,\n      entities,\n\n      // actionCreators\n      updateSorted,\n      updatePage,\n      updatePageSize,\n      setColumnWidth,\n      uncheckAll,\n      checkRows,\n      uncheckRow,\n      // Direct Props\n      columns: columnsProp,\n      intl,\n      ...rest\n    } = props;\n    const {\n      onActions,\n      tbodyProps,\n      onRowCellClick,\n      processRecords,\n      columnsModel,\n      columnsDefinition,\n      SubComponent,\n      subComponentDetails,\n      getData,\n      testId,\n      columnsData\n    } = ccDataGrid;\n    const {\n      ccDataGridId,\n      hideCheckbox,\n      pagination,\n      isSingleSelect,\n      showPagination = true,\n      localSearch = false\n    } = ccDataGrid.config;\n\n    let columns = columnsProp\n      ? columnsProp\n      : columnsData\n      ? columnsData\n      : DataGridHelper.getCCDataGridColumnDefinitions(\n          columnsModel,\n          columnsDefinition\n        );\n    let allChecked = null;\n    let checkBoxColumn = [];\n    let currentEntities = entities;\n    if (pagination === false) {\n      currentEntities = currentEntities.splice((page - 1) * pageSize, pageSize);\n    }\n    let processedEntities =\n      (processRecords && processRecords(currentEntities)) || currentEntities;\n\n    columns = useMemo(() => {\n      if (!hideCheckbox) {\n        // hideCheckbox prop is used to hide the checkbox\n        checkBoxColumn = [\n          {\n            accessor: \"_rowId\",\n            id: \"selection\",\n            minWidth: 60,\n            width: 60,\n            maxWidth: 60,\n            Header: () =>\n              isSingleSelect ? (\n                \"\"\n              ) : (\n                <div className=\"checkbox-cell\">\n                  <Checkbox\n                    // id={`cc_id_${testId}_th_selection`}\n                    checked={allChecked}\n                    onClick={e => {\n                      e.stopPropagation();\n                      if (allChecked) {\n                        uncheckAll();\n                      } else {\n                        checkRows(...processedEntities.map(row => row._rowId));\n                      }\n                    }}\n                    onChange={() => {}}\n                  />\n                  {/* <label htmlFor={`cc_id_${testId}_th_selection`} /> */}\n                </div>\n              ),\n            Cell: cell => (\n              <div className=\"checkbox-cell\">\n                <Checkbox\n                  id={`cc_id_${testId}_tr_${cell.row.id}_selection`}\n                  checked={checked[cell.value] !== undefined}\n                  onClick={e => {\n                    e.stopPropagation();\n                    if (checked[cell.value]) {\n                      uncheckRow(cell.value);\n                    } else {\n                      if (isSingleSelect) {\n                        uncheckAll();\n                      }\n                      checkRows(cell.value);\n                    }\n                  }}\n                  onChange={() => {}}\n                />\n                <label\n                  htmlFor={`cc_id_${testId}_tr_${cell.row.id}_selection`}\n                />\n              </div>\n            )\n          }\n        ];\n      }\n      if (!onActions && !hideCheckbox) {\n        allChecked =\n          Object.keys(checked).length === get(processedEntities, \"length\");\n        if (Object.keys(checked).length === 0) allChecked = false;\n        columns = [\n          ...checkBoxColumn,\n          ...columns // TODO: add logic to filter/order columns\n        ];\n        return columns;\n      } else if (onActions) {\n        allChecked =\n          Object.keys(checked).length === get(processedEntities, \"length\");\n        if (Object.keys(checked).length === 0) allChecked = false;\n        columns = [\n          ...checkBoxColumn,\n          {\n            Header: intl.formatMessage({\n              id: `cc_id_${testId}_th_available_actions`,\n              defaultMessage: \"Action\"\n            }),\n            accessor: \"available_actions\",\n            className: \"no-ellipsis\",\n            sortable: false,\n            minWidth: 80,\n            width: 80,\n            maxWidth: 80,\n            Cell: cell => {\n              return (\n                <ActionDropdownMUI\n                  testId={`cc_id_${testId}_tr_${cell.row.id}_avaialble_actions`}\n                  title={<IconMUI icon={ArrowDropDownIcon} />}\n                  options={cell.value}\n                  onMenuItemClick={actionKey => {\n                    onActions(\n                      ccDataGridId,\n                      actionKey,\n                      cell.original\n                        ? cell.original._rowId\n                        : cell.row.original._rowId,\n                      cell.original ? cell.original : cell.row.original\n                    );\n                  }}\n                  menuAlign=\"left\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  customButtonStyle={{\n                    maxWidth: \"26px\",\n                    maxHeight: \"26px\",\n                    minWidth: \"26px\",\n                    minHeight: \"26px\"\n                  }}\n                />\n              );\n            }\n          },\n          ...columns // TODO: add logic to filter/order columns\n        ];\n\n        return columns;\n      } else {\n        return columns;\n      }\n    }, [columns, checked, hideCheckbox, isSingleSelect, processedEntities]);\n\n    const paginationCheck = localSearch && total <= 50 ? false : pagination;\n    const onPageChange = useCallback(\n      pageIndex => {\n        return props.updatePage(\n          pageIndex + 1,\n          props.ccDataGrid.config.pagination\n        );\n      },\n      [props.ccDataGrid.config.pagination]\n    );\n\n    const onPageSizeChange = useCallback(\n      (pageSize, pageIndex) => {\n        props.updatePage(pageIndex + 1, false); // don't refresh grid\n        props.updatePageSize(pageSize, props.ccDataGrid.config.pagination);\n      },\n      [props.ccDataGrid.config.pagination]\n    );\n    const onSortedChange = useCallback(newSorted => {\n      return props.updateSorted(newSorted);\n    }, []);\n\n    const onResizedChange = useCallback(newResized => {\n      const { setColumnWidth } = props;\n      setColumnWidth(newResized);\n    }, []);\n    return (\n      <WrappedComponent\n        manual\n        hideCheckbox={hideCheckbox}\n        noDataText={\n          isLoading && processedEntities && processedEntities.length === 0\n            ? true\n            : false\n        }\n        data={processedEntities}\n        pages={pages}\n        page={page}\n        onPageChange={onPageChange}\n        pageSize={pageSize}\n        onPageSizeChange={onPageSizeChange}\n        onResizedChange={onResizedChange}\n        // SubComponent={\n        //   SubComponent\n        //     ? row => (\n        //         <SubComponent\n        //           data={row.original}\n        //           getData={getData}\n        //           subComponentDetails={subComponentDetails}\n        //         />\n        //       )\n        //     : null\n        // }\n        freezeWhenExpanded\n        totalSize={total}\n        sorted={sorted}\n        onSortedChange={onSortedChange}\n        showPagination={paginationCheck}\n        usePaginationWithApi={pagination !== undefined ? pagination : true}\n        // {...tbodyProps}\n        columns={columns}\n        testId={testId || ccDataGridId}\n        SubComponent={SubComponent || null}\n        subComponentDetails={subComponentDetails}\n        getData={getData}\n        onRowCellClick={onRowCellClick}\n        {...rest}\n      />\n    );\n  };\n\n  Ret.propTypes = {\n    ccDataGrid: PropTypes.shape().isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    sorted: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    checked: PropTypes.shape().isRequired,\n    entities: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n    updateSorted: PropTypes.func.isRequired,\n    updatePage: PropTypes.func.isRequired,\n    updatePageSize: PropTypes.func.isRequired,\n    uncheckAll: PropTypes.func.isRequired,\n    checkRows: PropTypes.func.isRequired,\n    uncheckRow: PropTypes.func.isRequired,\n    columns: PropTypes.arrayOf(PropTypes.shape()),\n    hideCheckbox: PropTypes.bool\n  };\n\n  return Ret;\n};\n\nconst TBody = compose(\n  injectIntl,\n  withCCDataGrid,\n  withLoading,\n  withEntities,\n  withPagination,\n  withSorted,\n  withCheckedTbody,\n  ReactTableAdapter\n)(DataGrid);\n\nexport default TBody;\n","import { createSelector } from \"reselect\";\nimport { intersection, filter } from \"lodash\";\nimport { getLogin } from \"../../state/selectors\";\nimport { SPOG_GRID_PROPERTIES } from \"../../utils/appConstants\";\n\n// selectors\nconst columnData = state => state.reducer.columnData;\n//Protect Reducer\nconst UIVersion = state => state.reducer.uiVersion;\nconst APIVersion = state => state.reducer.apiVersion;\n\n//Reducer\nconst contextualAction = state => state.reducer.contextualAction;\nconst advancedSearchParam = state => state.reducer.advancedSearchParam;\nconst contextualBulkAction = state => state.reducer.contextualBulkAction;\nconst showConfirmationModal = state => state.reducer.showConfirmationModal;\nexport const advancedSearchOptions = state => state.reducer.options;\nconst currentSearchOptions = state => state.reducer.currentSearchOptions;\nexport const searchText = state => state.reducer.searchText;\nconst searchOption = state => state.reducer.searchOption;\nconst showCurrentSearch = state => state.reducer.showCurrentSearch;\nconst userSearchData = state => state.reducer.userSearchData;\nconst optionsForTags = state => state.reducer.optionsForTags;\nconst selectedSavedSearch = state => state.reducer.selectedSavedSearch;\nconst selectedSavedSearchName = state => state.reducer.selectedSavedSearchName;\nconst selectedSavedSearchId = state => state.reducer.selectedSavedSearchId;\n// datagrid\nconst checkboxSelection = state => state.reducer.selection;\nconst checkboxAllSelected = state => state.reducer.selectAll;\nconst apiResponse = state => state.reducer.apiResponse;\nconst showDestinationModal = state => state.reducer.showDestinationModal;\nconst bulkAction = state => {\n  let checkboxArray = checkboxSelection(state) || [];\n  let actionsArray = checkboxArray.reduce((accumulator, currentValue) => {\n    accumulator.push(\n      currentValue[SPOG_GRID_PROPERTIES.ACTION_KEY.AVAILABLE_ACTIONS]\n    );\n    return accumulator;\n  }, []);\n  return filter(\n    intersection(...actionsArray),\n    object =>\n      SPOG_GRID_PROPERTIES.BULK_ACTION_UNSUPPORTED.indexOf(object) === -1\n  );\n};\n\nexport const makeContextualBulkActionState = () =>\n  createSelector(\n    [contextualBulkAction],\n    contextualBulkAction => contextualBulkAction\n  );\n\n//datagrid header\nconst showSaveSearchModal = state => state.reducer.showSaveSearchModal;\nconst showSaveSearchClearAllOnDefault = state =>\n  state.reducer.showSaveSearchClearAllOnDefault;\nconst showAdvancedSearch = state => state.reducer.showAdvancedSearch;\nconst selectedRows = state => state.reducer.selectedRows;\n\n//saved searches\nconst systemDefinedSearchData = state => state.reducer.systemSearchData;\nconst successSaveSearch = state => state.reducer.successSaveSearch;\n\nexport const getStartFailback = state => state.reducer.startFailback;\n\n//Manage saved search\nconst columnConfiguredData = state => state.reducer.columnData;\nconst showManagedSearchModal = state => state.reducer.showManagedSearchModal;\nconst manageSettingColumn = state => state.reducer.columnData;\nconst licenseDetails = state => state.configureReducer.licenseDetails;\nexport const makeLicenseDetailsState = () =>\n  createSelector([licenseDetails], licenseDetails => licenseDetails);\n\nexport const browseRemoteConsoleLoading = state =>\n  state.reducer.browseRemoteConsole\n    ? state.reducer.browseRemoteConsole.isLoading\n    : [];\n\nconst browseRemoteConsoleData = state =>\n  state.reducer.browseRemoteConsole.data\n    ? state.reducer.browseRemoteConsole.data.data\n    : [];\nexport const makeBrowseRemoteConsoleState = () =>\n  createSelector(\n    [browseRemoteConsoleData],\n    browseRemoteConsoleData => browseRemoteConsoleData\n  );\n//form\nconst form = state => state.form;\n\nexport const roleId = state => getLogin(state).role_id;\n\n// reselect functions\n\n\nexport const makeContextualActionState = () =>\n  createSelector([contextualAction], contextualAction => contextualAction);\nexport const makeAdvancedSearchParamState = () =>\n  createSelector(\n    [advancedSearchParam],\n    advancedSearchParam => advancedSearchParam\n  );\n\nexport const makeFormState = () => createSelector([form], form => form);\nexport const makeConfirmationModalDisplayState = () =>\n  createSelector(\n    [showConfirmationModal],\n    showConfirmationModal => showConfirmationModal\n  );\nexport const makeColumnDataState = () =>\n  createSelector([columnData], columnData => columnData);\nexport const makeSearchOptionState = () =>\n  createSelector([searchOption], searchOption => searchOption);\nexport const makeShowCurrentSearchState = () =>\n  createSelector([showCurrentSearch], showCurrentSearch => showCurrentSearch);\nexport const makeUserSearchDataState = () =>\n  createSelector([userSearchData], userSearchData => userSearchData);\nexport const makeSavedSearchDataState = () =>\n  createSelector([userSearchData], userSearchData => userSearchData);\nexport const makeOptionsForTagsState = () =>\n  createSelector([optionsForTags], optionsForTags => optionsForTags);\nexport const makeSelectedSavedSearchState = () =>\n  createSelector(\n    [selectedSavedSearch],\n    selectedSavedSearch => selectedSavedSearch\n  );\nexport const makeSelectedSavedSearchNameState = () =>\n  createSelector(\n    [selectedSavedSearchName],\n    selectedSavedSearchName => selectedSavedSearchName\n  );\nexport const makeSelectedSavedSearchIdState = () =>\n  createSelector(\n    [selectedSavedSearchId],\n    selectedSavedSearchId => selectedSavedSearchId\n  );\nexport const makeSearchTextState = () =>\n  createSelector([searchText], searchText => searchText);\nexport const makeShowDestinationModalState = () =>\n  createSelector(\n    [showDestinationModal],\n    showDestinationModal => showDestinationModal\n  );\nexport const makeAdvancedSearchOptionsState = () =>\n  createSelector(\n    [advancedSearchOptions],\n    advancedSearchOptions => advancedSearchOptions\n  );\nexport const makeCurrentSearchOptionsState = () =>\n  createSelector(\n    [currentSearchOptions],\n    currentSearchOptions => currentSearchOptions\n  );\n\n//datagrid\nexport const makeCheckboxSelectionState = () =>\n  createSelector([checkboxSelection], checkboxSelection => checkboxSelection);\nexport const makeCheckboxAllSelectedState = () =>\n  createSelector(\n    [checkboxAllSelected],\n    checkboxAllSelected => checkboxAllSelected\n  );\n//datagrid header\nexport const makeShowSaveSearchModalState = () =>\n  createSelector(\n    [showSaveSearchModal],\n    showSaveSearchModal => showSaveSearchModal\n  );\nexport const makeClearAllOnDefaultState = () =>\n  createSelector(\n    [showSaveSearchClearAllOnDefault],\n    showSaveSearchClearAllOnDefault => showSaveSearchClearAllOnDefault\n  );\nexport const makeShowAdvancedSearchState = () =>\n  createSelector(\n    [showAdvancedSearch],\n    showAdvancedSearch => showAdvancedSearch\n  );\nexport const makeSelectedRowsState = () =>\n  createSelector([selectedRows], selectedRows => selectedRows);\n//saved searches\nexport const makeSystemDefinedSearchState = () =>\n  createSelector(\n    [systemDefinedSearchData],\n    systemDefinedSearchData => systemDefinedSearchData\n  );\nexport const makeSuccessSaveSearchState = () =>\n  createSelector([successSaveSearch], successSaveSearch => successSaveSearch);\nexport const makeColumnConfiguredDataState = () =>\n  createSelector(\n    [columnConfiguredData],\n    columnConfiguredData => columnConfiguredData\n  );\n\nexport const makeShowManagedSearchModalState = () =>\n  createSelector(\n    [showManagedSearchModal],\n    showManagedSearchModal => showManagedSearchModal\n  );\nexport const makeManageSettingColumnState = () =>\n  createSelector(\n    [manageSettingColumn],\n    manageSettingColumn => manageSettingColumn\n  );\nexport const makeBulkActionState = () =>\n  createSelector([bulkAction], bulkAction => bulkAction);\nexport const makeApiResponse = () =>\n  createSelector([apiResponse], apiResponse => apiResponse);\n\nexport const getUIVersion = () =>\n  createSelector([UIVersion], UIVersion => UIVersion);\n\nexport const getAPIVersion = () =>\n  createSelector([APIVersion], APIVersion => APIVersion);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport FormattedBrandMessage from \"../../FormattedBrandMessage\";\nimport { makeManageSettingColumnState } from \"../../../../state/selectors/CommonSelectors\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\nimport IconMUI from \"../../icon/IconMui\";\n// import { handleLinkColor } from \"state/selectors/ui\";\nimport * as ccDataGridActions from \"../../../../state/actions/ccDataGrid\";\nimport { updateColumnStateData } from \"../../../../state/actions/actions\";\n\nconst CheckBoxItem = ({\n  updateColumnStateData,\n  updateGridCheckBoxSettings,\n  column,\n  index,\n  columnData,\n  linkColor,\n  filterType\n}) => {\n  /**\n   * Updating colmn in state show hide true/false\n   */\n  const updateColumnShowHide = (e, column, stateColumnData, filterType) => {\n    updateColumnStateData(column, stateColumnData, filterType);\n    updateGridCheckBoxSettings(column, stateColumnData, filterType);\n  };\n\n  let checkedVar = column.show;\n  return (\n    <li key={index} className=\"d-flex align-items-end\">\n      <Checkbox\n        id={\"gridSettings\" + index}\n        checked={checkedVar}\n        onChange={e => updateColumnShowHide(e, column, columnData, filterType)}\n      />\n      <label\n        htmlFor={\"gridSettings\" + index}\n        style={{\n          width: \"73%\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          fontSize: \"13px\"\n        }}\n      >\n        <FormattedBrandMessage id={column.identifier} />\n      </label>\n      <span\n        className=\"dragDropHandle\"\n        style={{\n          display: \"block\",\n          width: \"15px\",\n          position: \"absolute\",\n          right: \"0\",\n          bottom: \"0\",\n          cursor: \"move\"\n        }}\n      >\n        {\" \"}\n        <IconMUI icon={DragIndicatorIcon} style={{ color: linkColor }} />{\" \"}\n      </span>\n    </li>\n  );\n};\n\nCheckBoxItem.defaultProps = {\n  column: {},\n  columnData: []\n};\n\nCheckBoxItem.propTypes = {\n  updateColumnStateData: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  columnData: PropTypes.arrayOf(PropTypes.shape({})),\n  filterType: PropTypes.string,\n  reducer: PropTypes.object\n};\n\n/**\n * Using makeMapStateToProps to memoize a selectorFunction for reusability\n * This will create a new instance of selector function\n * every time it is needed for proper memoization in multiple components.\n */\nconst makeMapStateToProps = () => {\n  /**\n   * create a new instance of selector function\n   * This makes it independent of any other selector function\n   * and it will properly memoize across multiple mounted & connected components.\n   */\n  const getManageSettingColumnState = makeManageSettingColumnState();\n\n  const mapStateToProps = (state, props) => {\n    return {\n      /**\n       * Use selector function instance to update Props.\n       */\n      columnData: getManageSettingColumnState(state, props),\n      linkColor: '',\n      primaryNavigation: state.reducer.primaryNavigation\n    };\n  };\n  return mapStateToProps;\n};\nconst mapDispatchToProps = dispatch => ({\n  updateColumnStateData: (column, stateColumnData, filterType) =>\n    dispatch(updateColumnStateData(column, stateColumnData, filterType)),\n  updateGridCheckBoxSettings: (column, stateColumnData, filterType) =>\n    dispatch(\n      ccDataGridActions.manageGridCheckBoxSettings(\n        column,\n        stateColumnData,\n        filterType\n      )\n    )\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(CheckBoxItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport DropdownButton from \"../../dropdown-button-mui\";\nimport PropTypes from \"prop-types\";\nimport ReactGridLayout from \"react-grid-layout\";\nimport CheckBoxItem from \"./CheckBoxItem\";\nimport {\n  // updateCurrentSearchFromSaved,\n  // showManageSearchModal,\n  updateReorderColumns\n} from \"../../../../state/actions/actions\";\n// import ManageSavedSearches from \"../../manage-saved-searches-ccDataGrid/index\";\nimport FormattedMessage from \"../../formatted-message\";\nimport Button from \"../../button\";\nimport {\n  makeColumnConfiguredDataState,\n  makeShowManagedSearchModalState,\n  makeSavedSearchDataState\n} from \"../../../../state/selectors/CommonSelectors\";\nimport * as ccDataGridActions from \"../../../../state/actions/ccDataGrid\";\nimport * as ccDataGridSelectors from \"../../../../state/selectors/ccDataGrid\"\nconst GridSettings = ({\n  // showManageSearchModal,\n  userSearchData,\n  // updateCurrentSearchFromSaved,\n  updateReorderColumns,\n  columnsModelData,\n  columnConfiguredData,\n  filterType,\n  className,\n  title,\n  testId,\n  disableManageSaveSearches,\n  showManageSettingsModal,\n  reOrderColumns\n}) => {\n  /**\n   * stop event propagation on drag\n   */\n  // const handleModalEvent = () => {\n  //   showManageSearchModal(true);\n  //   if (userSearchData.length > 0) {\n  //     const selectedOptions = userSearchData[0].options;\n  //     const searchString = userSearchData[0].searchString;\n  //     updateCurrentSearchFromSaved({\n  //       selectedOptions,\n  //       searchString\n  //     });\n  //   }\n  // };\n\n  /**\n   * stop event propagation on drag\n   */\n  const handleOnDragEvent = (l, n, p, li, e) => {\n    e.stopPropagation();\n  };\n\n  const handleReorderCols = (layout, oldItem, newItem) => {\n    updateReorderColumns(\n      columnsModelData,\n      oldItem,\n      newItem,\n      columnConfiguredData,\n      filterType\n    );\n    reOrderColumns(\n      columnsModelData,\n      oldItem,\n      newItem,\n      columnConfiguredData,\n      filterType\n    );\n  };\n\n  const renderManageOverlayHeader = columnsDataArr => {\n    let isDisabled = !(userSearchData && userSearchData.length > 0);\n    return (\n      <ul\n        className=\"manage-header-wrapper\"\n        style={{\n          margin: 0,\n          padding: 0,\n          listStyle: \"none\"\n        }}\n      >\n        <li eventkey=\"1\">\n          {/* <Button\n            type=\"button\"\n            disabled={isDisabled}\n            className={isDisabled ? \"disabled\" : \"\"}\n            content={<FormattedMessage id=\"manage_saved_search\" />}\n            color=\"secondary\"\n            variant=\"default\"\n            style={{\n              fontSize: 12,\n              border: \"none\",\n              background: \"transparent\"\n            }}\n            onClick={() => handleModalEvent()}\n          /> */}\n        </li>\n        {columnsDataArr && columnsDataArr.length > 0 && <hr />}\n      </ul>\n    );\n  };\n\n  let layout = [];\n  let width = 170;\n  let height = 30;\n  let columnsTempDataArr = columnsModelData || [];\n  let columnsDataArr = JSON.parse(\n    JSON.stringify(Object.assign([], columnsTempDataArr))\n  );\n  if (columnsDataArr && columnsDataArr.length > 0) {\n    columnsDataArr.splice(0, 2);\n    columnsDataArr.forEach((obj, index) => {\n      if (obj.show) {\n        layout.push({\n          i: \"set_\" + obj.identifier,\n          x: 0,\n          y: index,\n          w: 1,\n          h: 1,\n          isResizable: false\n        });\n      } else {\n        layout.push({\n          i: \"set_\" + obj.identifier,\n          x: 0,\n          y: index,\n          w: 1,\n          h: 1,\n          isResizable: false,\n          isDraggable: false\n        });\n      }\n    });\n  }\n\n  return (\n    <div className={className} style={{ marginTop: \"5px\" }}>\n      <DropdownButton\n        closeOnClick={false}\n        testId={testId}\n        title={title}\n        pullRight\n        color=\"secondary\"\n        variant=\"outlined\"\n        customButtonStyle={{ marginBottom: 5, padding: 7.5 }}\n        className=\"manage-settings-overlay no-text\"\n        showManageSettingsModal={showManageSettingsModal}\n      >\n        {!disableManageSaveSearches &&\n          userSearchData &&\n          userSearchData.length > 0 &&\n          renderManageOverlayHeader(columnsDataArr)}\n        {columnsDataArr && columnsDataArr.length > 0 && (\n          <ReactGridLayout\n            style={{ width: 250, maxHeight: 330 }}\n            className=\"layout\"\n            layout={layout}\n            cols={1}\n            rowHeight={height}\n            width={width}\n            onDragStart={handleOnDragEvent}\n            onDragStop={handleReorderCols}\n            draggableHandle=\".dragDropHandle\"\n          >\n            {columnsDataArr.map((item, i) => {\n              let keyIndex = i;\n              return (\n                <div key={\"set_\" + item.identifier}>\n                  <CheckBoxItem\n                    column={item}\n                    index={keyIndex}\n                    key={keyIndex}\n                    filterType={filterType}\n                  />\n                </div>\n              );\n            })}\n          </ReactGridLayout>\n        )}\n      </DropdownButton>\n\n      {/* <ManageSavedSearches\n        filterType={filterType}\n        show={showManageSettingsModal}\n      /> */}\n    </div>\n  );\n};\n\nGridSettings.defaultProps = {\n  userSearchData: [],\n  title: \"Select\",\n  className: \"\",\n  columnsModelData: []\n};\n\nGridSettings.propTypes = {\n  showManageSettingsModal: PropTypes.bool.isRequired,\n  disableManageSaveSearches: PropTypes.bool.isRequired,\n  columnConfiguredData: PropTypes.arrayOf(PropTypes.shape({})),\n  filterType: PropTypes.string.isRequired,\n  userSearchData: PropTypes.arrayOf(PropTypes.shape({})),\n  // showManageSearchModal: PropTypes.func.isRequired,\n  updateReorderColumns: PropTypes.func.isRequired,\n  // updateCurrentSearchFromSaved: PropTypes.func.isRequired,\n  title: PropTypes.shape({}),\n  className: PropTypes.string,\n  columnsModelData: PropTypes.arrayOf(PropTypes.shape({}))\n};\n\n/**\n * Using makeMapStateToProps to memoize a selectorFunction for reusability\n * This will create a new instance of selector function\n * every time it is needed for proper memoization in multiple components.\n */\nconst makeMapStateToProps = () => {\n  /**\n   * create a new instance of selector function\n   * This makes it independent of any other selector function\n   * and it will properly memoize across multiple mounted & connected components.\n   */\n  const getColumnConfiguredDataState = makeColumnConfiguredDataState();\n  const getShowManagedSearchModalState = makeShowManagedSearchModalState();\n  const getSavedSearchDataState = makeSavedSearchDataState();\n\n  const mapStateToProps = (state, props) => {\n    return {\n      /**\n       * Use selector function instance to update Props.\n       */\n      columnConfiguredData: getColumnConfiguredDataState(state, props),\n      showManageSettingsModal: getShowManagedSearchModalState(state, props),\n      userSearchData: getSavedSearchDataState(state, props)\n    };\n  };\n  return mapStateToProps;\n};\nconst mapDispatchToProps = dispatch => ({\n  updateReorderColumns: (\n    columnsModelData,\n    oldItem,\n    newItem,\n    columnConfiguredData,\n    filterType\n  ) =>\n    dispatch(\n      updateReorderColumns(\n        columnsModelData,\n        oldItem,\n        newItem,\n        columnConfiguredData,\n        filterType\n      )\n    ),\n  // showManageSearchModal: value => dispatch(showManageSearchModal(value)),\n  // updateCurrentSearchFromSaved,\n  reOrderColumns: (\n    columnsModelData,\n    oldItem,\n    newItem,\n    columnConfiguredData,\n    filterType\n  ) =>\n    dispatch(\n      ccDataGridActions.ccDataGridReOrderColumns(\n        columnsModelData,\n        oldItem,\n        newItem,\n        columnConfiguredData,\n        filterType\n      )\n    )\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(GridSettings);\n","import GridSettings from \"./GridSettings\";\n\nexport default GridSettings;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport * as ccDataGridActions from \"../../../../state/actions/ccDataGrid\";\nimport Grid from '@mui/material/Grid'; \n\nimport {\n  CCDataGridProvider,\n  TBody,\n  THeader\n} from \"../../CCDataGrid-MUI\";\n\nclass CCTableUnconnected extends PureComponent {\n  componentDidMount() {\n    const {\n      initialize,\n      fetchData,\n      config: { pollInterval }\n    } = this.props;\n    initialize();\n\n    if (pollInterval) {\n      this.pollTimer = setInterval(() => {\n        fetchData(pollInterval);\n      }, pollInterval * 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n    }\n  }\n\n  render() {\n    const {\n      config,\n      additionalParameters,\n      children,\n      onActions,\n      AdvancedSearchForm = null,\n      advancedSearchOptions = [],\n      processRecords,\n      onRowCellClick,\n      filterType,\n      gridHeaderButtons,\n      groupActionHandler,\n      addSourceOptionClick,\n      columnsModel,\n      columnsDefinition,\n      showAddSourceComponent,\n      SubComponent,\n      subComponentDetails,\n      getData,\n      testId,\n      columnsData,\n      ccDataGridCloneId,\n      ...tbodyProps\n    } = this.props;\n    let ccDataGridUniqueId = config.ccDataGridId;\n    if (ccDataGridCloneId) {\n      ccDataGridUniqueId = ccDataGridCloneId;\n    }\n    return (\n      <CCDataGridProvider\n        value={{\n          config,\n          additionalParameters,\n          onActions,\n          AdvancedSearchForm,\n          advancedSearchOptions,\n          tbodyProps,\n          processRecords,\n          onRowCellClick,\n          filterType,\n          gridHeaderButtons,\n          columnsModel,\n          columnsDefinition,\n          SubComponent,\n          subComponentDetails,\n          getData,\n          groupActionHandler,\n          showAddSourceComponent,\n          addSourceOptionClick,\n          testId,\n          ccDataGridUniqueId,\n          columnsData\n        }}\n      >\n        <div>\n          {children.length === 0 ? (\n            <div className=\"spog-data-grid-wrapper d-flex\">\n              <Grid container className=\"spog-data-grid-wrapper d-flex\">\n                <Grid item sm={12}>\n              <THeader />\n              </Grid>\n              <Grid item sm={12}\n               id=\"export-container-pdf\"\n               style={{\n                 display: \"flex\",\n                 flexDirection: \"column\",\n                 position: \"relative\",\n                 overflow: \"auto\",\n                 height:'450px',\n                minHeight:'200px',\n                //  maxheight: \"400px\",\n               }}> \n                <TBody />\n                </Grid>\n                </Grid>\n              </div>\n          ) : (\n            <div className=\"spog-data-grid-wrapper d-flex\">\n              {children}\n            </div>\n          )}\n        </div>\n      </CCDataGridProvider>\n    );\n  }\n}\n\nCCTableUnconnected.propTypes = {\n  initialize: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  config: PropTypes.shape({\n    pollInterval: PropTypes.number\n  }).isRequired,\n  additionalParameters: PropTypes.shape().isRequired,\n  AdvancedSearchForm: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  processRecords: PropTypes.func,\n  advancedSearchOptions: PropTypes.shape([]),\n  onActions: PropTypes.func.isRequired,\n  onRowCellClick: PropTypes.func.isRequired,\n  filterType: PropTypes.string.isRequired,\n  gridHeaderButtons: PropTypes.element.isRequired,\n  groupActionHandler: PropTypes.func.isRequired,\n  addSourceOptionClick: PropTypes.func.isRequired,\n  columnsModel: PropTypes.shape([]).isRequired,\n  columnsDefinition: PropTypes.shape([]).isRequired,\n  showAddSourceComponent: PropTypes.bool.isRequired,\n  SubComponent: PropTypes.element.isRequired,\n  subComponentDetails: PropTypes.element.isRequired,\n  getData: PropTypes.func.isRequired,\n  testId: PropTypes.string.isRequired,\n  ccDataGridCloneId: PropTypes.string\n};\n\nCCTableUnconnected.defaultProps = {\n  AdvancedSearchForm: null,\n  advancedSearchOptions: [],\n  children: null,\n  processRecords: null,\n  ccDataGridCloneId: \"\"\n};\n\nconst CCTable = connect(\n  () => ({}),\n  (dispatch, ownProps) => ({\n    initialize() {\n      const {\n        additionalParameters,\n        defaultAdvancedSearchOptions = []\n      } = ownProps;\n      let { ccDataGridId, ...restConfig } = ownProps.config;\n      if (ownProps.ccDataGridCloneId) {\n        ccDataGridId = ownProps.ccDataGridCloneId;\n      }\n      dispatch(\n        ccDataGridActions.initialize(\n          ccDataGridId,\n          restConfig,\n          additionalParameters,\n          defaultAdvancedSearchOptions\n        )\n      );\n    },\n    fetchData(pollInterval) {\n      let polling = false;\n      if (pollInterval) polling = true;\n      let { ccDataGridId } = ownProps.config;\n      if (ownProps.ccDataGridCloneId) {\n        ccDataGridId = ownProps.ccDataGridCloneId;\n      }\n      dispatch(ccDataGridActions.fetchData(ccDataGridId, false, polling));\n    }\n  })\n)(CCTableUnconnected);\n\nexport default CCTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport THeader from \"./THeader\";\n//import TBody from \"./TBody\";\nimport TBody from \"./TBody/TBody.js\";\nimport GridSettings from \"./GridSettings/index\";\nimport CCTable from \"./CCTable\";\n\nconst { Provider, Consumer } = React.createContext(\"CCDataGrid\");\n\nexport const CCDataGridProvider = Provider;\nexport const CCDataGridConsumer = Consumer;\n\nconst createCCDataGrid = config => {\n  const Ret = ({ children = [], ...rest }) => (\n    <CCTable config={config} {...rest}>\n      {children}\n    </CCTable>\n  );\n\n  Ret.propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  };\n\n  Ret.defaultProps = {\n    children: []\n  };\n\n  return Ret;\n};\n\nexport { \n  THeader, \n  TBody, \n  CCTable, \n  GridSettings \n};\n\nexport default createCCDataGrid;\n","import  DataGridConstants from \"../../common/datagrid/DataGridConstants\"\n\nconst HeaderTypes = DataGridConstants.GridColumnHeaderTypes;\nconst CellTypes = DataGridConstants.GridColumnCellTypes;\n\nconst COLUMN_DEFS = {\n    columns: [\n        {\n          accessor: \"first_name\",\n          displayIdentifier: \"um.first_name\",\n          renderHeader: { type: HeaderTypes.HEADER_TEXT_MUI },\n          renderRecord: { type: CellTypes.LINK_CELL_MUI },\n          settings: { sortable: false }\n        },\n        {\n          accessor: \"last_name\",\n          displayIdentifier: \"um.last_name\",\n          renderHeader: { type: HeaderTypes.HEADER_TEXT_MUI },\n          renderRecord: { type: CellTypes.SHORT_TEXT_CELL_MUI },\n          settings: { sortable: false }\n        },\n        {\n          accessor: \"username\",\n          displayIdentifier: \"um.username\",\n          renderHeader: { type: HeaderTypes.HEADER_TEXT_MUI },\n          renderRecord: { type: CellTypes.SHORT_TEXT_CELL_MUI },\n          settings: { sortable: false }\n        },\n        {\n          accessor: \"email\",\n          displayIdentifier: \"um.email_address\",\n          renderHeader: { type: HeaderTypes.HEADER_TEXT_MUI },\n          renderRecord: { type: CellTypes.LONG_TEXT_CELL_MUI },\n          settings: { sortable: false }\n        },\n      ],\n  columnData: [\n    {\n      id: \"available_actions\",\n      accessor: \"available_actions\",\n      identifier: \"available_actions\",\n      Header: \"Action\",\n      show: true,\n      sort: false\n    },\n    {\n      id: \"first_name\",\n      accessor: \"first_name\",\n      identifier: \"first_name\",\n      Header: \"First Name\",\n      show: true,\n      sort: false\n    },\n    {\n      id: \"last_name\",\n      accessor: \"last_name\",\n      identifier: \"last_name\",\n      Header: \"Last Name\",\n      show: true,\n      sort: false\n    },\n    {\n      id: \"username\",\n      accessor: \"username\",\n      identifier: \"username\",\n      Header: \"User Name\",\n      show: true,\n      sort: false\n    },\n    {\n      id: \"email\",\n      accessor: \"email\",\n      identifier: \"email\",\n      Header: \"Registered Email Address\",\n      show: true,\n      sort: false\n    },\n    \n   \n  ]\n};\n\nexport default COLUMN_DEFS;\n","import React,{useCallback} from \"react\";\nimport createCCDataGrid from \"../../../components/common/CCDataGrid-MUI\";\nimport { FETCH_SITES } from \"../../../state/api/apiUrlConstants\";\nimport { CCDATAGRID_ID } from \"../../../utils/appConstants\"\nimport COLUMN_DEFS from \"./UmTableConstants\";\n// import createAdvancedSearchForm, {\n//   AdvancedSearchForm\n// } from \"../../../components/common/CCDataGrid-MUI/AdvancedSearchForm\";\nimport Button from \"../../../components/common/button\";\nimport FormattedMessage from \"../../../components/common/formatted-message\";\nimport { showDialog, Dialog } from \"../../../state/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n// import AddPersonModalForm from \"./AddPersonModal\";\n\nconst CCDataGrid = createCCDataGrid({\n  ccDataGridId: CCDATAGRID_ID.USER_MANAGEMENT,\n  primaryKey: \"user_id\",\n  api: FETCH_SITES,\n  persist: true,\n  hideCheckbox: false,\n  hideGridSettings: true\n});\n\n// let AdvancedSearch = (props:any) => (\n//   <AdvancedSearchForm\n//     handleSubmit={props.handleSubmit}\n//     defaultSearchName=\"site_id\"\n//     defaultSearchText=\"Report name contains\"\n//     defaultSearchPlaceholder=\"Search for report\"\n//   />\n// );\n\n// AdvancedSearch = createAdvancedSearchForm(AdvancedSearch);\n\nconst UMTable = () => {\n  const dispatch = useDispatch();\n\n  const ccActionHandler = (ccDataGridId:string, actionKey:string, rowId:string, cell:Array<{}>) => {\n    console.log(\"ccActionHnadler\",rowId,cell);\n  };\n  const ccBulkActionHandler = (\n    ccDataGridId:string,\n    actionKey:string,\n    checkedItems:Array<string>,\n    checkedEntities:Array<{}>\n  ) => {\n    console.log(\"ccBulkAction\",actionKey,checkedItems,checkedEntities);\n  }\n\n  const onRowCellClickHandler = (cell:any,rowInfo:any) => {\n    console.log('cell,rowInfo',cell,'rowInfo')\n  }\n  let sourceGroupsAttributes = {\n    SITE_NAME: \"site_name\"\n  };\n\n  const processRecords = (sourceGroupsData:any) => {\n    sourceGroupsData.forEach((sourceGroup:any) => {\n      //   sourceGroup[SPOG_GRID_PROPERTIES.ID_KEY] =\n      //     sourceGroup[sourceGroupsAttributes.SOURCE_GROUPS_ID];\n      const groupName = sourceGroup[sourceGroupsAttributes.SITE_NAME];\n      if (groupName && !groupName.hasOwnProperty(\"label\")) {\n        sourceGroup[sourceGroupsAttributes.SITE_NAME] = {};\n        sourceGroup[sourceGroupsAttributes.SITE_NAME].label = groupName;\n      }\n    });\n    return sourceGroupsData;\n  };\n\n  const handleDialog = () => {\n    dispatch(showDialog(Dialog.ADD_PERSON));\n  };\n\n  const gridHeaderButtons = () => (\n    <Button\n    //   testId=\"DAzFg2\"\n      className=\"add-destination\"\n      color=\"primary\"\n      content={<FormattedMessage id=\"add.person\" defaultMessage=\"Add Person\" />}\n      onClick={e => {\n        e.preventDefault();\n        handleDialog();\n      }}\n      size=\"large\"\n      variant=\"contained\"\n    />\n  );\n\n  return (\n    <div style={{\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\",\n      marginTop:'60px'\n    }} className=\"\">\n      <CCDataGrid\n        columnsModel={COLUMN_DEFS.columnData}\n        columnsDefinition={COLUMN_DEFS.columns}\n        gridHeaderButtons={gridHeaderButtons()}\n        filterType={CCDATAGRID_ID.USER_MANAGEMENT}\n        processRecords={processRecords}\n        // AdvancedSearchForm={AdvancedSearch}\n        onActions={ccActionHandler}\n        onRowCellClick={onRowCellClickHandler}\n        groupActionHandler = {ccBulkActionHandler}\n        additionalParameters={{ site_type: \"gateway\", product_type: \"udp\" }}\n      />\n      {/* <AddPersonModalForm /> */}\n    </div>\n  );\n};\n\nexport default UMTable;\n","import Navigator from \"./Navigator\";\n\nexport default Navigator;\n","// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { withRouter } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n//import { Tab } from \"../common/tab\";\n//import * as constant from \"../../utils/appConstants\";\n//import logoUrl from \"../../../src/assets/images/default-logo.png\";\n//import { getRoleId } from \"state/selectors\";\nimport Tabs from \"@mui/material/Tabs\";\n// import PhoneIcon from \"@mui/icons-material/FindInPage\";\n// import FavoriteIcon from \"@mui/icons-material/Security\";\n// import PersonPinIcon from \"@mui/icons-material/Backup\";\n// import Configure from \"@mui/icons-material/SettingsBackupRestore\";\n\n// const PrimaryTabMap = {\n//   Monitor: 0,\n//   Protect: 1,\n//   Analyze: 2,\n//   Configure: 3,\n//   Support: 4,\n//   Profile: 5\n// };\n\nconst PrimaryNavigator = (props:any) => {\n  // const menuLen = props && props.menu && props.menu.length;\n\n//   const handleTabActiveValue = active => {\n//     const mapping = {};\n\n//     if (\n//       props &&\n//       props.menu &&\n//       props.menu.length !== Object.keys(PrimaryTabMap).length\n//     ) {\n//       let menusLength = props.menu.length;\n//       let count = 0;\n//       for (let i = 0; i < menusLength; i++) {\n//         let name = props.menu[i].name;\n//         mapping[name] = count;\n//         count++;\n//       }\n//     }\n//     return Object.keys(mapping).length > 0\n//       ? mapping[active]\n//       : PrimaryTabMap[active];\n//   };\n\n//   const handleTabClick = (menu, key) => {\n//     PrimaryTabMap[active] === 0 && props.resetAlertListCount();\n//     props.handleSelectMenu({ selectedMenu: menu, selectedMenuKey: key });\n//     //eslint-disable-next-line default-case\n//     switch (menu) {\n//       case \"Protect\":\n//         props.orgType === constant.MSP_ORG_TYPE\n//           ? props.handleSelectFilter(\"customer-accounts\", \"Customer Accounts\")\n//           : props.handleSelectFilter(\"sources\", \"Sources\"); //this.props.handleSelectFilter(\"sources\", \"Sources\")\n//         break;\n//       case \"Analyze\":\n//         props.handleSelectFilter(\"jobs\", \"Jobs\");\n//         break;\n//       case \"Configure\":\n//         props.orgType === constant.MSP_ORG_TYPE\n//           ? props.handleSelectFilter(\"user_accounts\", \"User Accounts\")\n//           : props.handleSelectFilter(\"hypervisors\", \"Hypervisors\");\n//         break;\n//     }\n//   };\n\n//   const renderTabs = () => {\n//     const active = props.active;\n//     return (\n//       props &&\n//       props.menu &&\n//       props.menu.map(menu => (\n//         <MUITab\n//           testId={menu.testId}\n//           key={menu.id}\n//           menuKey={menu.key}\n//           routeLink={renderLinks(menu.key)}\n//           title={menu.name}\n//           icon={menu.icon}\n//           id={menu.id}\n//           //className=\"navigate-icons d-flex align-items-center flex-column\"\n//           iconWidth=\"50px\"\n//           iconHeight=\"50px\"\n//           onClick={handleTabClick}\n//           active={active}\n//         />\n//       ))\n//     );\n//   };\n\n//   const renderLinks = key => {\n//     let finalLink = \"/configure/access_control/user_accounts\";\n//     if (key === \"Configure\") {\n//       let totalMenu = props.menu.filter(e => e.key === \"Configure\");\n//       let accessControlCheck =\n//         totalMenu[0].subMenu &&\n//         totalMenu[0].subMenu.filter(su => {\n//           return [\"access_control\", \"user_roles\", \"user_accounts\"].includes(\n//             su.key\n//           );\n//         });\n//       finalLink = \"\";\n//       finalLink =\n//         accessControlCheck && accessControlCheck.length > 0\n//           ? \"/configure/access_control/user_accounts\"\n//           : \"/configure/license_subscriptions\";\n//     }\n//     let routeLink = \"\";\n//     switch (key) {\n//       case \"Protect\":\n//         routeLink =\n//           props.orgType === constant.MSP_ORG_TYPE\n//             ? \"/protect/customer-accounts/all\"\n//             : \"/protect/sources/all\";\n//         break;\n//       case \"Analyze\":\n//         routeLink = \"/analyze/jobs/all\";\n//         break;\n//       case \"Configure\":\n//         routeLink =\n//           props.orgType === constant.MSP_ORG_TYPE &&\n//           props.roleId !== constant.MSP_ADMIN &&\n//           props.roleId !== constant.MSP_ACCOUNT_ADMIN\n//             ? \"/configure/infrastructure/proxies\"\n//             : props.roleId === constant.MSP_ADMIN ||\n//               props.roleId === constant.MSP_ACCOUNT_ADMIN\n//             ? finalLink\n//             : \"/configure/infrastructure/hypervisors\";\n//         break;\n//       case \"Monitor\":\n//         routeLink = \"/monitor\";\n//         break;\n//       case \"Recover\":\n//         routeLink = \"/recover\";\n//         break;\n//       case \"Support\":\n//         routeLink = \"/user_support\";\n//         break;\n//       case \"Profile\":\n//         routeLink = \"/profile\";\n//         break;\n//       default:\n//         routeLink = \"/monitor\";\n//     }\n\n//     return routeLink;\n//   };\n\n//   const active = props.active;\n\n  return (\n    <Tabs\n    //   value={handleTabActiveValue(active)}\n      variant=\"fullWidth\"\n      indicatorColor=\"primary\"\n      textColor=\"primary\"\n      aria-label=\"icon label tabs example\"\n      style={{\n        maxWidth: \"50%\",\n        width: 825\n      }}\n    >\n      {/* {renderTabs()} */}\n    </Tabs>\n  );\n};\n\n\n\nexport default PrimaryNavigator;\n\n// PrimaryNavigator.defaultProps = {\n//   isImpersonationView: false,\n//   brandDetails: null,\n//   orgType: null,\n//   brandingFrom: \"\"\n// };\n\n\n\n// /**\n//  * Maps state to the props of the component in React Redux connection\n//  * @param state\n//  */\n// const mapStateToProps = state => ({\n//   brandDetails: state.configureReducer.brandData,\n//   logoImageData: state.configureReducer.logoImgData,\n//   brandingFrom: state.configureReducer.brandingFrom,\n//   roleId: getRoleId(state)\n// });\n\n// export default withRouter(connect(mapStateToProps, {})(PrimaryNavigator));\n","import React, { useState } from 'react'\nimport SubComponentRouter from '../../routes/SubComponentRouter'\nimport UMTable from './UMTable/UMTable'\nimport GridTab from '../common/tab/GridTab'\nimport FormattedMessage from '../common/formatted-message'\nimport Icon from '../common/icon/IconMui'\nimport PersonIcon from '@mui/icons-material/Person'\nimport GroupsIcon from '@mui/icons-material/Groups'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'\nimport Navigator from '../common/navigator'\n\nfunction UserManagement(props: any) {\n  debugger\n\n  const [selectedTab, setSelectedTab] = useState(0)\n\n  let tabOptions = []\n\n  tabOptions.push(\n    {\n      tab: (\n        <div>\n          <span className=\"d-flex align-items-center justify-content-center alert-icon-wrapper\">\n            <Icon icon={GroupsIcon} />\n          </span>\n          <label htmlFor=\"tab-text\" className=\"tab-text word\">\n            <FormattedMessage id=\"Users\" defaultMessage=\"Users\" />\n          </label>\n        </div>\n      ),\n      testId: 'oGncGr',\n      tabkey: 'Users',\n      content: <UMTable />,\n    },\n    {\n      tab: (\n        <div>\n          <span className=\"d-flex align-items-center justify-content-center alert-icon-wrapper\">\n            <Icon icon={PersonIcon} />\n          </span>\n          <label htmlFor=\"tab-text\" className=\"tab-text word\">\n            {/* <FormattedMessage\n              id=\"alerts.tab.criticals\"\n              defaultMessage=\"Customers\"\n            /> */}\n            Customers\n          </label>\n        </div>\n      ),\n      testId: 'w3LtVG',\n      tabkey: 'Customers',\n      content: <>\"Tab2\"</>,\n    },\n    {\n      tab: (\n        <div>\n          <span className=\"d-flex align-items-center justify-content-center alert-icon-wrapper\">\n            <Icon icon={ManageAccountsIcon} />\n          </span>\n          <label htmlFor=\"tab-text\" className=\"tab-text word\">\n            Accounts\n            {/* <FormattedMessage\n              id=\"alerts.tab.criticals\"\n              defaultMessage=\"Accounts\"\n            /> */}\n          </label>\n        </div>\n      ),\n      testId: 'w3LtVG',\n      tabkey: 'Accounts',\n      content: <>\"Tab3\"</>,\n    },\n  )\n\n  return (\n    <div className=\"app-content\">\n      <Navigator />\n\n      {/* <GridTab\n        customStyle={{\n          background: '#fff',\n          marginTop: '5px',\n        }}\n        tabOptions={tabOptions}\n        tabHandleChange={(val: any) => {\n          setSelectedTab(val)\n        }}\n        detailsTab={undefined}\n        tabIndex={undefined}\n        vertical={undefined}\n        animation={undefined}\n        routeLink={undefined}\n        defaultTab={undefined}\n        customStyleObject={undefined}\n        stickyTabs\n      /> */}\n      <SubComponentRouter\n        {...props}\n        routes={props.routes}\n        secondaryNavigation={props.secondaryNavigation}\n        handleSelectFilter={props.handleSelectFilter}\n        secondaryKey={props.secondaryKey}\n      />\n    </div>\n  )\n}\n\nexport default UserManagement\n","import homeReducer from \"../../state/reducers/homeReducer\";\nimport login from \"../../state/reducers/loginReducer\";\nimport ccDataGrid from \"../../state/reducers/ccDataGrid\";\nimport UserManagement from \"./UserManagement\";\nexport const reducers = {ccDataGrid};\nexport const Component = UserManagement;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Routes } from \"react-router-dom\";\nimport AsyncComponent from \"../components/common/async\";\n\n// wrap <Route> and use this everywhere instead, then when\n// sub routes are added to any route it'll work\nclass SubComponentRouter extends React.Component {\n  render() {\n    const routes = this.props.routes;\n    return (\n      <Routes>\n        {routes.map(route => (\n          // Render <Route>s with the same paths as\n          // above, with main components to populate grid area.\n          <Route\n            key={route.key}\n            path={route.path}\n            element={\n              <AsyncComponent\n                {...this.props}\n                routes={route.routes}\n                moduleProvider={route.main}\n              />\n            }\n          />\n        ))}\n      </Routes>\n    );\n  }\n}\n\nSubComponentRouter.defaultProps = {\n  routes: []\n};\n\nSubComponentRouter.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({}))\n};\n\nexport default SubComponentRouter;\n","import componentRouter from \"./ComponentRouter\";\nimport subComponentRouter from \"./SubComponentRouter\";\nimport tabComponentRouter from \"./TabComponentRouter\";\n\nexport const ComponentRouter = componentRouter;\nexport const SubComponentRouter = subComponentRouter;\nexport const TabComponentRouter = tabComponentRouter;\n"],"names":["reducers","homeReducer","Component","_jsx","children","props","_jsxs","SubComponentRouter","_objectSpread","UniqueCustomer","UserDetails","Customer","login","Profile","combineReducersWithNamespace","getNamespace","state","arguments","length","undefined","action","namespace","stateWithNamespace","_defineProperty","Object","keys","reduce","nextState","key","selectedSavedSearchInitialState","filter_id","filter_name","updateSelectedOptions","option","organization_type","isImpersonationView","selectedOptions","cloneDeep","type","data","hasOwnProperty","arrayToReturn","selectedOption","options","filter","item","value","toString","label","push","constant","Array","isArray","map","selOpt","index","id","labelSelOpt","valueSelOpt","ui","combineReducers","sorted","ccDataGridConstants","page","response","pagination","curr_page","pages","total_page","pageSize","page_size","totalSize","total_size","columns","checked","rVal","rowIds","rowId","showAdvancedSearchForm","advancedSearch","values","showCCDataGridCurrentSearch","advancedSearchOptions","advancedSearchOptionsUnChanged","advancedSearchOptionsSelected","optionsForTags","selectedSavedSearch","userSearchData","userSearchList","systemSearchData","systemSearchList","showSaveSearchModal","saveSearchText","manageSaveSearchOptions","answers","orignalOptions","updateOptions","actualOptions","manageSelectedSavedSearch","considerAdvancedSearchOptions","entitiesInitialState","byId","allIds","ccDataGrid","config","additionalParameters","loading","entities","forEach","r","_rowId","refreshGrid","api","ccDataGridId","withCCDataGrid","WrappedComponent","CCDataGridConsumer","context","withLoading","connect","ownProps","ccDataGridUniqueId","isLoading","ccDataGridSelectors","withEntities","ReactIntlFormattedMessage","ID_PREFIX","_ref","className","title","color","variant","size","endIcon","disabled","customButtonStyle","menuAlign","testId","_ref$closeOnClick","closeOnClick","showManageSettingsModal","closeTriggeredFromParent","_React$useState","React","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","useEffect","handleClose","_Fragment","Button","concat","content","onClick","event","currentTarget","style","Menu","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormattedBrandMessage","_props$id","_props$defaultMessage","defaultMessage","_props$brand_names","brand_names","ARCSERVE_PRODUCT_NAME","CD_PRODUCT_NAME","CH_PRODUCT_NAME","UDP_PRODUCT_NAME","_props$values","FormattedMessage","defaultProps","getLogin","LoadingDots","ActionDropdown","showDateRange","onMenuItemClick","optionIndex","render","hasi18nSupport","disabledOptions","skipDefaultOption","defaultOptionKey","intl","defaultOptionValue","pullRight","dropup","keyAsTestId","_objectWithoutProperties","_excluded","handleOnSelect","eventKey","assign","showPicker","processMenuItem","isDisabled","menuid","customKey","MenuItem","split","pop","fontSize","dropdownClass","get","DropdownButton","e","parentNode","stopPropagation","unshift","formatMessage","renderMenuItem","injectIntl","onDelete","Chip","IconClass","icon","sx","THeader","_ref$ccDataGrid","_ref$ccDataGrid$confi","hideCheckbox","hideGridSettings","onActions","hideSaveSearchLink","AdvancedSearchForm","gridHeaderButtons","columnsModel","groupActionHandler","filterType","checkedItems","checkedEntities","availableBulkActions","_ref$children","isXs","twoFactorRequired","useMediaQuery","margin","Grid","container","spacing","marginBottom","marginLeft","xs","sm","md","lg","alignItems","justifyContent","xl","htmlFor","KeyboardArrowDownIcon","actionKey","GridSettings","disableManageSaveSearches","columnsModelData","Icon","SettingsOutlinedIcon","compose","dispatch","uncheckAll","ccDataGridActions","checkRows","_len","_key","uncheckRow","_ccDataGrid$config","ccValue","organizationInfo","two_factor_required","currentOptionToTags","getAdvancedSearchOptions","originalAdvancedSearchOptions","searchOption","getAdvancedSearchCurrentSearchCriteria","bindActionCreators","callApiForAdvancedSearch","ccDataGridShowCurrentSearch","GridColumnCellTypes","CHECKBOX_CELL","LINK_CELL","LINK_CELL_MUI","LINK_CELL_WITH_ICON","ICON_CELL","ICON_CELL_MUI","OVERLAY_CELL","NUMERICAL_TEXT_CELL","SHORT_TEXT_CELL","SHORT_TEXT_CELL_MUI","LONG_TEXT_CELL","LONG_TEXT_CELL_MUI","ACTION_DROPDOWN_CELL","ICON_TEXT_CELL","MULTILINE_TEXT_CELL","TWOLINE_TEXT_CELL","TWOLINE_TEXT_CELL_MUI","PROGRESS_TEXT_CELL","MULTI_TYPE","IMAGE_CELL","EDIT_DROPDOWN_CELL","MULTI_SELECT_DROPDOWN_CELL","ID_VALUE_CELL","DATE_TIME_CELL","DURATION","SINGLE_SELECT_DROPDOWN_CELL","SINGLE_SELECT_SCROLL_DROPDOWN_CELL","INPUT_CELL","RADIO_BUTTON_CELL","EMPTY_TEXT_CELL","LATEST_JOB_LINK_CELL","LATEST_JOB_TEXT_CELL","EXTERNAL_LINK_CELL","RENDER_POLICY_OVERLAY_CELL","RENDER_DESTINATION_OVERLAY_CELL","RENDER_POLICY_OVERLAY_CELL_WITHOUT_LINK","RENDER_ROLE_OVERLAY_CELL","STATE_LOADER_CELL","WRAPPED_CELL","WRAPPED_CELL_WITH_HYPERLINK","HOVER_CELL","MULTIPLE_POLICY_LINK_CELL","COMPONENT_CELL","ICON_LINK_CELL","CELL_ICON","FORMATTED_LOCALIZED_TEXT_CELL","BYTE_CELL","BYTE_CELL_MUI","JOB_TYPE_CELL","BUTTON_ACTION","GridColumnStatusTypes","IN_PROGRESS","SCHEDULED","GridColumnCellWidth","OVERLAY_CELL_MAX","MULTILINE_CONTENT_CELL","GridColumnHeaderTypes","HEADER_TEXT","HEADER_SELECT","HEADER_TEXT_SELECT","HEADER_TEXT_MUI","OverlayTypes","TOOLTIP","POPOVER","icons","skipped","path","idle","success","active","backupjob_proc_exit","incomplete","stop","canceled","finished","waiting","missed","failed","crash","license_failed","notification","help","unprotect","information","ok","allok","statusdetails","error","critical","warning","remove_photo","unpinned","pinned","protect","machine","view","instant_vm","agentless_vm","one_drive","office_365","shared_folder","share_point","back","partial_protect","connected","online","notconnected","offline","monitor_menu","analyze_menu","protect_menu","recover_menu","configure_menu","refresh","download","maximize","collapseSideBar","search","windows","linux","mac","settings","dragdrop","close","connector","complete","listView","cloud","infoToaster","warningToaster","successToaster","errorToaster","delete","switchview","clock","calendar","chevron","alert","internet","vpnuser","routerArrow","collapse","networkLines","folder","save","file","call","knowledgeBase","email","salesChat","chat","add","rps","volumes_information","fillRule","clipRule","common_information","trash","up_arrow","down_arrow","question","styles","default","svg","display","verticalAlign","width","height","viewBox","i","keyIndex","d","fill","_props$options","customStyle","_ref$className","_ref$customMenuClassN","customMenuClassName","displayValue","hideFloatingLabel","hideOutline","inputid","selectid","formControl","fontFamily","position","top","backgroundColor","marginTop","isEmpty","FormControl","InputLabel","Select","disableUnderline","labelId","displayEmpty","defaultValue","renderValue","onChange","target","role","inputProps","name","MenuProps","PaperProps","HeaderDropdown","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","this","displayIdentifier","defaultDisplayMessage","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","classToAdd","minWidth","SelectDropdown","dropdownOptions","_ref$loading","brandNames","_","BRAND_NAMES","dropdownAllOptions","hasi18nSupportByLabel","isMultiSelect","selectedValues","indexOf","textFieldClassname","selectDropdownId","Autocomplete","noOptionsText","openText","closeText","multiple","limitTags","disableCloseOnSelect","getOptionLabel","newValues","reason","currentSelectedOption","updatedValues","_toConsumableArray","getSelectedOption","optionType","renderTags","paddingRight","border","renderOption","Checkbox","marginRight","renderInput","params","TextField","placeholder","isMenuCloseOnSelect","isDropdownDisabled","class","noResultsText","FolderIcon","FileIcon","formatBytes","a","b","f","Math","floor","log","parseFloat","pow","toFixed","getLocaleDate","timestamp","format","lang","locale","navigator","languages","userLanguage","language","moment","DataGridConstants","DataGridHelper","getColumnData","columnConfigurations","columnSpecifications","_this","column","getColumnDefinition","identifier","columnData","columnIdentifier","find","columnDefinition","accessor","getCCDataGridColumnDefinitions","_this2","columnDefinitions","show","columnObj","parseInt","sort","sortable","t","buildColumnRenderSchema","sortHandler","getColumnDefinitions","callback","_this3","columnDef","disableSortBy","columnHeader","renderHeaderForType","renderHeader","addtionalOptions","additionOptions","sortCallback","customSort","columnCell","renderCellForType","renderRecord","actionDropdown","editInputCallback","editInput","editDropdownCallback","editDropdown","multiSelectCallback","multiSelect","radioButtonCallback","radioSelected","buttonActionCallback","buttonAction","columnCellWidth","setCellWidthForType","columnHeaderClass","setClassForHeaderType","columnSortClass","Header","sortMethod","Cell","renderCellForCheckbox","renderCellForIconMUI","renderCellForLink","renderCellForLinkMUI","renderCellForLinkWithIcon","renderCellForExternalLink","renderCellForShortText","renderCellForShortTextMUI","renderCellForNumericalText","renderCellForLongText","renderCellForLongTextMUI","renderCellForHoverText","renderCellForActionDropdown","renderCellForIconText","renderCellForMultilineText","renderCellForTwolineText","renderCellForTwolineTextMUI","renderCellForDateTime","renderCellForImage","renderCellForEditDropdown","renderCellForMultiSelectDropdown","renderCellForIdValue","renderCellForSingleSelectDropdown","renderCellForInput","renderCellForRadioButton","renderCellForEmptyText","renderCellForWrappedText","renderCellForWrappedTextWithHyperlink","renderCellForStateLoader","renderCellForComponent","renderCellForIconLink","renderIconCell","renderFormattedLocalizedTextCell","renderByteCell","renderByteCellMUI","renderCellForJobType","renderCellForActionButton","renderCellForDuration","renderHeaderForText","renderHeaderForSelect","renderHeaderForTextSelect","renderHeaderForTextMUI","setCellWidthForCheckbox","setCellWidthForIcon","setCellWidthForLink","setCellWidthForActionDropdown","setCellWidthForProgressText","setCellWidthForEditDropdown","setCellWidthForMultiSelectDropdown","setCellWidthForIdValue","setCellWidthForDateTime","setCellWidthForSingleSelectDropdown","setCellForInput","setCellForRadioButton","setCellWidthForEmptyText","setCellWidthForActionButton","setClassForSelectHeader","setClassForTextSelectHeader","setSortTrueFalseValue","headerClassName","resizable","cell","original","dateString","ts","CD_RECOVER_POINT_BROWSE_CURRENT_RP_NAME","timeDiff","loadingBar","overlayData","text","iconClass","Link","to","href","isDisabledPerm","row","overflow","textOverflow","RECOVERD_VMS_LOADING_STATES","isNumber","wordWrap","whiteSpace","wordBreak","anchorLink","link","right","left","anchorText","aLink","anchorTextArr","hrefs","anchorLinkArr","start","end","substring","match","substr","preventDefault","window","console","bind","dropdown","_useState","useState","_useState2","cellValue","setCellValue","_id","onBlur","inputField","input","_dropdown$selectedOpt","splice","apply","failedCount","status","date","line1","line2","initial","imageUrl","alt","borderRadius","src","textAlign","paddingLeft","cursor","onClickAction","_cell$value","nameOnButton","preText","disabledButton","RowPerPageText","GridFooter","usePaginationWithApi","onPageChange","onPageSizeChange","footerId","useDispatch","updateGridCurrentPageNumber","currentPage","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","newPage","Number","onRowsPerPageChange","updateGridCurrentPageSize","gridPageSize","labelRowsPerPage","labelDisplayedRows","from","pageSizeOptions","activePage","setActivePage","_useState3","_useState4","startCount","setStartCount","_useState5","_useState6","endCount","setEndCount","padding","Pagination","ceil","defaultPage","showFirstButton","showLastButton","decrementedPage","handlePageSelect","renderItem","PaginationItem","pageNumber","pageIndex","setPageSize","nextPage","previousPage","currentPageSize","_ref2","ActionsComponent","IconButton","KeyboardArrowLeft","KeyboardArrowRight","gotoPage","usePaginationWithPageNumber","GridFooterWithApiAndWithPageNumber","GridFooterWithApiAndWithoutPageNumber","GridFooterWithoutApiAndWithPageNumber","GridFooterWithoutApiAndWithoutPageNumber","GridLoader","GridNoDataText","noDataText","DataGrid","prevSortedColumn","setPrevSortedColumn","gridcolumn","gridData","SubComponent","_useTable","useTable","autoResetResize","autoResetSortBy","autoResetSelectedRows","manualSortBy","initialState","useSortBy","useFlexLayout","useResizeColumns","usePagination","useRowSelect","hooks","visibleColumns","maxWidth","getTableProps","headerGroups","rows","prepareRow","_useTable$state","sortBy","columnResizing","onSortedChange","columnWidths","newResized","colWidths","isResizingColumn","onResizedChange","gridRows","setOpen","Paper","elevation","showPagination","TableContainer","MaUTable","stickyHeader","TableHead","zIndex","headerGroup","TableRow","getHeaderGroupProps","headers","canSort","sortArrow","TableSortLabel","direction","TableCell","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","getResizerProps","isResizing","TableBody","getRowProps","is_deleted","isSelected","KeyboardArrowUpIcon","cells","getCellProps","onRowCellClick","Collapse","in","timeout","unmountOnExit","getData","subComponentDetails","noRowsFound","defaultPageSize","allSelected","canNext","canPrevious","isSingleSelect","TBody","totalEntities","total","updatePage","updatePageSize","setColumnWidth","updateSorted","tbodyProps","ccDataGridReplaceId","_len2","_key2","columnsProp","rest","processRecords","columnsDefinition","columnsData","_ccDataGrid$config$lo","localSearch","allChecked","checkBoxColumn","currentEntities","processedEntities","useMemo","ActionDropdownMUI","IconMUI","ArrowDropDownIcon","maxHeight","minHeight","paginationCheck","useCallback","newSorted","manual","freezeWhenExpanded","reducer","columnConfiguredData","showManagedSearchModal","manageSettingColumn","CheckBoxItem","updateColumnStateData","updateGridCheckBoxSettings","linkColor","checkedVar","stateColumnData","updateColumnShowHide","bottom","DragIndicatorIcon","getManageSettingColumnState","createSelector","primaryNavigation","updateReorderColumns","reOrderColumns","layout","columnsTempDataArr","columnsDataArr","JSON","parse","stringify","obj","x","y","w","h","isResizable","isDraggable","listStyle","eventkey","renderManageOverlayHeader","ReactGridLayout","cols","rowHeight","onDragStart","l","n","p","li","onDragStop","oldItem","newItem","draggableHandle","getColumnConfiguredDataState","getShowManagedSearchModalState","getSavedSearchDataState","CCTableUnconnected","_PureComponent","_this$props","initialize","fetchData","pollInterval","pollTimer","setInterval","clearInterval","_this$props2","_this$props2$Advanced","_this$props2$advanced","addSourceOptionClick","showAddSourceComponent","ccDataGridCloneId","CCDataGridProvider","flexDirection","PureComponent","_ownProps$defaultAdva","defaultAdvancedSearchOptions","_ownProps$config","restConfig","_excluded2","polling","_React$createContext","Provider","Consumer","Ret","CCTable","HeaderTypes","CellTypes","CCDataGrid","createCCDataGrid","CCDATAGRID_ID","primaryKey","FETCH_SITES","persist","sourceGroupsAttributes","COLUMN_DEFS","showDialog","Dialog","sourceGroupsData","sourceGroup","groupName","rowInfo","site_type","product_type","Tabs","indicatorColor","textColor","tab","GroupsIcon","tabkey","UMTable","PersonIcon","ManageAccountsIcon","Navigator","routes","secondaryNavigation","handleSelectFilter","secondaryKey","Routes","route","Route","element","AsyncComponent","moduleProvider","main","subComponentRouter"],"sourceRoot":""}